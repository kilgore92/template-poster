





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">



  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-d876e21057f406b37686f3dc7b9666f5957cda4847a48ec11e040df065624617.css" integrity="sha256-2HbiEFf0BrN2hvPce5Zm9ZV82khHpI7BHgQN8GViRhc=" media="all" rel="stylesheet" />
  <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-05196ad2eeaad9504e7bb3adc33d4d19adc2bad851a35ed9b9b0f73702c554f5.css" integrity="sha256-BRlq0u6q2VBOe7Otwz1NGa3CuthRo17ZubD3NwLFVPU=" media="all" rel="stylesheet" />
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>TeXTemplates/tuelogo.eps at master · latexers/TeXTemplates</title>
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">


  <link rel="assets" href="https://assets-cdn.github.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MTQ5NjQ0MTg0OjJlZDgwMDI1MTM4MjMxNWYzM2U2NTk5ZDZlNWQ2ZWU3YjU5NWFjOWMzMjY0OTA3Y2I5OWVkMTczYzFhZDRmMWY=--960c6c2815d1d049993f5ea4411d5822e4de47eb">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="FCAB:F798:9007A2:E96768:58B00DF8" data-pjax-transient>
  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

  <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="https://collector.githubapp.com/github-external/browser_event" name="octolytics-event-url" /><meta content="FCAB:F798:9007A2:E96768:58B00DF8" name="octolytics-dimension-request_id" /><meta content="10584818" name="octolytics-actor-id" /><meta content="vcheplygina" name="octolytics-actor-login" /><meta content="1125cc959ca4089e650d9efb2b65e3779185a1aa76d6cbd1fc54a8b5bc82473a" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />



  <meta class="js-ga-set" name="dimension1" content="Logged In">



      <meta name="hostname" content="github.com">
  <meta name="user-login" content="vcheplygina">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="MjUxMmE3OWI2NmZmNzU2MzMxYTdkODc4MmFiOTNkYWQ1YWMwYzY4NThmMDA2MThiYjI4MmZkYTYxY2Q1MTE1Y3x7InJlbW90ZV9hZGRyZXNzIjoiMTMxLjE1NS4yMDUuNTgiLCJyZXF1ZXN0X2lkIjoiRkNBQjpGNzk4OjkwMDdBMjpFOTY3Njg6NThCMDBERjgiLCJ0aW1lc3RhbXAiOjE0ODc5MzI5MjUsImhvc3QiOiJnaXRodWIuY29tIn0=">


  <meta name="html-safe-nonce" content="bf6400d2b6028907e9ccc96f5f9ffdc97c77507c">

  <meta http-equiv="x-pjax-version" content="d315960581ecedf86906f3f215b9732a">
  

    
  <meta name="description" content="TeXTemplates - This is an collection about TeX templates! It will includes beamers, journal templates, slides, posters and so on.">
  <meta name="go-import" content="github.com/latexers/TeXTemplates git https://github.com/latexers/TeXTemplates.git">

  <meta content="7807241" name="octolytics-dimension-user_id" /><meta content="latexers" name="octolytics-dimension-user_login" /><meta content="43738746" name="octolytics-dimension-repository_id" /><meta content="latexers/TeXTemplates" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="43738746" name="octolytics-dimension-repository_network_root_id" /><meta content="latexers/TeXTemplates" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/latexers/TeXTemplates/commits/master.atom" rel="alternate" title="Recent Commits to TeXTemplates:master" type="application/atom+xml">


    <link rel="canonical" href="https://github.com/latexers/TeXTemplates/blob/master/Slides/tuepdfscreen2008/tuelogo.eps" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

  </head>

  <body class="logged-in env-production windows vis-public page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    



        <div class="header" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="32" version="1.1" viewBox="0 0 16 16" width="32"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>


        <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/latexers/TeXTemplates/search" class="js-site-search-form" data-scoped-search-url="/latexers/TeXTemplates/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
      <div class="header-search-scope">This repository</div>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
    </label>
</form></div>


      <ul class="header-nav float-left" role="navigation">
        <li class="header-nav-item">
          <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
            Pull requests
</a>        </li>
        <li class="header-nav-item">
          <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
            Issues
</a>        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com/" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
      </ul>

    
<ul class="header-nav user-nav float-right" id="user-links">
  <li class="header-nav-item">
    
    <a href="/notifications" aria-label="You have no unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s js-socket-channel js-notification-indicator" data-channel="tenant:1:notification-changed:10584818" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
        <span class="mail-status "></span>
        <svg aria-hidden="true" class="octicon octicon-bell float-left" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"/></svg>
</a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
       aria-label="Create new…"
       data-ga-click="Header, create new, icon:add">
      <svg aria-hidden="true" class="octicon octicon-plus float-left" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="latexers/TeXTemplates">This repository</span>
  </div>
    <a class="dropdown-item" href="/latexers/TeXTemplates/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </div>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name tooltipped tooltipped-sw js-menu-target" href="/vcheplygina"
       aria-label="View profile and more"
       data-ga-click="Header, show menu, icon:avatar">
      <img alt="@vcheplygina" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/10584818?v=3&amp;s=40" width="20" />
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <div class="dropdown-menu dropdown-menu-sw">
        <div class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">vcheplygina</strong>
        </div>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/vcheplygina" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a>
        <a class="dropdown-item" href="/vcheplygina?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a>
        <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
          Explore
        </a>
          <a class="dropdown-item" href="/integrations" data-ga-click="Header, go to integrations, text:integrations">
            Integrations
          </a>
        <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Hz4W1UaEB8rpFoCndLNxAA0tUTIewSPaUyS6xw4fPD2jD6VJOO/8uCocTQBA3b3iyipwPjAX8EvTYvVEq21TSw==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </li>
</ul>

    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="sr-only" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Qt3uR51UlwnNkcBk3kAi00kr8VYMOJAkF4aB8ITMvB3+7F3b4z9sew6bDcPqLu4xjizQWiLuQ7WXwM5zIb7Taw==" /></div>
      <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
        Sign out
      </button>
</form>
    
  </div>
</div>


      

  </div>

  <div id="start-of-content" class="accessibility-aid"></div>

    <div id="js-flash-container">
</div>



  <div role="main">
      <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      


<div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
  <div class="container repohead-details-container">

    

<ul class="pagehead-actions">

  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="01b+sDm9ZOUZak19tRlVSHlWc61DM+5+KM2xtXXnXdCuzMFIRWwiUcDaNNK0WwxoXXc/gp6lZ6rvZ3tFoAX2mw==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="43738746" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/latexers/TeXTemplates/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target" role="button" tabindex="0" aria-haspopup="true"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
              <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
              Watch
            </span>
          </a>
          <a class="social-count js-social-count"
            href="/latexers/TeXTemplates/watchers"
            aria-label="2 users are watching this repository">
            2
          </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                      Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
      <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/latexers/TeXTemplates/unstar" class="starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="haCcViUhMqUQ/qT5V6+YHp+GJqP+PvTai1MWTphoJ6JtES5jhS8eMx6Xs+AIFK/x+AeJYeSKssPFuZR7SxzeUg==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar latexers/TeXTemplates"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/latexers/TeXTemplates/stargazers"
           aria-label="0 users starred this repository">
          0
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/latexers/TeXTemplates/star" class="unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="zFtaURG8wq3+2zA8QYm3gfInYEwGW63trRl8vqb0oIMsO3cYu0Af9Tu5u8PbqsQESZ7aLYfaEJAwwKSi3Zjsyg==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star latexers/TeXTemplates"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/latexers/TeXTemplates/stargazers"
           aria-label="0 users starred this repository">
          0
        </a>
</form>  </div>

  </li>

  <li>
          <a href="#fork-destination-box" class="btn btn-sm btn-with-count"
              title="Fork your own copy of latexers/TeXTemplates to your account"
              aria-label="Fork your own copy of latexers/TeXTemplates to your account"
              rel="facebox"
              data-ga-click="Repository, show fork modal, action:blob#show; text:Fork">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
            Fork
          </a>

          <div id="fork-destination-box" style="display: none;">
            <h2 class="facebox-header" data-facebox-id="facebox-header">Where should we fork this repository?</h2>
            <include-fragment src=""
                class="js-fork-select-fragment fork-select-fragment"
                data-url="/latexers/TeXTemplates/fork?fragment=1">
              <img alt="Loading" height="64" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-128.gif" width="64" />
            </include-fragment>
          </div>

    <a href="/latexers/TeXTemplates/network" class="social-count"
       aria-label="1 user forked this repository">
      1
    </a>
  </li>
</ul>

    <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/latexers" class="url fn" rel="author">latexers</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/latexers/TeXTemplates" data-pjax="#js-repo-pjax-container">TeXTemplates</a></strong>

</h1>

  </div>
  <div class="container">
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/latexers/TeXTemplates" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /latexers/TeXTemplates" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/latexers/TeXTemplates/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /latexers/TeXTemplates/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="counter">0</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/latexers/TeXTemplates/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /latexers/TeXTemplates/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="counter">0</span>
      <meta itemprop="position" content="3">
</a>  </span>

  <a href="/latexers/TeXTemplates/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /latexers/TeXTemplates/projects">
    <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
    Projects
    <span class="counter">0</span>
</a>
    <a href="/latexers/TeXTemplates/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /latexers/TeXTemplates/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

  <a href="/latexers/TeXTemplates/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="pulse /latexers/TeXTemplates/pulse">
    <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"/></svg>
    Pulse
</a>
  <a href="/latexers/TeXTemplates/graphs" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors /latexers/TeXTemplates/graphs">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Graphs
</a>

</nav>

  </div>
</div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    

<a href="/latexers/TeXTemplates/blob/4e62a228e41a7a9188215d5bae2b2bb65d820b5d/Slides/tuepdfscreen2008/tuelogo.eps" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:2b39fd88ab4e07ff5341bec3acb786e7 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <i>Branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tag…" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/latexers/TeXTemplates/blob/master/Slides/tuepdfscreen2008/tuelogo.eps"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="BtnGroup float-right">
    <a href="/latexers/TeXTemplates/find/master"
          class="js-pjax-capture-input btn btn-sm BtnGroup-item"
          data-pjax
          data-hotkey="t">
      Find file
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
  </div>
  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/latexers/TeXTemplates"><span>TeXTemplates</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/latexers/TeXTemplates/tree/master/Slides"><span>Slides</span></a></span><span class="separator">/</span><span class="js-path-segment"><a href="/latexers/TeXTemplates/tree/master/Slides/tuepdfscreen2008"><span>tuepdfscreen2008</span></a></span><span class="separator">/</span><strong class="final-path">tuelogo.eps</strong>
  </div>
</div>

<include-fragment class="commit-tease" src="/latexers/TeXTemplates/contributors/master/Slides/tuepdfscreen2008/tuelogo.eps">
  <div>
    Fetching contributors&hellip;
  </div>

  <div class="commit-tease-contributors">
    <img alt="" class="loader-loading float-left" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" />
    <span class="loader-error">Cannot retrieve contributors at this time</span>
  </div>
</include-fragment>

<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/latexers/TeXTemplates/raw/master/Slides/tuepdfscreen2008/tuelogo.eps" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/latexers/TeXTemplates/blame/master/Slides/tuepdfscreen2008/tuelogo.eps" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/latexers/TeXTemplates/commits/master/Slides/tuepdfscreen2008/tuelogo.eps" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://windows.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/latexers/TeXTemplates/edit/master/Slides/tuepdfscreen2008/tuelogo.eps" class="inline-form js-update-url-with-hash" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="aJdfXuTbB86U72OWvOSYmVOWm40PxyCN5Yk/3GqACeKKCuE8vvJcGYE/iXNCttULS4wbYsrdA8PEN9XTUpI4OA==" /></div>
          <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
          </button>
</form>        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/latexers/TeXTemplates/delete/master/Slides/tuepdfscreen2008/tuelogo.eps" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="xCfuHJ/vSC+lXeQqP7W9ZNfe7yPXCcvaz5RG7d+dE4wfe+3UGZkY1EcPgLw+gj3nEhRg3dyEZm6JHFmFSWH82Q==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      9367 lines (9343 sloc)
      <span class="file-info-divider"></span>
    309 KB
  </div>
</div>

  

  <div itemprop="text" class="blob-wrapper data type-postscript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line">%!PS-Adobe-3.1 EPSF-3.0<span class="pl-c2"></span>%ADO_DSC_Encoding: MacOS Roman<span class="pl-c2"></span>%%Title: TUeLOG_P_RGB.eps<span class="pl-c2"></span>%%Creator: Adobe Illustrator(R) 12<span class="pl-c2"></span>%%AI8_CreatorVersion: 12.0.1<span class="pl-c2"></span>%AI9_PrintingDataBegin<span class="pl-c2"></span>%%For: Systeembeheer<span class="pl-c2"></span>%%CreationDate: 05-03-2007<span class="pl-c2"></span>%%BoundingBox: 0 0 1997 426<span class="pl-c2"></span>%%HiResBoundingBox: 0 0 1996.7999 425.1929<span class="pl-c2"></span>%%CropBox: 0 0 1996.7999 425.1929<span class="pl-c2"></span>%%LanguageLevel: 2<span class="pl-c2"></span>%%DocumentData: Clean7Bit<span class="pl-c2"></span>%%Pages: 1<span class="pl-c2"></span>%%DocumentNeededResources: <span class="pl-c2"></span>%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0<span class="pl-c2"></span>%%+ procset Adobe_CoolType_Utility_T42 1.0 0<span class="pl-c2"></span>%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0<span class="pl-c2"></span>%%+ procset Adobe_CoolType_Core 2.23 0<span class="pl-c2"></span>%%+ procset Adobe_AGM_Core 2.0 0<span class="pl-c2"></span>%%+ procset Adobe_AGM_Utils 1.0 0<span class="pl-c2"></span>%%DocumentFonts: <span class="pl-c2"></span>%%DocumentNeededFonts: <span class="pl-c2"></span>%%DocumentNeededFeatures: <span class="pl-c2"></span>%%DocumentSuppliedFeatures: <span class="pl-c2"></span>%%DocumentProcessColors:  Cyan Magenta Yellow Black<span class="pl-c2"></span>%%DocumentCustomColors: <span class="pl-c2"></span>%%CMYKCustomColor: <span class="pl-c2"></span>%%RGBCustomColor: <span class="pl-c2"></span>%ADO_BuildNumber: Adobe Illustrator(R) 12.0.1 x205 R agm 4.3861 ct 5.530<span class="pl-c2"></span>%ADO_ContainsXMP: MainFirst<span class="pl-c2"></span>%%EndComments<span class="pl-c2"></span>%%BeginDefaults<span class="pl-c2"></span>%%ViewingOrientation: 1 0 0 1<span class="pl-c2"></span>%%EndDefaults<span class="pl-c2"></span>%%BeginProlog<span class="pl-c2"></span>%%BeginResource: procset Adobe_AGM_Utils 1.0 0<span class="pl-c2"></span>%%Version: 1.0 0<span class="pl-c2"></span>%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.<span class="pl-c2"></span>systemdict /setpacking known<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentpacking<span class="pl-c2"></span>	true setpacking<span class="pl-c2"></span>} if<span class="pl-c2"></span>userdict /Adobe_AGM_Utils 70 dict dup begin put<span class="pl-c2"></span>/bdf<span class="pl-c2"></span>{<span class="pl-c2"></span>	bind def<span class="pl-c2"></span>} bind def<span class="pl-c2"></span>/nd{<span class="pl-c2"></span>	null def<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/xdf<span class="pl-c2"></span>{<span class="pl-c2"></span>	exch def<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/ldf <span class="pl-c2"></span>{<span class="pl-c2"></span>	load def<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/ddf<span class="pl-c2"></span>{<span class="pl-c2"></span>	put<span class="pl-c2"></span>}bdf	<span class="pl-c2"></span>/xddf<span class="pl-c2"></span>{<span class="pl-c2"></span>	3 -1 roll put<span class="pl-c2"></span>}bdf	<span class="pl-c2"></span>/xpt<span class="pl-c2"></span>{<span class="pl-c2"></span>	exch put<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/ndf<span class="pl-c2"></span>{ <span class="pl-c2"></span>	exch dup where{<span class="pl-c2"></span>		pop pop pop<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		xdf<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/cdndf<span class="pl-c2"></span>{<span class="pl-c2"></span>	exch dup currentdict exch known{<span class="pl-c2"></span>		pop pop<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		exch def<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/ps_level<span class="pl-c2"></span>	/languagelevel where{<span class="pl-c2"></span>		pop systemdict /languagelevel get exec<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		1<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>def<span class="pl-c2"></span>/level2 <span class="pl-c2"></span>	ps_level 2 ge<span class="pl-c2"></span>def<span class="pl-c2"></span>/level3 <span class="pl-c2"></span>	ps_level 3 ge<span class="pl-c2"></span>def<span class="pl-c2"></span>/ps_version<span class="pl-c2"></span>	{version cvr} stopped {<span class="pl-c2"></span>		-1<span class="pl-c2"></span>	}if<span class="pl-c2"></span>def<span class="pl-c2"></span>/set_gvm<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentglobal exch setglobal<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/reset_gvm<span class="pl-c2"></span>{<span class="pl-c2"></span>	setglobal<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/makereadonlyarray<span class="pl-c2"></span>{<span class="pl-c2"></span>	/packedarray where{<span class="pl-c2"></span>		pop packedarray<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		array astore readonly<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/map_reserved_ink_name<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup type /stringtype eq{<span class="pl-c2"></span>		dup /Red eq{<span class="pl-c2"></span>			pop (_Red_)<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			dup /Green eq{<span class="pl-c2"></span>				pop (_Green_)<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				dup /Blue eq{<span class="pl-c2"></span>					pop (_Blue_)<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					dup () cvn eq{<span class="pl-c2"></span>						pop (Process)<span class="pl-c2"></span>					}if<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}if<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/AGMUTIL_GSTATE 22 dict def<span class="pl-c2"></span>/get_gstate<span class="pl-c2"></span>{<span class="pl-c2"></span>	AGMUTIL_GSTATE begin<span class="pl-c2"></span>	/AGMUTIL_GSTATE_clr_spc currentcolorspace def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_clr_indx 0 def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_clr_comps 12 array def<span class="pl-c2"></span>	mark currentcolor counttomark<span class="pl-c2"></span>		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put<span class="pl-c2"></span>		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop<span class="pl-c2"></span>	/AGMUTIL_GSTATE_fnt rootfont def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_lw currentlinewidth def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_lc currentlinecap def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_lj currentlinejoin def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_ml currentmiterlimit def<span class="pl-c2"></span>	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf<span class="pl-c2"></span>	/AGMUTIL_GSTATE_sa currentstrokeadjust def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_op currentoverprint def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def<span class="pl-c2"></span>	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf<span class="pl-c2"></span>		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf<span class="pl-c2"></span>	/AGMUTIL_GSTATE_ht currenthalftone def<span class="pl-c2"></span>	/AGMUTIL_GSTATE_flt currentflat def<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/set_gstate<span class="pl-c2"></span>{<span class="pl-c2"></span>	AGMUTIL_GSTATE begin<span class="pl-c2"></span>	AGMUTIL_GSTATE_clr_spc setcolorspace<span class="pl-c2"></span>	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get<span class="pl-c2"></span>	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor<span class="pl-c2"></span>	AGMUTIL_GSTATE_fnt setfont<span class="pl-c2"></span>	AGMUTIL_GSTATE_lw setlinewidth<span class="pl-c2"></span>	AGMUTIL_GSTATE_lc setlinecap<span class="pl-c2"></span>	AGMUTIL_GSTATE_lj setlinejoin<span class="pl-c2"></span>	AGMUTIL_GSTATE_ml setmiterlimit<span class="pl-c2"></span>	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash<span class="pl-c2"></span>	AGMUTIL_GSTATE_sa setstrokeadjust<span class="pl-c2"></span>	AGMUTIL_GSTATE_clr_rnd setcolorrendering<span class="pl-c2"></span>	AGMUTIL_GSTATE_op setoverprint<span class="pl-c2"></span>	AGMUTIL_GSTATE_bg cvx setblackgeneration<span class="pl-c2"></span>	AGMUTIL_GSTATE_ucr cvx setundercolorremoval<span class="pl-c2"></span>	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx<span class="pl-c2"></span>		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer<span class="pl-c2"></span>	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or<span class="pl-c2"></span>		{<span class="pl-c2"></span>		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne<span class="pl-c2"></span>			{<span class="pl-c2"></span>			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark<span class="pl-c2"></span>			} if<span class="pl-c2"></span>		}{<span class="pl-c2"></span>		AGMUTIL_GSTATE_ht sethalftone<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	AGMUTIL_GSTATE_flt setflat<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/get_gstate_and_matrix<span class="pl-c2"></span>{<span class="pl-c2"></span>	AGMUTIL_GSTATE begin<span class="pl-c2"></span>	/AGMUTIL_GSTATE_ctm matrix currentmatrix def<span class="pl-c2"></span>	end<span class="pl-c2"></span>	get_gstate<span class="pl-c2"></span>}def<span class="pl-c2"></span>/set_gstate_and_matrix<span class="pl-c2"></span>{<span class="pl-c2"></span>	set_gstate<span class="pl-c2"></span>	AGMUTIL_GSTATE begin<span class="pl-c2"></span>	AGMUTIL_GSTATE_ctm setmatrix<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/AGMUTIL_str256 256 string def<span class="pl-c2"></span>/AGMUTIL_src256 256 string def<span class="pl-c2"></span>/AGMUTIL_dst64 64 string def<span class="pl-c2"></span>/AGMUTIL_srcLen nd<span class="pl-c2"></span>/AGMUTIL_ndx nd<span class="pl-c2"></span>/thold_halftone<span class="pl-c2"></span>{ <span class="pl-c2"></span>	level3<span class="pl-c2"></span>		{sethalftone currenthalftone}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			dup /HalftoneType get 3 eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>				sethalftone currenthalftone<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{<span class="pl-c2"></span>				begin<span class="pl-c2"></span>				Width Height mul {<span class="pl-c2"></span>					Thresholds read {pop} if<span class="pl-c2"></span>				} repeat<span class="pl-c2"></span>				end<span class="pl-c2"></span>				currenthalftone<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>} def <span class="pl-c2"></span>/rdcmntline<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentfile AGMUTIL_str256 readline pop<span class="pl-c2"></span>	(%) anchorsearch {pop} if<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/filter_cmyk<span class="pl-c2"></span>{	<span class="pl-c2"></span>	dup type /filetype ne{<span class="pl-c2"></span>		exch () /SubFileDecode filter<span class="pl-c2"></span>	}<span class="pl-c2"></span>	{<span class="pl-c2"></span>		exch pop<span class="pl-c2"></span>	}<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	[<span class="pl-c2"></span>	exch<span class="pl-c2"></span>	{<span class="pl-c2"></span>		AGMUTIL_src256 readstring pop<span class="pl-c2"></span>		dup length /AGMUTIL_srcLen exch def<span class="pl-c2"></span>		/AGMUTIL_ndx 0 def<span class="pl-c2"></span>		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{<span class="pl-c2"></span>			1 index exch get<span class="pl-c2"></span>			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put<span class="pl-c2"></span>			/AGMUTIL_ndx AGMUTIL_ndx 1 add def<span class="pl-c2"></span>		}for<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval<span class="pl-c2"></span>	}<span class="pl-c2"></span>	bind<span class="pl-c2"></span>	/exec cvx<span class="pl-c2"></span>	] cvx<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/filter_indexed_devn<span class="pl-c2"></span>{<span class="pl-c2"></span>	cvi Names length mul names_index add Lookup exch get<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/filter_devn<span class="pl-c2"></span>{	<span class="pl-c2"></span>	4 dict begin<span class="pl-c2"></span>	/srcStr xdf<span class="pl-c2"></span>	/dstStr xdf<span class="pl-c2"></span>	dup type /filetype ne{<span class="pl-c2"></span>		0 () /SubFileDecode filter<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	[<span class="pl-c2"></span>	exch<span class="pl-c2"></span>		[<span class="pl-c2"></span>			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx<span class="pl-c2"></span>			currentdict /srcStr get /readstring cvx /pop cvx<span class="pl-c2"></span>			/dup cvx /length cvx 0 /gt cvx [<span class="pl-c2"></span>				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx<span class="pl-c2"></span>				names_index Names length currentdict /srcStr get length 1 sub {<span class="pl-c2"></span>					1 /index cvx /exch cvx /get cvx<span class="pl-c2"></span>					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx<span class="pl-c2"></span>					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx<span class="pl-c2"></span>				} for<span class="pl-c2"></span>				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx<span class="pl-c2"></span>			] cvx /if cvx<span class="pl-c2"></span>			/end cvx<span class="pl-c2"></span>		] cvx<span class="pl-c2"></span>		bind<span class="pl-c2"></span>		/exec cvx<span class="pl-c2"></span>	] cvx<span class="pl-c2"></span>	end<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/AGMUTIL_imagefile nd<span class="pl-c2"></span>/read_image_file<span class="pl-c2"></span>{<span class="pl-c2"></span>	AGMUTIL_imagefile 0 setfileposition<span class="pl-c2"></span>	10 dict begin<span class="pl-c2"></span>	/imageDict xdf<span class="pl-c2"></span>	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def<span class="pl-c2"></span>	/imbufIdx 0 def<span class="pl-c2"></span>	/origDataSource imageDict /DataSource get def<span class="pl-c2"></span>	/origMultipleDataSources imageDict /MultipleDataSources get def<span class="pl-c2"></span>	/origDecode imageDict /Decode get def<span class="pl-c2"></span>	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def<span class="pl-c2"></span>	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse<span class="pl-c2"></span>	{<span class="pl-c2"></span>		/imbufCnt imageDict /DataSource get length def<span class="pl-c2"></span>		/imbufs imbufCnt array def<span class="pl-c2"></span>		0 1 imbufCnt 1 sub {<span class="pl-c2"></span>			/imbufIdx xdf<span class="pl-c2"></span>			imbufs imbufIdx imbufLen string put<span class="pl-c2"></span>			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put<span class="pl-c2"></span>		} for<span class="pl-c2"></span>		DeviceN_PS2 {<span class="pl-c2"></span>			imageDict begin<span class="pl-c2"></span>		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def<span class="pl-c2"></span>			/MultipleDataSources false def<span class="pl-c2"></span>			/Decode [0 1] def<span class="pl-c2"></span>			end<span class="pl-c2"></span>		} if<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		/imbuf imbufLen string def<span class="pl-c2"></span>		Indexed_DeviceN level3 not and DeviceN_NoneName or {<span class="pl-c2"></span>			/srcDataStrs [ imageDict begin<span class="pl-c2"></span>				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse<span class="pl-c2"></span>				{<span class="pl-c2"></span>					Width Decode length 2 div mul cvi string<span class="pl-c2"></span>				} repeat<span class="pl-c2"></span>				end ] def		<span class="pl-c2"></span>			imageDict begin<span class="pl-c2"></span>		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def<span class="pl-c2"></span>			/Decode [0 1] def<span class="pl-c2"></span>			end<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put<span class="pl-c2"></span>			imageDict /Decode [0 1] put<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	} ifelse<span class="pl-c2"></span>	imageDict exch<span class="pl-c2"></span>	load exec<span class="pl-c2"></span>	imageDict /DataSource origDataSource put<span class="pl-c2"></span>	imageDict /MultipleDataSources origMultipleDataSources put<span class="pl-c2"></span>	imageDict /Decode origDecode put	<span class="pl-c2"></span>	end<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/write_image_file<span class="pl-c2"></span>{<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	{ (AGMUTIL_imagefile) (w+) file } stopped{<span class="pl-c2"></span>		false<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		Adobe_AGM_Utils/AGMUTIL_imagefile xddf <span class="pl-c2"></span>		2 dict begin<span class="pl-c2"></span>		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def<span class="pl-c2"></span>		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {<span class="pl-c2"></span>			/imbuf imbufLen string def<span class="pl-c2"></span>		}if<span class="pl-c2"></span>		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ <span class="pl-c2"></span>			pop<span class="pl-c2"></span>			MultipleDataSources {<span class="pl-c2"></span>			 	0 1 DataSource length 1 sub {<span class="pl-c2"></span>					DataSource type dup<span class="pl-c2"></span>					/arraytype eq {<span class="pl-c2"></span>						pop DataSource exch get exec<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						/filetype eq {<span class="pl-c2"></span>							DataSource exch get imbuf readstring pop<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							DataSource exch get<span class="pl-c2"></span>						} ifelse<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>					AGMUTIL_imagefile exch writestring<span class="pl-c2"></span>				} for<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				DataSource type dup<span class="pl-c2"></span>				/arraytype eq {<span class="pl-c2"></span>					pop DataSource exec<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					/filetype eq {<span class="pl-c2"></span>						DataSource imbuf readstring pop<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						DataSource<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>				AGMUTIL_imagefile exch writestring<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>		}for<span class="pl-c2"></span>		end<span class="pl-c2"></span>		true<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	end<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/close_image_file<span class="pl-c2"></span>{<span class="pl-c2"></span>	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile<span class="pl-c2"></span>}def<span class="pl-c2"></span>statusdict /product known userdict /AGMP_current_show known not and{<span class="pl-c2"></span>	/pstr statusdict /product get def<span class="pl-c2"></span>	pstr (HP LaserJet 2200) eq 	<span class="pl-c2"></span>	pstr (HP LaserJet 4000 Series) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 4050 Series ) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 8000 Series) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 8100 Series) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 8150 Series) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 5000 Series) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 5100 Series) eq or<span class="pl-c2"></span>	pstr (HP Color LaserJet 4500) eq or<span class="pl-c2"></span>	pstr (HP Color LaserJet 4600) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 5Si) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 1200 Series) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 1300 Series) eq or<span class="pl-c2"></span>	pstr (HP LaserJet 4100 Series) eq or <span class="pl-c2"></span>	{<span class="pl-c2"></span> 		userdict /AGMP_current_show /show load put<span class="pl-c2"></span>		userdict /show {<span class="pl-c2"></span>		  currentcolorspace 0 get<span class="pl-c2"></span>		  /Pattern eq<span class="pl-c2"></span>		  {false charpath f}<span class="pl-c2"></span>		  {AGMP_current_show} ifelse<span class="pl-c2"></span>		} put<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	currentdict /pstr undef<span class="pl-c2"></span>} if<span class="pl-c2"></span>/consumeimagedata<span class="pl-c2"></span>{<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	currentdict /MultipleDataSources known not<span class="pl-c2"></span>		{/MultipleDataSources false def} if<span class="pl-c2"></span>	MultipleDataSources<span class="pl-c2"></span>		{<span class="pl-c2"></span>		DataSource 0 get type<span class="pl-c2"></span>		dup /filetype eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>			1 dict begin<span class="pl-c2"></span>			/flushbuffer Width cvi string def<span class="pl-c2"></span>			1 1 Height cvi<span class="pl-c2"></span>				{<span class="pl-c2"></span>				pop<span class="pl-c2"></span>				0 1 DataSource length 1 sub<span class="pl-c2"></span>					{<span class="pl-c2"></span>					DataSource exch get<span class="pl-c2"></span>					flushbuffer readstring pop pop<span class="pl-c2"></span>					}for<span class="pl-c2"></span>				}for<span class="pl-c2"></span>			end<span class="pl-c2"></span>			}if<span class="pl-c2"></span>		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and<span class="pl-c2"></span>			{<span class="pl-c2"></span>			Width Height mul cvi<span class="pl-c2"></span>				{<span class="pl-c2"></span>				0 1 DataSource length 1 sub<span class="pl-c2"></span>					{dup DataSource exch get exec length exch 0 ne {pop}if}for<span class="pl-c2"></span>				dup 0 eq<span class="pl-c2"></span>					{pop exit}if<span class="pl-c2"></span>				sub dup 0 le<span class="pl-c2"></span>					{exit}if<span class="pl-c2"></span>				}loop<span class="pl-c2"></span>			pop<span class="pl-c2"></span>			}if		<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>		/DataSource load type <span class="pl-c2"></span>		dup /filetype eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>			1 dict begin<span class="pl-c2"></span>			/flushbuffer Width Decode length 2 idiv mul cvi string def<span class="pl-c2"></span>			1 1 Height { pop DataSource flushbuffer readstring pop pop} for<span class="pl-c2"></span>			end<span class="pl-c2"></span>			}if<span class="pl-c2"></span>		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and<span class="pl-c2"></span>			{<span class="pl-c2"></span>				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul<span class="pl-c2"></span>					{<span class="pl-c2"></span>					DataSource length dup 0 eq<span class="pl-c2"></span>						{pop exit}if<span class="pl-c2"></span>					sub dup 0 le<span class="pl-c2"></span>						{exit}if<span class="pl-c2"></span>					}loop<span class="pl-c2"></span>				pop<span class="pl-c2"></span>			}if<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	end<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/addprocs<span class="pl-c2"></span>{<span class="pl-c2"></span>	  2{/exec load}repeat<span class="pl-c2"></span>	  3 1 roll<span class="pl-c2"></span>	  [ 5 1 roll ] bind cvx<span class="pl-c2"></span>}def<span class="pl-c2"></span>/modify_halftone_xfer<span class="pl-c2"></span>{<span class="pl-c2"></span>	currenthalftone dup length dict copy begin<span class="pl-c2"></span>	 currentdict 2 index known{<span class="pl-c2"></span>	 	1 index load dup length dict copy begin<span class="pl-c2"></span>		currentdict/TransferFunction known{<span class="pl-c2"></span>			/TransferFunction load<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			currenttransfer<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>		 addprocs /TransferFunction xdf <span class="pl-c2"></span>		 currentdict end def<span class="pl-c2"></span>		currentdict end sethalftone<span class="pl-c2"></span>	}{ <span class="pl-c2"></span>		currentdict/TransferFunction known{<span class="pl-c2"></span>			/TransferFunction load <span class="pl-c2"></span>		}{<span class="pl-c2"></span>			currenttransfer<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>		addprocs /TransferFunction xdf<span class="pl-c2"></span>		currentdict end sethalftone		<span class="pl-c2"></span>		pop<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/clonearray<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup xcheck exch<span class="pl-c2"></span>	dup length array exch<span class="pl-c2"></span>	Adobe_AGM_Core/AGMCORE_tmp -1 ddf <span class="pl-c2"></span>	{<span class="pl-c2"></span>	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf <span class="pl-c2"></span>	dup type /dicttype eq<span class="pl-c2"></span>		{<span class="pl-c2"></span>			Adobe_AGM_Core/AGMCORE_tmp get<span class="pl-c2"></span>			exch<span class="pl-c2"></span>			clonedict<span class="pl-c2"></span>			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf <span class="pl-c2"></span>		} if<span class="pl-c2"></span>	dup type /arraytype eq<span class="pl-c2"></span>		{<span class="pl-c2"></span>			Adobe_AGM_Core/AGMCORE_tmp get exch<span class="pl-c2"></span>			clonearray<span class="pl-c2"></span>			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf <span class="pl-c2"></span>		} if<span class="pl-c2"></span>	exch dup<span class="pl-c2"></span>	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put<span class="pl-c2"></span>	}forall<span class="pl-c2"></span>	exch {cvx} if<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/clonedict<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup length dict<span class="pl-c2"></span>	begin<span class="pl-c2"></span>		{<span class="pl-c2"></span>		dup type /dicttype eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>				clonedict<span class="pl-c2"></span>			} if<span class="pl-c2"></span>		dup type /arraytype eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>				clonearray<span class="pl-c2"></span>			} if<span class="pl-c2"></span>		def<span class="pl-c2"></span>		}forall<span class="pl-c2"></span>	currentdict<span class="pl-c2"></span>	end<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/DeviceN_PS2<span class="pl-c2"></span>{<span class="pl-c2"></span>	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/Indexed_DeviceN<span class="pl-c2"></span>{ <span class="pl-c2"></span>	/indexed_colorspace_dict AGMCORE_gget dup null ne {<span class="pl-c2"></span>		dup /CSDBase known {<span class="pl-c2"></span>			/CSDBase get /CSD get_res /Names known <span class="pl-c2"></span>		}{<span class="pl-c2"></span>			pop false<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		pop false<span class="pl-c2"></span>	} ifelse<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/DeviceN_NoneName<span class="pl-c2"></span>{	<span class="pl-c2"></span>	/Names where {<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		false Names<span class="pl-c2"></span>		{<span class="pl-c2"></span>			(None) eq or<span class="pl-c2"></span>		} forall<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		false<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/DeviceN_PS2_inRip_seps<span class="pl-c2"></span>{<span class="pl-c2"></span>	/AGMCORE_in_rip_sep where<span class="pl-c2"></span>	{<span class="pl-c2"></span>		pop dup type dup /arraytype eq exch /packedarraytype eq or<span class="pl-c2"></span>		{<span class="pl-c2"></span>			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and<span class="pl-c2"></span>			{<span class="pl-c2"></span>				/currentcolorspace exch AGMCORE_gput<span class="pl-c2"></span>				false<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{<span class="pl-c2"></span>				true<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			true<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	}<span class="pl-c2"></span>	{<span class="pl-c2"></span>		true<span class="pl-c2"></span>	} ifelse<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/base_colorspace_type<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup type /arraytype eq {0 get} if<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse<span class="pl-c2"></span>{<span class="pl-c2"></span>	/pdfmark_5 {cleartomark} bind def<span class="pl-c2"></span>}{<span class="pl-c2"></span>	/pdfmark_5 {pdfmark} bind def<span class="pl-c2"></span>}ifelse<span class="pl-c2"></span>/ReadBypdfmark_5<span class="pl-c2"></span>{<span class="pl-c2"></span>	2 dict begin<span class="pl-c2"></span>	/makerString exch def string /tmpString exch def<span class="pl-c2"></span>	{<span class="pl-c2"></span>		currentfile tmpString readline pop<span class="pl-c2"></span>		makerString anchorsearch<span class="pl-c2"></span>		{<span class="pl-c2"></span>		pop pop cleartomark exit<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	}loop<span class="pl-c2"></span>	end<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/doc_setup{<span class="pl-c2"></span>	Adobe_AGM_Utils begin<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/doc_trailer{<span class="pl-c2"></span>	currentdict Adobe_AGM_Utils eq{<span class="pl-c2"></span>		end<span class="pl-c2"></span>	}if<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>systemdict /setpacking known<span class="pl-c2"></span>{<span class="pl-c2"></span>	setpacking<span class="pl-c2"></span>} if<span class="pl-c2"></span>%%EndResource<span class="pl-c2"></span>%%BeginResource: procset Adobe_AGM_Core 2.0 0<span class="pl-c2"></span>%%Version: 2.0 0<span class="pl-c2"></span>%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.<span class="pl-c2"></span>%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for<span class="pl-c2"></span>%% definitions of some fundamental procedures.<span class="pl-c2"></span>systemdict /setpacking known<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentpacking<span class="pl-c2"></span>	true setpacking<span class="pl-c2"></span>} if<span class="pl-c2"></span>userdict /Adobe_AGM_Core 201 dict dup begin put<span class="pl-c2"></span>/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def<span class="pl-c2"></span>/AGMCORE_str256 256 string def<span class="pl-c2"></span>/AGMCORE_save nd<span class="pl-c2"></span>/AGMCORE_graphicsave nd<span class="pl-c2"></span>/AGMCORE_c 0 def<span class="pl-c2"></span>/AGMCORE_m 0 def<span class="pl-c2"></span>/AGMCORE_y 0 def<span class="pl-c2"></span>/AGMCORE_k 0 def<span class="pl-c2"></span>/AGMCORE_cmykbuf 4 array def<span class="pl-c2"></span>/AGMCORE_screen [currentscreen] cvx def<span class="pl-c2"></span>/AGMCORE_tmp 0 def<span class="pl-c2"></span>/AGMCORE_&amp;setgray nd<span class="pl-c2"></span>/AGMCORE_&amp;setcolor nd<span class="pl-c2"></span>/AGMCORE_&amp;setcolorspace nd<span class="pl-c2"></span>/AGMCORE_&amp;setcmykcolor nd<span class="pl-c2"></span>/AGMCORE_cyan_plate nd<span class="pl-c2"></span>/AGMCORE_magenta_plate nd<span class="pl-c2"></span>/AGMCORE_yellow_plate nd<span class="pl-c2"></span>/AGMCORE_black_plate nd<span class="pl-c2"></span>/AGMCORE_plate_ndx nd<span class="pl-c2"></span>/AGMCORE_get_ink_data nd<span class="pl-c2"></span>/AGMCORE_is_cmyk_sep nd<span class="pl-c2"></span>/AGMCORE_host_sep nd<span class="pl-c2"></span>/AGMCORE_avoid_L2_sep_space nd<span class="pl-c2"></span>/AGMCORE_distilling nd<span class="pl-c2"></span>/AGMCORE_composite_job nd<span class="pl-c2"></span>/AGMCORE_producing_seps nd<span class="pl-c2"></span>/AGMCORE_ps_level -1 def<span class="pl-c2"></span>/AGMCORE_ps_version -1 def<span class="pl-c2"></span>/AGMCORE_environ_ok nd<span class="pl-c2"></span>/AGMCORE_CSD_cache 0 dict def<span class="pl-c2"></span>/AGMCORE_currentoverprint false def<span class="pl-c2"></span>/AGMCORE_deltaX nd<span class="pl-c2"></span>/AGMCORE_deltaY nd<span class="pl-c2"></span>/AGMCORE_name nd<span class="pl-c2"></span>/AGMCORE_sep_special nd<span class="pl-c2"></span>/AGMCORE_err_strings 4 dict def<span class="pl-c2"></span>/AGMCORE_cur_err nd<span class="pl-c2"></span>/AGMCORE_current_spot_alias false def<span class="pl-c2"></span>/AGMCORE_inverting false def<span class="pl-c2"></span>/AGMCORE_feature_dictCount nd<span class="pl-c2"></span>/AGMCORE_feature_opCount nd<span class="pl-c2"></span>/AGMCORE_feature_ctm nd<span class="pl-c2"></span>/AGMCORE_ConvertToProcess false def<span class="pl-c2"></span>/AGMCORE_Default_CTM matrix def<span class="pl-c2"></span>/AGMCORE_Default_PageSize nd<span class="pl-c2"></span>/AGMCORE_currentbg nd<span class="pl-c2"></span>/AGMCORE_currentucr nd<span class="pl-c2"></span>/AGMCORE_in_pattern false def<span class="pl-c2"></span>/AGMCORE_currentpagedevice nd<span class="pl-c2"></span>/knockout_unitsq nd<span class="pl-c2"></span>currentglobal true setglobal<span class="pl-c2"></span>[/CSA /Gradient /Procedure]<span class="pl-c2"></span>{<span class="pl-c2"></span>	/Generic /Category findresource dup length dict copy /Category defineresource pop<span class="pl-c2"></span>} forall<span class="pl-c2"></span>setglobal<span class="pl-c2"></span>/AGMCORE_key_known<span class="pl-c2"></span>{<span class="pl-c2"></span>	where{<span class="pl-c2"></span>		/Adobe_AGM_Core_Id known<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		false<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}ndf<span class="pl-c2"></span>/flushinput<span class="pl-c2"></span>{<span class="pl-c2"></span>	save<span class="pl-c2"></span>	2 dict begin<span class="pl-c2"></span>	/CompareBuffer 3 -1 roll def<span class="pl-c2"></span>	/readbuffer 256 string def<span class="pl-c2"></span>	mark<span class="pl-c2"></span>	{<span class="pl-c2"></span>	currentfile readbuffer {readline} stopped<span class="pl-c2"></span>		{cleartomark mark}<span class="pl-c2"></span>		{<span class="pl-c2"></span>		not<span class="pl-c2"></span>			{pop exit}<span class="pl-c2"></span>		if<span class="pl-c2"></span>		CompareBuffer eq<span class="pl-c2"></span>			{exit}<span class="pl-c2"></span>		if<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}loop<span class="pl-c2"></span>	cleartomark<span class="pl-c2"></span>	end<span class="pl-c2"></span>	restore<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/getspotfunction<span class="pl-c2"></span>{<span class="pl-c2"></span>	AGMCORE_screen exch pop exch pop<span class="pl-c2"></span>	dup type /dicttype eq{<span class="pl-c2"></span>		dup /HalftoneType get 1 eq{<span class="pl-c2"></span>			/SpotFunction get<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			dup /HalftoneType get 2 eq{<span class="pl-c2"></span>				/GraySpotFunction get<span class="pl-c2"></span>			}{ <span class="pl-c2"></span>				pop<span class="pl-c2"></span>				{<span class="pl-c2"></span>					abs exch abs 2 copy add 1 gt{<span class="pl-c2"></span>						1 sub dup mul exch 1 sub dup mul add 1 sub<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						dup mul exch dup mul add 1 exch sub<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}bind<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}if<span class="pl-c2"></span>} def<span class="pl-c2"></span>/clp_npth<span class="pl-c2"></span>{<span class="pl-c2"></span>	clip newpath<span class="pl-c2"></span>} def<span class="pl-c2"></span>/eoclp_npth<span class="pl-c2"></span>{<span class="pl-c2"></span>	eoclip newpath<span class="pl-c2"></span>} def<span class="pl-c2"></span>/npth_clp<span class="pl-c2"></span>{<span class="pl-c2"></span>	newpath clip<span class="pl-c2"></span>} def<span class="pl-c2"></span>/graphic_setup<span class="pl-c2"></span>{<span class="pl-c2"></span>	/AGMCORE_graphicsave save def<span class="pl-c2"></span>	concat<span class="pl-c2"></span>	0 setgray<span class="pl-c2"></span>	0 setlinecap<span class="pl-c2"></span>	0 setlinejoin<span class="pl-c2"></span>	1 setlinewidth<span class="pl-c2"></span>	[] 0 setdash<span class="pl-c2"></span>	10 setmiterlimit<span class="pl-c2"></span>	newpath<span class="pl-c2"></span>	false setoverprint<span class="pl-c2"></span>	false setstrokeadjust<span class="pl-c2"></span>	//Adobe_AGM_Core/spot_alias get exec<span class="pl-c2"></span>	/Adobe_AGM_Image where {<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		Adobe_AGM_Image/spot_alias 2 copy known{<span class="pl-c2"></span>			get exec<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			pop pop<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	} if<span class="pl-c2"></span>	100 dict begin<span class="pl-c2"></span>	/dictstackcount countdictstack def<span class="pl-c2"></span>	/showpage {} def<span class="pl-c2"></span>	mark<span class="pl-c2"></span>} def<span class="pl-c2"></span>/graphic_cleanup<span class="pl-c2"></span>{<span class="pl-c2"></span>	cleartomark<span class="pl-c2"></span>	dictstackcount 1 countdictstack 1 sub {end}for<span class="pl-c2"></span>	end<span class="pl-c2"></span>	AGMCORE_graphicsave restore<span class="pl-c2"></span>} def<span class="pl-c2"></span>/compose_error_msg<span class="pl-c2"></span>{<span class="pl-c2"></span>	grestoreall initgraphics	<span class="pl-c2"></span>	/Helvetica findfont 10 scalefont setfont<span class="pl-c2"></span>	/AGMCORE_deltaY 100 def<span class="pl-c2"></span>	/AGMCORE_deltaX 310 def<span class="pl-c2"></span>	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto<span class="pl-c2"></span>	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto<span class="pl-c2"></span>	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath<span class="pl-c2"></span>	0 AGMCORE_&amp;setgray<span class="pl-c2"></span>	gsave 1 AGMCORE_&amp;setgray fill grestore <span class="pl-c2"></span>	1 setlinewidth gsave stroke grestore<span class="pl-c2"></span>	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto<span class="pl-c2"></span>	/AGMCORE_deltaY 12 def<span class="pl-c2"></span>	/AGMCORE_tmp 0 def<span class="pl-c2"></span>	AGMCORE_err_strings exch get<span class="pl-c2"></span>		{<span class="pl-c2"></span>		dup 32 eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>			pop<span class="pl-c2"></span>			AGMCORE_str256 0 AGMCORE_tmp getinterval<span class="pl-c2"></span>			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt<span class="pl-c2"></span>				{<span class="pl-c2"></span>				currentpoint AGMCORE_deltaY sub exch pop<span class="pl-c2"></span>				clippath pathbbox pop pop pop 44 add exch moveto<span class="pl-c2"></span>				} if<span class="pl-c2"></span>			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show<span class="pl-c2"></span>			0 1 AGMCORE_str256 length 1 sub<span class="pl-c2"></span>				{<span class="pl-c2"></span>				AGMCORE_str256 exch 0 put<span class="pl-c2"></span>				}for<span class="pl-c2"></span>			/AGMCORE_tmp 0 def<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{<span class="pl-c2"></span>				AGMCORE_str256 exch AGMCORE_tmp xpt<span class="pl-c2"></span>				/AGMCORE_tmp AGMCORE_tmp 1 add def<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>		} forall<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/doc_setup{<span class="pl-c2"></span>	Adobe_AGM_Core begin<span class="pl-c2"></span>	/AGMCORE_ps_version xdf<span class="pl-c2"></span>	/AGMCORE_ps_level xdf<span class="pl-c2"></span>	errordict /AGM_handleerror known not{<span class="pl-c2"></span>		errordict /AGM_handleerror errordict /handleerror get put<span class="pl-c2"></span>		errordict /handleerror {<span class="pl-c2"></span>			Adobe_AGM_Core begin<span class="pl-c2"></span>			$error /newerror get AGMCORE_cur_err null ne and{<span class="pl-c2"></span>				$error /newerror false put<span class="pl-c2"></span>				AGMCORE_cur_err compose_error_msg<span class="pl-c2"></span>			}if<span class="pl-c2"></span>			$error /newerror true put<span class="pl-c2"></span>			end<span class="pl-c2"></span>			errordict /AGM_handleerror get exec<span class="pl-c2"></span>			} bind put<span class="pl-c2"></span>		}if<span class="pl-c2"></span>	/AGMCORE_environ_ok <span class="pl-c2"></span>		ps_level AGMCORE_ps_level ge<span class="pl-c2"></span>		ps_version AGMCORE_ps_version ge and <span class="pl-c2"></span>		AGMCORE_ps_level -1 eq or<span class="pl-c2"></span>	def<span class="pl-c2"></span>	AGMCORE_environ_ok not<span class="pl-c2"></span>		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if<span class="pl-c2"></span>	/AGMCORE_&amp;setgray systemdict/setgray get def<span class="pl-c2"></span>	level2{<span class="pl-c2"></span>		/AGMCORE_&amp;setcolor systemdict/setcolor get def<span class="pl-c2"></span>		/AGMCORE_&amp;setcolorspace systemdict/setcolorspace get def<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	/AGMCORE_currentbg currentblackgeneration def<span class="pl-c2"></span>	/AGMCORE_currentucr currentundercolorremoval def<span class="pl-c2"></span>	/AGMCORE_distilling<span class="pl-c2"></span>		/product where{<span class="pl-c2"></span>			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			false<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	def<span class="pl-c2"></span>	/AGMCORE_GSTATE AGMCORE_key_known not{<span class="pl-c2"></span>		/AGMCORE_GSTATE 21 dict def<span class="pl-c2"></span>		/AGMCORE_tmpmatrix matrix def<span class="pl-c2"></span>		/AGMCORE_gstack 32 array def<span class="pl-c2"></span>		/AGMCORE_gstackptr 0 def<span class="pl-c2"></span>		/AGMCORE_gstacksaveptr 0 def<span class="pl-c2"></span>		/AGMCORE_gstackframekeys 10 def<span class="pl-c2"></span>		/AGMCORE_&amp;gsave /gsave ldf<span class="pl-c2"></span>		/AGMCORE_&amp;grestore /grestore ldf<span class="pl-c2"></span>		/AGMCORE_&amp;grestoreall /grestoreall ldf<span class="pl-c2"></span>		/AGMCORE_&amp;save /save ldf<span class="pl-c2"></span>		/AGMCORE_&amp;setoverprint /setoverprint ldf<span class="pl-c2"></span>		/AGMCORE_gdictcopy {<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			{ def } forall<span class="pl-c2"></span>			end<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/AGMCORE_gput {<span class="pl-c2"></span>			AGMCORE_gstack AGMCORE_gstackptr get<span class="pl-c2"></span>			3 1 roll<span class="pl-c2"></span>			put<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/AGMCORE_gget {<span class="pl-c2"></span>			AGMCORE_gstack AGMCORE_gstackptr get<span class="pl-c2"></span>			exch<span class="pl-c2"></span>			get<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/gsave {<span class="pl-c2"></span>			AGMCORE_&amp;gsave<span class="pl-c2"></span>			AGMCORE_gstack AGMCORE_gstackptr get<span class="pl-c2"></span>			AGMCORE_gstackptr 1 add<span class="pl-c2"></span>			dup 32 ge {limitcheck} if<span class="pl-c2"></span>			/AGMCORE_gstackptr exch store<span class="pl-c2"></span>			AGMCORE_gstack AGMCORE_gstackptr get<span class="pl-c2"></span>			AGMCORE_gdictcopy<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/grestore {<span class="pl-c2"></span>			AGMCORE_&amp;grestore<span class="pl-c2"></span>			AGMCORE_gstackptr 1 sub<span class="pl-c2"></span>			dup AGMCORE_gstacksaveptr lt {1 add} if<span class="pl-c2"></span>			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known<span class="pl-c2"></span>				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse<span class="pl-c2"></span>			/AGMCORE_gstackptr exch store<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/grestoreall {<span class="pl-c2"></span>			AGMCORE_&amp;grestoreall<span class="pl-c2"></span>			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store <span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/save {<span class="pl-c2"></span>			AGMCORE_&amp;save<span class="pl-c2"></span>			AGMCORE_gstack AGMCORE_gstackptr get<span class="pl-c2"></span>			AGMCORE_gstackptr 1 add<span class="pl-c2"></span>			dup 32 ge {limitcheck} if<span class="pl-c2"></span>			/AGMCORE_gstackptr exch store<span class="pl-c2"></span>			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store<span class="pl-c2"></span>			AGMCORE_gstack AGMCORE_gstackptr get<span class="pl-c2"></span>			AGMCORE_gdictcopy<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/setoverprint{<span class="pl-c2"></span>			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&amp;setoverprint<span class="pl-c2"></span>		}def	<span class="pl-c2"></span>		0 1 AGMCORE_gstack length 1 sub {<span class="pl-c2"></span>				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put<span class="pl-c2"></span>		} for<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	level3 /AGMCORE_&amp;sysshfill AGMCORE_key_known not and<span class="pl-c2"></span>	{<span class="pl-c2"></span>		/AGMCORE_&amp;sysshfill systemdict/shfill get def<span class="pl-c2"></span>		/AGMCORE_&amp;sysmakepattern systemdict/makepattern get def<span class="pl-c2"></span>		/AGMCORE_&amp;usrmakepattern /makepattern load def<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	/currentcmykcolor [0 0 0 0] AGMCORE_gput<span class="pl-c2"></span>	/currentstrokeadjust false AGMCORE_gput<span class="pl-c2"></span>	/currentcolorspace [/DeviceGray] AGMCORE_gput<span class="pl-c2"></span>	/sep_tint 0 AGMCORE_gput<span class="pl-c2"></span>	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput<span class="pl-c2"></span>	/sep_colorspace_dict null AGMCORE_gput<span class="pl-c2"></span>	/devicen_colorspace_dict null AGMCORE_gput<span class="pl-c2"></span>	/indexed_colorspace_dict null AGMCORE_gput<span class="pl-c2"></span>	/currentcolor_intent () AGMCORE_gput<span class="pl-c2"></span>	/customcolor_tint 1 AGMCORE_gput<span class="pl-c2"></span>	&lt;&lt;<span class="pl-c2"></span>	/MaxPatternItem currentsystemparams /MaxPatternCache get<span class="pl-c2"></span>	&gt;&gt;<span class="pl-c2"></span>	setuserparams<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/page_setup<span class="pl-c2"></span>{<span class="pl-c2"></span>	/setcmykcolor where{<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		Adobe_AGM_Core/AGMCORE_&amp;setcmykcolor /setcmykcolor load put<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	Adobe_AGM_Core begin<span class="pl-c2"></span>	/setcmykcolor<span class="pl-c2"></span>	{<span class="pl-c2"></span>		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput<span class="pl-c2"></span>		1 sub 4 1 roll<span class="pl-c2"></span>		3 {<span class="pl-c2"></span>			3 index add neg dup 0 lt {<span class="pl-c2"></span>				pop 0<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			3 1 roll<span class="pl-c2"></span>		} repeat<span class="pl-c2"></span>		setrgbcolor pop<span class="pl-c2"></span>	}ndf<span class="pl-c2"></span>	/currentcmykcolor<span class="pl-c2"></span>	{<span class="pl-c2"></span>		/currentcmykcolor AGMCORE_gget aload pop<span class="pl-c2"></span>	}ndf<span class="pl-c2"></span>	/setoverprint<span class="pl-c2"></span>	{<span class="pl-c2"></span>		pop<span class="pl-c2"></span>	}ndf<span class="pl-c2"></span>	/currentoverprint<span class="pl-c2"></span>	{<span class="pl-c2"></span>		false<span class="pl-c2"></span>	}ndf<span class="pl-c2"></span>	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def<span class="pl-c2"></span>	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def<span class="pl-c2"></span>	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def<span class="pl-c2"></span>	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def<span class="pl-c2"></span>	/AGMCORE_plate_ndx <span class="pl-c2"></span>		AGMCORE_cyan_plate{ <span class="pl-c2"></span>			0<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			AGMCORE_magenta_plate{<span class="pl-c2"></span>				1<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				AGMCORE_yellow_plate{<span class="pl-c2"></span>					2<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					AGMCORE_black_plate{<span class="pl-c2"></span>						3<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						4<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>		def<span class="pl-c2"></span>	/AGMCORE_have_reported_unsupported_color_space false def<span class="pl-c2"></span>	/AGMCORE_report_unsupported_color_space<span class="pl-c2"></span>	{<span class="pl-c2"></span>		AGMCORE_have_reported_unsupported_color_space false eq<span class="pl-c2"></span>		{<span class="pl-c2"></span>			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==<span class="pl-c2"></span>			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf<span class="pl-c2"></span>		} if<span class="pl-c2"></span>	}def<span class="pl-c2"></span>	/AGMCORE_composite_job<span class="pl-c2"></span>		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def<span class="pl-c2"></span>	/AGMCORE_in_rip_sep<span class="pl-c2"></span>		/AGMCORE_in_rip_sep where{<span class="pl-c2"></span>			pop AGMCORE_in_rip_sep<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			AGMCORE_distilling <span class="pl-c2"></span>			{<span class="pl-c2"></span>				false<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				userdict/Adobe_AGM_OnHost_Seps known{<span class="pl-c2"></span>					false<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					level2{<span class="pl-c2"></span>						currentpagedevice/Separations 2 copy known{<span class="pl-c2"></span>							get<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							pop pop false<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						false<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	def<span class="pl-c2"></span>	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def<span class="pl-c2"></span>	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def<span class="pl-c2"></span>	/AGM_preserve_spots <span class="pl-c2"></span>		/AGM_preserve_spots where{<span class="pl-c2"></span>			pop AGM_preserve_spots<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			AGMCORE_distilling AGMCORE_producing_seps or<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	def<span class="pl-c2"></span>	/AGM_is_distiller_preserving_spotimages<span class="pl-c2"></span>	{<span class="pl-c2"></span>		currentdistillerparams/PreserveOverprintSettings known<span class="pl-c2"></span>		{<span class="pl-c2"></span>			currentdistillerparams/PreserveOverprintSettings get<span class="pl-c2"></span>				{<span class="pl-c2"></span>					currentdistillerparams/ColorConversionStrategy known<span class="pl-c2"></span>					{<span class="pl-c2"></span>						currentdistillerparams/ColorConversionStrategy get<span class="pl-c2"></span>						/sRGB ne<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						true<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					false<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			false<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}def<span class="pl-c2"></span>	/convert_spot_to_process where {pop}{<span class="pl-c2"></span>		/convert_spot_to_process<span class="pl-c2"></span>		{<span class="pl-c2"></span>			//Adobe_AGM_Core begin<span class="pl-c2"></span>			dup map_alias {<span class="pl-c2"></span>				/Name get exch pop<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			dup dup (None) eq exch (All) eq or<span class="pl-c2"></span>				{<span class="pl-c2"></span>				pop false<span class="pl-c2"></span>				}{<span class="pl-c2"></span>				AGMCORE_host_sep<span class="pl-c2"></span>				{ <span class="pl-c2"></span>					gsave<span class="pl-c2"></span>					1 0 0 0 setcmykcolor currentgray 1 exch sub<span class="pl-c2"></span>					0 1 0 0 setcmykcolor currentgray 1 exch sub<span class="pl-c2"></span>					0 0 1 0 setcmykcolor currentgray 1 exch sub<span class="pl-c2"></span>					0 0 0 1 setcmykcolor currentgray 1 exch sub<span class="pl-c2"></span>					add add add 0 eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>						pop false<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						false setoverprint<span class="pl-c2"></span>						current_spot_alias false set_spot_alias<span class="pl-c2"></span>						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor<span class="pl-c2"></span>						set_spot_alias<span class="pl-c2"></span>						currentgray 1 ne<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>					grestore<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					AGMCORE_distilling<span class="pl-c2"></span>					{<span class="pl-c2"></span>						pop AGM_is_distiller_preserving_spotimages not<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						//Adobe_AGM_Core/AGMCORE_name xddf<span class="pl-c2"></span>						false<span class="pl-c2"></span>						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse<span class="pl-c2"></span>						not AGMCORE_currentpagedevice/OverrideSeparations known and<span class="pl-c2"></span>						{<span class="pl-c2"></span>							AGMCORE_currentpagedevice/OverrideSeparations get<span class="pl-c2"></span>							{<span class="pl-c2"></span>								/HqnSpots /ProcSet resourcestatus<span class="pl-c2"></span>								{<span class="pl-c2"></span>									pop pop pop true<span class="pl-c2"></span>								}if<span class="pl-c2"></span>							}if<span class="pl-c2"></span>						}if					<span class="pl-c2"></span>						{<span class="pl-c2"></span>							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							gsave<span class="pl-c2"></span>							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&amp;setcolorspace<span class="pl-c2"></span>							false<span class="pl-c2"></span>							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known<span class="pl-c2"></span>							{<span class="pl-c2"></span>								get<span class="pl-c2"></span>								{ AGMCORE_name eq or}forall<span class="pl-c2"></span>								not<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								pop pop pop true<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>							grestore<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>			end<span class="pl-c2"></span>		}def<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	/convert_to_process where {pop}{<span class="pl-c2"></span>		/convert_to_process<span class="pl-c2"></span>		{<span class="pl-c2"></span>			dup length 0 eq<span class="pl-c2"></span>				{<span class="pl-c2"></span>				pop false<span class="pl-c2"></span>				}{<span class="pl-c2"></span>				AGMCORE_host_sep<span class="pl-c2"></span>				{ <span class="pl-c2"></span>				dup true exch<span class="pl-c2"></span>					{<span class="pl-c2"></span>					dup (Cyan) eq exch<span class="pl-c2"></span>					dup (Magenta) eq 3 -1 roll or exch<span class="pl-c2"></span>					dup (Yellow) eq 3 -1 roll or exch<span class="pl-c2"></span>					dup (Black) eq 3 -1 roll or<span class="pl-c2"></span>						{pop}<span class="pl-c2"></span>						{convert_spot_to_process and}ifelse<span class="pl-c2"></span>					}<span class="pl-c2"></span>				forall<span class="pl-c2"></span>					{<span class="pl-c2"></span>					true exch<span class="pl-c2"></span>						{<span class="pl-c2"></span>						dup (Cyan) eq exch<span class="pl-c2"></span>						dup (Magenta) eq 3 -1 roll or exch<span class="pl-c2"></span>						dup (Yellow) eq 3 -1 roll or exch<span class="pl-c2"></span>						(Black) eq or and<span class="pl-c2"></span>						}forall<span class="pl-c2"></span>						not<span class="pl-c2"></span>					}{pop false}ifelse<span class="pl-c2"></span>				}{<span class="pl-c2"></span>				false exch<span class="pl-c2"></span>					{<span class="pl-c2"></span>					dup (Cyan) eq exch<span class="pl-c2"></span>					dup (Magenta) eq 3 -1 roll or exch<span class="pl-c2"></span>					dup (Yellow) eq 3 -1 roll or exch<span class="pl-c2"></span>					dup (Black) eq 3 -1 roll or<span class="pl-c2"></span>					{pop}<span class="pl-c2"></span>					{convert_spot_to_process or}ifelse<span class="pl-c2"></span>					}<span class="pl-c2"></span>				forall<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}def<span class="pl-c2"></span>	}ifelse	<span class="pl-c2"></span>	/AGMCORE_avoid_L2_sep_space  <span class="pl-c2"></span>		version cvr 2012 lt <span class="pl-c2"></span>		level2 and <span class="pl-c2"></span>		AGMCORE_producing_seps not and<span class="pl-c2"></span>	def<span class="pl-c2"></span>	/AGMCORE_is_cmyk_sep<span class="pl-c2"></span>		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or<span class="pl-c2"></span>	def<span class="pl-c2"></span>	/AGM_avoid_0_cmyk where{<span class="pl-c2"></span>		pop AGM_avoid_0_cmyk<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		AGM_preserve_spots <span class="pl-c2"></span>		userdict/Adobe_AGM_OnHost_Seps known <span class="pl-c2"></span>		userdict/Adobe_AGM_InRip_Seps known or<span class="pl-c2"></span>		not and<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	{<span class="pl-c2"></span>		/setcmykcolor[<span class="pl-c2"></span>			{<span class="pl-c2"></span>				4 copy add add add 0 eq currentoverprint and{<span class="pl-c2"></span>					pop 0.0005<span class="pl-c2"></span>				}if<span class="pl-c2"></span>			}/exec cvx<span class="pl-c2"></span>			/AGMCORE_&amp;setcmykcolor load dup type/operatortype ne{<span class="pl-c2"></span>				/exec cvx<span class="pl-c2"></span>			}if<span class="pl-c2"></span>		]cvx def<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	/AGMCORE_IsSeparationAProcessColor<span class="pl-c2"></span>		{<span class="pl-c2"></span>		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or<span class="pl-c2"></span>		}def<span class="pl-c2"></span>	AGMCORE_host_sep{<span class="pl-c2"></span>		/setcolortransfer<span class="pl-c2"></span>		{ <span class="pl-c2"></span>			AGMCORE_cyan_plate{<span class="pl-c2"></span>				pop pop pop<span class="pl-c2"></span>			}{<span class="pl-c2"></span>			  	AGMCORE_magenta_plate{<span class="pl-c2"></span>			  		4 3 roll pop pop pop<span class="pl-c2"></span>			  	}{<span class="pl-c2"></span>			  		AGMCORE_yellow_plate{<span class="pl-c2"></span>			  			4 2 roll pop pop pop<span class="pl-c2"></span>			  		}{<span class="pl-c2"></span>			  			4 1 roll pop pop pop<span class="pl-c2"></span>			  		}ifelse<span class="pl-c2"></span>			  	}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>			settransfer  <span class="pl-c2"></span>		}	<span class="pl-c2"></span>		def<span class="pl-c2"></span>		/AGMCORE_get_ink_data<span class="pl-c2"></span>			AGMCORE_cyan_plate{<span class="pl-c2"></span>				{pop pop pop}<span class="pl-c2"></span>			}{<span class="pl-c2"></span>			  	AGMCORE_magenta_plate{<span class="pl-c2"></span>			  		{4 3 roll pop pop pop}<span class="pl-c2"></span>			  	}{<span class="pl-c2"></span>			  		AGMCORE_yellow_plate{<span class="pl-c2"></span>			  			{4 2 roll pop pop pop}<span class="pl-c2"></span>			  		}{<span class="pl-c2"></span>			  			{4 1 roll pop pop pop}<span class="pl-c2"></span>			  		}ifelse<span class="pl-c2"></span>			  	}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		def<span class="pl-c2"></span>		/AGMCORE_RemoveProcessColorNames<span class="pl-c2"></span>			{<span class="pl-c2"></span>			1 dict begin<span class="pl-c2"></span>			/filtername<span class="pl-c2"></span>				{<span class="pl-c2"></span>				dup /Cyan eq 1 index (Cyan) eq or<span class="pl-c2"></span>					{pop (_cyan_)}if<span class="pl-c2"></span>				dup /Magenta eq 1 index (Magenta) eq or<span class="pl-c2"></span>					{pop (_magenta_)}if<span class="pl-c2"></span>				dup /Yellow eq 1 index (Yellow) eq or<span class="pl-c2"></span>					{pop (_yellow_)}if<span class="pl-c2"></span>				dup /Black eq 1 index (Black) eq or<span class="pl-c2"></span>					{pop (_black_)}if<span class="pl-c2"></span>				}def<span class="pl-c2"></span>			dup type /arraytype eq<span class="pl-c2"></span>				{[exch {filtername}forall]}<span class="pl-c2"></span>				{filtername}ifelse<span class="pl-c2"></span>			end<span class="pl-c2"></span>			}def<span class="pl-c2"></span>		level3 {<span class="pl-c2"></span>			/AGMCORE_IsCurrentColor<span class="pl-c2"></span>				{<span class="pl-c2"></span>				dup AGMCORE_IsSeparationAProcessColor<span class="pl-c2"></span>					{<span class="pl-c2"></span>					AGMCORE_plate_ndx 0 eq<span class="pl-c2"></span>						{dup (Cyan) eq exch /Cyan eq or}if<span class="pl-c2"></span>					AGMCORE_plate_ndx 1 eq<span class="pl-c2"></span>						{dup (Magenta) eq exch /Magenta eq or}if<span class="pl-c2"></span>					AGMCORE_plate_ndx 2 eq<span class="pl-c2"></span>						{dup (Yellow) eq exch /Yellow eq or}if<span class="pl-c2"></span>					AGMCORE_plate_ndx 3 eq<span class="pl-c2"></span>						{dup (Black) eq exch /Black eq or}if<span class="pl-c2"></span>					AGMCORE_plate_ndx 4 eq<span class="pl-c2"></span>						{pop false}if<span class="pl-c2"></span>					}{<span class="pl-c2"></span>					gsave<span class="pl-c2"></span>					false setoverprint<span class="pl-c2"></span>					current_spot_alias false set_spot_alias<span class="pl-c2"></span>					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor<span class="pl-c2"></span>					set_spot_alias<span class="pl-c2"></span>					currentgray 1 ne<span class="pl-c2"></span>					grestore<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}def<span class="pl-c2"></span>			/AGMCORE_filter_functiondatasource<span class="pl-c2"></span>				{	<span class="pl-c2"></span>				5 dict begin<span class="pl-c2"></span>				/data_in xdf<span class="pl-c2"></span>				data_in type /stringtype eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>					/ncomp xdf<span class="pl-c2"></span>					/comp xdf<span class="pl-c2"></span>					/string_out data_in length ncomp idiv string def<span class="pl-c2"></span>					0 ncomp data_in length 1 sub<span class="pl-c2"></span>						{<span class="pl-c2"></span>						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put<span class="pl-c2"></span>						}for<span class="pl-c2"></span>					string_out<span class="pl-c2"></span>					}{<span class="pl-c2"></span>					string /string_in xdf<span class="pl-c2"></span>					/string_out 1 string def<span class="pl-c2"></span>					/component xdf<span class="pl-c2"></span>					[<span class="pl-c2"></span>					data_in string_in /readstring cvx<span class="pl-c2"></span>						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx<span class="pl-c2"></span>						[/pop cvx ()]cvx /ifelse cvx<span class="pl-c2"></span>					]cvx /ReusableStreamDecode filter<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>				end<span class="pl-c2"></span>				}def<span class="pl-c2"></span>			/AGMCORE_separateShadingFunction<span class="pl-c2"></span>				{<span class="pl-c2"></span>				2 dict begin<span class="pl-c2"></span>				/paint? xdf<span class="pl-c2"></span>				/channel xdf<span class="pl-c2"></span>				dup type /dicttype eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					FunctionType 0 eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def<span class="pl-c2"></span>						currentdict /Decode known<span class="pl-c2"></span>							{/Decode Decode channel 2 mul 2 getinterval def}if<span class="pl-c2"></span>						paint? not<span class="pl-c2"></span>							{/Decode [1 1]def}if<span class="pl-c2"></span>						}if<span class="pl-c2"></span>					FunctionType 2 eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						paint?<span class="pl-c2"></span>							{<span class="pl-c2"></span>							/C0 [C0 channel get 1 exch sub] def<span class="pl-c2"></span>							/C1 [C1 channel get 1 exch sub] def<span class="pl-c2"></span>							}{<span class="pl-c2"></span>							/C0 [1] def<span class="pl-c2"></span>							/C1 [1] def<span class="pl-c2"></span>							}ifelse			<span class="pl-c2"></span>						}if<span class="pl-c2"></span>					FunctionType 3 eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			<span class="pl-c2"></span>						}if<span class="pl-c2"></span>					currentdict /Range known<span class="pl-c2"></span>						{/Range [0 1] def}if<span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					end}{<span class="pl-c2"></span>					channel get 0 paint? AGMCORE_separateShadingFunction<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				end<span class="pl-c2"></span>				}def<span class="pl-c2"></span>			/AGMCORE_separateShading<span class="pl-c2"></span>				{<span class="pl-c2"></span>				3 -1 roll begin<span class="pl-c2"></span>				currentdict /Function known<span class="pl-c2"></span>					{<span class="pl-c2"></span>					currentdict /Background known<span class="pl-c2"></span>						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if<span class="pl-c2"></span>					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf<span class="pl-c2"></span>					/ColorSpace [/DeviceGray] def<span class="pl-c2"></span>					}{<span class="pl-c2"></span>					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def<span class="pl-c2"></span>						}{<span class="pl-c2"></span>						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					ColorSpace 0 get /Separation eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>							{<span class="pl-c2"></span>								[1 /exch cvx /sub cvx]cvx<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								[/pop cvx 1]cvx<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>							ColorSpace 3 3 -1 roll put<span class="pl-c2"></span>							pop<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							{<span class="pl-c2"></span>								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>							ColorSpace 3 3 -1 roll bind put<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					ColorSpace 2 /DeviceGray put																		<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				end<span class="pl-c2"></span>				}def<span class="pl-c2"></span>			/AGMCORE_separateShadingDict<span class="pl-c2"></span>				{<span class="pl-c2"></span>				dup /ColorSpace get<span class="pl-c2"></span>				dup type /arraytype ne<span class="pl-c2"></span>					{[exch]}if<span class="pl-c2"></span>				dup 0 get /DeviceCMYK eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>					exch begin <span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					AGMCORE_cyan_plate<span class="pl-c2"></span>						{0 true}if<span class="pl-c2"></span>					AGMCORE_magenta_plate<span class="pl-c2"></span>						{1 true}if<span class="pl-c2"></span>					AGMCORE_yellow_plate<span class="pl-c2"></span>						{2 true}if<span class="pl-c2"></span>					AGMCORE_black_plate<span class="pl-c2"></span>						{3 true}if<span class="pl-c2"></span>					AGMCORE_plate_ndx 4 eq<span class="pl-c2"></span>						{0 false}if		<span class="pl-c2"></span>					dup not currentoverprint and<span class="pl-c2"></span>						{/AGMCORE_ignoreshade true def}if<span class="pl-c2"></span>					AGMCORE_separateShading<span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					end exch<span class="pl-c2"></span>					}if<span class="pl-c2"></span>				dup 0 get /Separation eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>					exch begin<span class="pl-c2"></span>					ColorSpace 1 get dup /None ne exch /All ne and<span class="pl-c2"></span>						{<span class="pl-c2"></span>						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and<span class="pl-c2"></span>							{<span class="pl-c2"></span>							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq <span class="pl-c2"></span>								{<span class="pl-c2"></span>								/ColorSpace<span class="pl-c2"></span>									[<span class="pl-c2"></span>									/Separation<span class="pl-c2"></span>									ColorSpace 1 get<span class="pl-c2"></span>									/DeviceGray<span class="pl-c2"></span>										[<span class="pl-c2"></span>										ColorSpace 3 get /exec cvx<span class="pl-c2"></span>										4 AGMCORE_plate_ndx sub -1 /roll cvx<span class="pl-c2"></span>										4 1 /roll cvx<span class="pl-c2"></span>										3 [/pop cvx]cvx /repeat cvx<span class="pl-c2"></span>										1 /exch cvx /sub cvx<span class="pl-c2"></span>										]cvx									<span class="pl-c2"></span>									]def<span class="pl-c2"></span>								}{<span class="pl-c2"></span>								AGMCORE_report_unsupported_color_space<span class="pl-c2"></span>								AGMCORE_black_plate not<span class="pl-c2"></span>									{<span class="pl-c2"></span>									currentdict 0 false AGMCORE_separateShading<span class="pl-c2"></span>									}if<span class="pl-c2"></span>								}ifelse<span class="pl-c2"></span>							}{<span class="pl-c2"></span>							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor<span class="pl-c2"></span>							0 exch <span class="pl-c2"></span>							dup not currentoverprint and<span class="pl-c2"></span>								{/AGMCORE_ignoreshade true def}if<span class="pl-c2"></span>							AGMCORE_separateShading<span class="pl-c2"></span>							}ifelse	<span class="pl-c2"></span>						}if			<span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					end exch<span class="pl-c2"></span>					}if<span class="pl-c2"></span>				dup 0 get /DeviceN eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>					exch begin<span class="pl-c2"></span>					ColorSpace 1 get convert_to_process<span class="pl-c2"></span>						{<span class="pl-c2"></span>						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq <span class="pl-c2"></span>							{<span class="pl-c2"></span>							/ColorSpace<span class="pl-c2"></span>								[<span class="pl-c2"></span>								/DeviceN<span class="pl-c2"></span>								ColorSpace 1 get<span class="pl-c2"></span>								/DeviceGray<span class="pl-c2"></span>									[<span class="pl-c2"></span>									ColorSpace 3 get /exec cvx<span class="pl-c2"></span>									4 AGMCORE_plate_ndx sub -1 /roll cvx<span class="pl-c2"></span>									4 1 /roll cvx<span class="pl-c2"></span>									3 [/pop cvx]cvx /repeat cvx<span class="pl-c2"></span>									1 /exch cvx /sub cvx<span class="pl-c2"></span>									]cvx									<span class="pl-c2"></span>								]def<span class="pl-c2"></span>							}{<span class="pl-c2"></span>							AGMCORE_report_unsupported_color_space<span class="pl-c2"></span>							AGMCORE_black_plate not<span class="pl-c2"></span>								{<span class="pl-c2"></span>								currentdict 0 false AGMCORE_separateShading<span class="pl-c2"></span>								/ColorSpace [/DeviceGray] def<span class="pl-c2"></span>								}if<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>						}{<span class="pl-c2"></span>						currentdict<span class="pl-c2"></span>						false -1 ColorSpace 1 get<span class="pl-c2"></span>							{<span class="pl-c2"></span>							AGMCORE_IsCurrentColor<span class="pl-c2"></span>								{<span class="pl-c2"></span>								1 add<span class="pl-c2"></span>								exch pop true exch exit<span class="pl-c2"></span>								}if<span class="pl-c2"></span>							1 add<span class="pl-c2"></span>							}forall<span class="pl-c2"></span>						exch <span class="pl-c2"></span>						dup not currentoverprint and<span class="pl-c2"></span>							{/AGMCORE_ignoreshade true def}if<span class="pl-c2"></span>						AGMCORE_separateShading<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					end exch<span class="pl-c2"></span>					}if<span class="pl-c2"></span>				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not<span class="pl-c2"></span>					{<span class="pl-c2"></span>					exch begin<span class="pl-c2"></span>					ColorSpace dup type /arraytype eq<span class="pl-c2"></span>						{0 get}if<span class="pl-c2"></span>					/DeviceGray ne<span class="pl-c2"></span>						{<span class="pl-c2"></span>						AGMCORE_report_unsupported_color_space<span class="pl-c2"></span>						AGMCORE_black_plate not<span class="pl-c2"></span>							{<span class="pl-c2"></span>							ColorSpace 0 get /CIEBasedA eq<span class="pl-c2"></span>								{<span class="pl-c2"></span>								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def<span class="pl-c2"></span>								}if<span class="pl-c2"></span>							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or<span class="pl-c2"></span>								{<span class="pl-c2"></span>								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def<span class="pl-c2"></span>								}if<span class="pl-c2"></span>							ColorSpace 0 get /CIEBasedDEFG eq<span class="pl-c2"></span>								{<span class="pl-c2"></span>								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def<span class="pl-c2"></span>								}if<span class="pl-c2"></span>							currentdict 0 false AGMCORE_separateShading<span class="pl-c2"></span>							}if<span class="pl-c2"></span>						}if<span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					end exch<span class="pl-c2"></span>					}if<span class="pl-c2"></span>				pop<span class="pl-c2"></span>				dup /AGMCORE_ignoreshade known<span class="pl-c2"></span>					{<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					/ColorSpace [/Separation (None) /DeviceGray {}] def<span class="pl-c2"></span>					currentdict end<span class="pl-c2"></span>					}if<span class="pl-c2"></span>				}def<span class="pl-c2"></span>			/shfill<span class="pl-c2"></span>				{<span class="pl-c2"></span>				AGMCORE_separateShadingDict <span class="pl-c2"></span>				dup /AGMCORE_ignoreshade known<span class="pl-c2"></span>					{pop}<span class="pl-c2"></span>					{AGMCORE_&amp;sysshfill}ifelse<span class="pl-c2"></span>				}def<span class="pl-c2"></span>			/makepattern<span class="pl-c2"></span>				{<span class="pl-c2"></span>				exch<span class="pl-c2"></span>				dup /PatternType get 2 eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>					clonedict<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					/Shading Shading AGMCORE_separateShadingDict def<span class="pl-c2"></span>					Shading /AGMCORE_ignoreshade known<span class="pl-c2"></span>					currentdict end exch<span class="pl-c2"></span>					{pop &lt;&lt;/PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3&gt;&gt;}if<span class="pl-c2"></span>					exch AGMCORE_&amp;sysmakepattern<span class="pl-c2"></span>					}{<span class="pl-c2"></span>					exch AGMCORE_&amp;usrmakepattern<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}def<span class="pl-c2"></span>		}if<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	AGMCORE_in_rip_sep{<span class="pl-c2"></span>		/setcustomcolor<span class="pl-c2"></span>		{<span class="pl-c2"></span>			exch aload pop<span class="pl-c2"></span>			dup 7 1 roll inRip_spot_has_ink not	{ <span class="pl-c2"></span>				4 {4 index mul 4 1 roll}<span class="pl-c2"></span>				repeat<span class="pl-c2"></span>				/DeviceCMYK setcolorspace<span class="pl-c2"></span>				6 -2 roll pop pop<span class="pl-c2"></span>			}{ <span class="pl-c2"></span>				//Adobe_AGM_Core begin<span class="pl-c2"></span>					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf<span class="pl-c2"></span>				end<span class="pl-c2"></span>				[/Separation 4 -1 roll /DeviceCMYK<span class="pl-c2"></span>				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}<span class="pl-c2"></span>				]<span class="pl-c2"></span>				setcolorspace<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>			setcolor<span class="pl-c2"></span>		}ndf<span class="pl-c2"></span>		/setseparationgray<span class="pl-c2"></span>		{<span class="pl-c2"></span>			[/Separation (All) /DeviceGray {}] setcolorspace_opt<span class="pl-c2"></span>			1 exch sub setcolor<span class="pl-c2"></span>		}ndf<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		/setseparationgray<span class="pl-c2"></span>		{<span class="pl-c2"></span>			AGMCORE_&amp;setgray<span class="pl-c2"></span>		}ndf<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	/findcmykcustomcolor<span class="pl-c2"></span>	{<span class="pl-c2"></span>		5 makereadonlyarray<span class="pl-c2"></span>	}ndf<span class="pl-c2"></span>	/setcustomcolor<span class="pl-c2"></span>	{<span class="pl-c2"></span>		exch aload pop pop<span class="pl-c2"></span>		4 {4 index mul 4 1 roll} repeat<span class="pl-c2"></span>		setcmykcolor pop<span class="pl-c2"></span>	}ndf<span class="pl-c2"></span>	/has_color<span class="pl-c2"></span>		/colorimage where{<span class="pl-c2"></span>			AGMCORE_producing_seps{<span class="pl-c2"></span>				pop true<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				systemdict eq<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			false<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	def<span class="pl-c2"></span>	/map_index<span class="pl-c2"></span>	{<span class="pl-c2"></span>		1 index mul exch getinterval {255 div} forall<span class="pl-c2"></span>	} bdf<span class="pl-c2"></span>	/map_indexed_devn<span class="pl-c2"></span>	{<span class="pl-c2"></span>		Lookup Names length 3 -1 roll cvi map_index<span class="pl-c2"></span>	} bdf<span class="pl-c2"></span>	/n_color_components<span class="pl-c2"></span>	{<span class="pl-c2"></span>		base_colorspace_type<span class="pl-c2"></span>		dup /DeviceGray eq{<span class="pl-c2"></span>			pop 1<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			/DeviceCMYK eq{<span class="pl-c2"></span>				4<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				3<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}bdf<span class="pl-c2"></span>	level2{<span class="pl-c2"></span>		/mo /moveto ldf<span class="pl-c2"></span>		/li /lineto ldf<span class="pl-c2"></span>		/cv /curveto ldf<span class="pl-c2"></span>		/knockout_unitsq<span class="pl-c2"></span>		{<span class="pl-c2"></span>			1 setgray<span class="pl-c2"></span>			0 0 1 1 rectfill<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		level2 /setcolorspace AGMCORE_key_known not and{<span class="pl-c2"></span>			/AGMCORE_&amp;&amp;&amp;setcolorspace /setcolorspace ldf<span class="pl-c2"></span>			/AGMCORE_ReplaceMappedColor<span class="pl-c2"></span>			{<span class="pl-c2"></span>				dup type dup /arraytype eq exch /packedarraytype eq or<span class="pl-c2"></span>				{<span class="pl-c2"></span>					/AGMCORE_SpotAliasAry2 where {<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						dup 0 get dup /Separation eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>							pop<span class="pl-c2"></span>							dup length array copy<span class="pl-c2"></span>							dup dup 1 get<span class="pl-c2"></span>							current_spot_alias<span class="pl-c2"></span>							{<span class="pl-c2"></span>								dup map_alias<span class="pl-c2"></span>								{<span class="pl-c2"></span>									false set_spot_alias<span class="pl-c2"></span>									dup 1 exch setsepcolorspace<span class="pl-c2"></span>									true set_spot_alias<span class="pl-c2"></span>									begin<span class="pl-c2"></span>									/sep_colorspace_dict currentdict AGMCORE_gput<span class="pl-c2"></span>									pop pop	pop<span class="pl-c2"></span>									[ <span class="pl-c2"></span>										/Separation Name <span class="pl-c2"></span>										CSA map_csa<span class="pl-c2"></span>										MappedCSA <span class="pl-c2"></span>										/sep_colorspace_proc load<span class="pl-c2"></span>									]<span class="pl-c2"></span>									dup Name<span class="pl-c2"></span>									end<span class="pl-c2"></span>								}if<span class="pl-c2"></span>							}if<span class="pl-c2"></span>							map_reserved_ink_name 1 xpt<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							/DeviceN eq <span class="pl-c2"></span>							{<span class="pl-c2"></span>								dup length array copy<span class="pl-c2"></span>								dup dup 1 get [ <span class="pl-c2"></span>									exch {<span class="pl-c2"></span>										current_spot_alias{<span class="pl-c2"></span>											dup map_alias{<span class="pl-c2"></span>												/Name get exch pop<span class="pl-c2"></span>											}if<span class="pl-c2"></span>										}if<span class="pl-c2"></span>										map_reserved_ink_name<span class="pl-c2"></span>									} forall <span class="pl-c2"></span>								] 1 xpt<span class="pl-c2"></span>							}if<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>						end<span class="pl-c2"></span>					} if<span class="pl-c2"></span>				}if<span class="pl-c2"></span>			}def<span class="pl-c2"></span>			/setcolorspace<span class="pl-c2"></span>			{<span class="pl-c2"></span>				dup type dup /arraytype eq exch /packedarraytype eq or<span class="pl-c2"></span>				{<span class="pl-c2"></span>					dup 0 get /Indexed eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>						AGMCORE_distilling<span class="pl-c2"></span>						{<span class="pl-c2"></span>							/PhotoshopDuotoneList where<span class="pl-c2"></span>							{<span class="pl-c2"></span>								pop false<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								true<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							true<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>						{<span class="pl-c2"></span>							aload pop 3 -1 roll<span class="pl-c2"></span>							AGMCORE_ReplaceMappedColor<span class="pl-c2"></span>							3 1 roll 4 array astore<span class="pl-c2"></span>						}if<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						AGMCORE_ReplaceMappedColor<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}if<span class="pl-c2"></span>				DeviceN_PS2_inRip_seps {AGMCORE_&amp;&amp;&amp;setcolorspace} if<span class="pl-c2"></span>			}def<span class="pl-c2"></span>		}if	<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		/adj<span class="pl-c2"></span>		{<span class="pl-c2"></span>			currentstrokeadjust{<span class="pl-c2"></span>				transform<span class="pl-c2"></span>				0.25 sub round 0.25 add exch<span class="pl-c2"></span>				0.25 sub round 0.25 add exch<span class="pl-c2"></span>				itransform<span class="pl-c2"></span>			}if<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/mo{<span class="pl-c2"></span>			adj moveto<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/li{<span class="pl-c2"></span>			adj lineto<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/cv{<span class="pl-c2"></span>			6 2 roll adj<span class="pl-c2"></span>			6 2 roll adj<span class="pl-c2"></span>			6 2 roll adj curveto<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/knockout_unitsq<span class="pl-c2"></span>		{<span class="pl-c2"></span>			1 setgray<span class="pl-c2"></span>			8 8 1 [8 0 0 8 0 0] {&lt;ffffffffffffffff&gt;} image<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/currentstrokeadjust{<span class="pl-c2"></span>			/currentstrokeadjust AGMCORE_gget<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/setstrokeadjust{<span class="pl-c2"></span>			/currentstrokeadjust exch AGMCORE_gput<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/setcolorspace<span class="pl-c2"></span>		{<span class="pl-c2"></span>			/currentcolorspace exch AGMCORE_gput<span class="pl-c2"></span>		} def<span class="pl-c2"></span>		/currentcolorspace<span class="pl-c2"></span>		{<span class="pl-c2"></span>			/currentcolorspace AGMCORE_gget<span class="pl-c2"></span>		} def<span class="pl-c2"></span>		/setcolor_devicecolor<span class="pl-c2"></span>		{<span class="pl-c2"></span>			base_colorspace_type<span class="pl-c2"></span>			dup /DeviceGray eq{<span class="pl-c2"></span>				pop setgray<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				/DeviceCMYK eq{<span class="pl-c2"></span>					setcmykcolor<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					setrgbcolor<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/setcolor<span class="pl-c2"></span>		{<span class="pl-c2"></span>			currentcolorspace 0 get<span class="pl-c2"></span>			dup /DeviceGray ne{<span class="pl-c2"></span>				dup /DeviceCMYK ne{<span class="pl-c2"></span>					dup /DeviceRGB ne{<span class="pl-c2"></span>						dup /Separation eq{<span class="pl-c2"></span>							pop<span class="pl-c2"></span>							currentcolorspace 3 get exec<span class="pl-c2"></span>							currentcolorspace 2 get<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							dup /Indexed eq{<span class="pl-c2"></span>								pop<span class="pl-c2"></span>								currentcolorspace 3 get dup type /stringtype eq{<span class="pl-c2"></span>									currentcolorspace 1 get n_color_components<span class="pl-c2"></span>									3 -1 roll map_index<span class="pl-c2"></span>								}{<span class="pl-c2"></span>									exec<span class="pl-c2"></span>								}ifelse<span class="pl-c2"></span>								currentcolorspace 1 get<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								/AGMCORE_cur_err /AGMCORE_invalid_color_space def<span class="pl-c2"></span>								AGMCORE_invalid_color_space<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					}if<span class="pl-c2"></span>				}if<span class="pl-c2"></span>			}if<span class="pl-c2"></span>			setcolor_devicecolor<span class="pl-c2"></span>		} def<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	/sop /setoverprint ldf<span class="pl-c2"></span>	/lw /setlinewidth ldf<span class="pl-c2"></span>	/lc /setlinecap ldf<span class="pl-c2"></span>	/lj /setlinejoin ldf<span class="pl-c2"></span>	/ml /setmiterlimit ldf<span class="pl-c2"></span>	/dsh /setdash ldf<span class="pl-c2"></span>	/sadj /setstrokeadjust ldf<span class="pl-c2"></span>	/gry /setgray ldf<span class="pl-c2"></span>	/rgb /setrgbcolor ldf<span class="pl-c2"></span>	/cmyk /setcmykcolor ldf<span class="pl-c2"></span>	/sep /setsepcolor ldf<span class="pl-c2"></span>	/devn /setdevicencolor ldf<span class="pl-c2"></span>	/idx /setindexedcolor ldf<span class="pl-c2"></span>	/colr /setcolor ldf<span class="pl-c2"></span>	/csacrd /set_csa_crd ldf<span class="pl-c2"></span>	/sepcs /setsepcolorspace ldf<span class="pl-c2"></span>	/devncs /setdevicencolorspace ldf<span class="pl-c2"></span>	/idxcs /setindexedcolorspace ldf<span class="pl-c2"></span>	/cp /closepath ldf<span class="pl-c2"></span>	/clp /clp_npth ldf<span class="pl-c2"></span>	/eclp /eoclp_npth ldf<span class="pl-c2"></span>	/f /fill ldf<span class="pl-c2"></span>	/ef /eofill ldf<span class="pl-c2"></span>	/@ /stroke ldf<span class="pl-c2"></span>	/nclp /npth_clp ldf<span class="pl-c2"></span>	/gset /graphic_setup ldf<span class="pl-c2"></span>	/gcln /graphic_cleanup ldf<span class="pl-c2"></span>	/AGMCORE_def_ht currenthalftone def<span class="pl-c2"></span>	/clonedict Adobe_AGM_Utils begin /clonedict load end def<span class="pl-c2"></span>	/clonearray Adobe_AGM_Utils begin /clonearray load end def<span class="pl-c2"></span>	currentdict{<span class="pl-c2"></span>		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {<span class="pl-c2"></span>			bind<span class="pl-c2"></span>		}if<span class="pl-c2"></span>		def<span class="pl-c2"></span>	}forall<span class="pl-c2"></span>	/getrampcolor<span class="pl-c2"></span>	{ <span class="pl-c2"></span>		/indx exch def<span class="pl-c2"></span>		0 1 NumComp 1 sub<span class="pl-c2"></span>		{<span class="pl-c2"></span>			dup<span class="pl-c2"></span>			Samples exch get<span class="pl-c2"></span>			dup type /stringtype eq {indx get} if<span class="pl-c2"></span>			exch<span class="pl-c2"></span>			Scaling exch get aload pop<span class="pl-c2"></span>			3 1 roll<span class="pl-c2"></span>			mul add<span class="pl-c2"></span>		} for<span class="pl-c2"></span>		ColorSpaceFamily /Separation eq <span class="pl-c2"></span>		{sep}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			ColorSpaceFamily /DeviceN eq<span class="pl-c2"></span>			{devn} {setcolor}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	} bdf<span class="pl-c2"></span>	/sssetbackground {aload pop setcolor} bdf<span class="pl-c2"></span>	/RadialShade<span class="pl-c2"></span>	{<span class="pl-c2"></span>		40 dict begin<span class="pl-c2"></span>		/ColorSpaceFamily xdf<span class="pl-c2"></span>		/background xdf<span class="pl-c2"></span>		/ext1 xdf<span class="pl-c2"></span>		/ext0 xdf<span class="pl-c2"></span>		/BBox xdf<span class="pl-c2"></span>		/r2 xdf<span class="pl-c2"></span>		/c2y xdf<span class="pl-c2"></span>		/c2x xdf<span class="pl-c2"></span>		/r1 xdf<span class="pl-c2"></span>		/c1y xdf<span class="pl-c2"></span>		/c1x xdf<span class="pl-c2"></span>		/rampdict xdf<span class="pl-c2"></span>		/setinkoverprint where {pop /setinkoverprint{pop}def}if<span class="pl-c2"></span>		gsave<span class="pl-c2"></span>		BBox length 0 gt<span class="pl-c2"></span>		{<span class="pl-c2"></span>			newpath<span class="pl-c2"></span>			BBox 0 get BBox 1 get moveto<span class="pl-c2"></span>			BBox 2 get BBox 0 get sub 0 rlineto<span class="pl-c2"></span>			0 BBox 3 get BBox 1 get sub rlineto<span class="pl-c2"></span>			BBox 2 get BBox 0 get sub neg 0 rlineto<span class="pl-c2"></span>			closepath<span class="pl-c2"></span>			clip<span class="pl-c2"></span>			newpath<span class="pl-c2"></span>		} if<span class="pl-c2"></span>		c1x c2x eq<span class="pl-c2"></span>		{<span class="pl-c2"></span>			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			/slope c2y c1y sub c2x c1x sub div def<span class="pl-c2"></span>			/theta slope 1 atan def<span class="pl-c2"></span>			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if<span class="pl-c2"></span>			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>		gsave<span class="pl-c2"></span>		clippath<span class="pl-c2"></span>		c1x c1y translate<span class="pl-c2"></span>		theta rotate<span class="pl-c2"></span>		-90 rotate<span class="pl-c2"></span>		{ pathbbox } stopped<span class="pl-c2"></span>		{ 0 0 0 0 } if<span class="pl-c2"></span>		/yMax xdf<span class="pl-c2"></span>		/xMax xdf<span class="pl-c2"></span>		/yMin xdf<span class="pl-c2"></span>		/xMin xdf<span class="pl-c2"></span>		grestore<span class="pl-c2"></span>		xMax xMin eq yMax yMin eq or<span class="pl-c2"></span>		{<span class="pl-c2"></span>			grestore<span class="pl-c2"></span>			end<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			/max { 2 copy gt { pop } {exch pop} ifelse } bdf<span class="pl-c2"></span>			/min { 2 copy lt { pop } {exch pop} ifelse } bdf<span class="pl-c2"></span>			rampdict begin<span class="pl-c2"></span>			40 dict begin<span class="pl-c2"></span>			background length 0 gt { background sssetbackground gsave clippath fill grestore } if<span class="pl-c2"></span>			gsave<span class="pl-c2"></span>			c1x c1y translate<span class="pl-c2"></span>			theta rotate<span class="pl-c2"></span>			-90 rotate<span class="pl-c2"></span>			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def<span class="pl-c2"></span>			/c1y 0 def<span class="pl-c2"></span>			/c1x 0 def<span class="pl-c2"></span>			/c2x 0 def<span class="pl-c2"></span>			ext0<span class="pl-c2"></span>			{<span class="pl-c2"></span>				0 getrampcolor<span class="pl-c2"></span>				c2y r2 add r1 sub 0.0001 lt<span class="pl-c2"></span>				{<span class="pl-c2"></span>					c1x c1y r1 360 0 arcn<span class="pl-c2"></span>					pathbbox<span class="pl-c2"></span>					/aymax exch def<span class="pl-c2"></span>					/axmax exch def<span class="pl-c2"></span>					/aymin exch def<span class="pl-c2"></span>					/axmin exch def<span class="pl-c2"></span>					/bxMin xMin axmin min def<span class="pl-c2"></span>					/byMin yMin aymin min def<span class="pl-c2"></span>					/bxMax xMax axmax max def<span class="pl-c2"></span>					/byMax yMax aymax max def<span class="pl-c2"></span>					bxMin byMin moveto<span class="pl-c2"></span>					bxMax byMin lineto<span class="pl-c2"></span>					bxMax byMax lineto<span class="pl-c2"></span>					bxMin byMax lineto<span class="pl-c2"></span>					bxMin byMin lineto<span class="pl-c2"></span>					eofill<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{<span class="pl-c2"></span>					c2y r1 add r2 le<span class="pl-c2"></span>					{<span class="pl-c2"></span>						c1x c1y r1 0 360 arc<span class="pl-c2"></span>						fill<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{<span class="pl-c2"></span>						c2x c2y r2 0 360 arc fill<span class="pl-c2"></span>						r1 r2 eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>							/p1x r1 neg def<span class="pl-c2"></span>							/p1y c1y def<span class="pl-c2"></span>							/p2x r1 def<span class="pl-c2"></span>							/p2y c1y def<span class="pl-c2"></span>							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto<span class="pl-c2"></span>							fill<span class="pl-c2"></span>						}<span class="pl-c2"></span>						{<span class="pl-c2"></span>							/AA r2 r1 sub c2y div def<span class="pl-c2"></span>							AA -1 eq<span class="pl-c2"></span>							{ /theta 89.99 def}<span class="pl-c2"></span>							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							/SS1 90 theta add dup sin exch cos div def<span class="pl-c2"></span>							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def<span class="pl-c2"></span>							/p1y p1x SS1 div neg def<span class="pl-c2"></span>							/SS2 90 theta sub dup sin exch cos div def<span class="pl-c2"></span>							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def<span class="pl-c2"></span>							/p2y p2x SS2 div neg def<span class="pl-c2"></span>							r1 r2 gt<span class="pl-c2"></span>							{<span class="pl-c2"></span>								/L1maxX p1x yMin p1y sub SS1 div add def<span class="pl-c2"></span>								/L2maxX p2x yMin p2y sub SS2 div add def<span class="pl-c2"></span>							}<span class="pl-c2"></span>							{<span class="pl-c2"></span>								/L1maxX 0 def<span class="pl-c2"></span>								/L2maxX 0 def<span class="pl-c2"></span>							} ifelse<span class="pl-c2"></span>							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto<span class="pl-c2"></span>							L1maxX L1maxX p1x sub SS1 mul p1y add lineto<span class="pl-c2"></span>							fill<span class="pl-c2"></span>						} ifelse<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>			} if<span class="pl-c2"></span>		c1x c2x sub dup mul<span class="pl-c2"></span>		c1y c2y sub dup mul<span class="pl-c2"></span>		add 0.5 exp<span class="pl-c2"></span>		0 dtransform<span class="pl-c2"></span>		dup mul exch dup mul add 0.5 exp 72 div<span class="pl-c2"></span>		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt<span class="pl-c2"></span>		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt<span class="pl-c2"></span>		1 index 1 index lt { exch } if pop<span class="pl-c2"></span>		/hires xdf<span class="pl-c2"></span>		hires mul<span class="pl-c2"></span>		/numpix xdf<span class="pl-c2"></span>		/numsteps NumSamples def<span class="pl-c2"></span>		/rampIndxInc 1 def<span class="pl-c2"></span>		/subsampling false def<span class="pl-c2"></span>		numpix 0 ne<span class="pl-c2"></span>		{<span class="pl-c2"></span>			NumSamples numpix div 0.5 gt<span class="pl-c2"></span>			{<span class="pl-c2"></span>				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def<span class="pl-c2"></span>				/rampIndxInc NumSamples 1 sub numsteps div def<span class="pl-c2"></span>				/subsampling true def<span class="pl-c2"></span>			} if<span class="pl-c2"></span>		} if<span class="pl-c2"></span>		/xInc c2x c1x sub numsteps div def<span class="pl-c2"></span>		/yInc c2y c1y sub numsteps div def<span class="pl-c2"></span>		/rInc r2 r1 sub numsteps div def<span class="pl-c2"></span>		/cx c1x def<span class="pl-c2"></span>		/cy c1y def<span class="pl-c2"></span>		/radius r1 def<span class="pl-c2"></span>		newpath<span class="pl-c2"></span>		xInc 0 eq yInc 0 eq rInc 0 eq and and<span class="pl-c2"></span>		{<span class="pl-c2"></span>			0 getrampcolor<span class="pl-c2"></span>			cx cy radius 0 360 arc<span class="pl-c2"></span>			stroke<span class="pl-c2"></span>			NumSamples 1 sub getrampcolor<span class="pl-c2"></span>			cx cy radius 72 hires div add 0 360 arc<span class="pl-c2"></span>			0 setlinewidth<span class="pl-c2"></span>			stroke<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			0<span class="pl-c2"></span>			numsteps<span class="pl-c2"></span>			{<span class="pl-c2"></span>				dup<span class="pl-c2"></span>				subsampling { round cvi } if<span class="pl-c2"></span>				getrampcolor<span class="pl-c2"></span>				cx cy radius 0 360 arc<span class="pl-c2"></span>				/cx cx xInc add def<span class="pl-c2"></span>				/cy cy yInc add def<span class="pl-c2"></span>				/radius radius rInc add def<span class="pl-c2"></span>				cx cy radius 360 0 arcn<span class="pl-c2"></span>				eofill<span class="pl-c2"></span>				rampIndxInc add<span class="pl-c2"></span>			} repeat<span class="pl-c2"></span>			pop<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>		ext1<span class="pl-c2"></span>		{<span class="pl-c2"></span>			c2y r2 add r1 lt<span class="pl-c2"></span>			{<span class="pl-c2"></span>				c2x c2y r2 0 360 arc<span class="pl-c2"></span>				fill<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{<span class="pl-c2"></span>				c2y r1 add r2 sub 0.0001 le<span class="pl-c2"></span>				{<span class="pl-c2"></span>					c2x c2y r2 360 0 arcn<span class="pl-c2"></span>					pathbbox<span class="pl-c2"></span>					/aymax exch def<span class="pl-c2"></span>					/axmax exch def<span class="pl-c2"></span>					/aymin exch def<span class="pl-c2"></span>					/axmin exch def<span class="pl-c2"></span>					/bxMin xMin axmin min def<span class="pl-c2"></span>					/byMin yMin aymin min def<span class="pl-c2"></span>					/bxMax xMax axmax max def<span class="pl-c2"></span>					/byMax yMax aymax max def<span class="pl-c2"></span>					bxMin byMin moveto<span class="pl-c2"></span>					bxMax byMin lineto<span class="pl-c2"></span>					bxMax byMax lineto<span class="pl-c2"></span>					bxMin byMax lineto<span class="pl-c2"></span>					bxMin byMin lineto<span class="pl-c2"></span>					eofill<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{<span class="pl-c2"></span>					c2x c2y r2 0 360 arc fill<span class="pl-c2"></span>					r1 r2 eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>						/p1x r2 neg def<span class="pl-c2"></span>						/p1y c2y def<span class="pl-c2"></span>						/p2x r2 def<span class="pl-c2"></span>						/p2y c2y def<span class="pl-c2"></span>						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto<span class="pl-c2"></span>						fill<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{<span class="pl-c2"></span>						/AA r2 r1 sub c2y div def<span class="pl-c2"></span>						AA -1 eq<span class="pl-c2"></span>						{ /theta 89.99 def}<span class="pl-c2"></span>						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						/SS1 90 theta add dup sin exch cos div def<span class="pl-c2"></span>						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def<span class="pl-c2"></span>						/p1y c2y p1x SS1 div sub def<span class="pl-c2"></span>						/SS2 90 theta sub dup sin exch cos div def<span class="pl-c2"></span>						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def<span class="pl-c2"></span>						/p2y c2y p2x SS2 div sub def<span class="pl-c2"></span>						r1 r2 lt<span class="pl-c2"></span>						{<span class="pl-c2"></span>							/L1maxX p1x yMax p1y sub SS1 div add def<span class="pl-c2"></span>							/L2maxX p2x yMax p2y sub SS2 div add def<span class="pl-c2"></span>						}<span class="pl-c2"></span>						{<span class="pl-c2"></span>							/L1maxX 0 def<span class="pl-c2"></span>							/L2maxX 0 def<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto<span class="pl-c2"></span>						L1maxX L1maxX p1x sub SS1 mul p1y add lineto<span class="pl-c2"></span>						fill<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>		} if<span class="pl-c2"></span>		grestore<span class="pl-c2"></span>		grestore<span class="pl-c2"></span>		end<span class="pl-c2"></span>		end<span class="pl-c2"></span>		end<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	} bdf<span class="pl-c2"></span>	/GenStrips<span class="pl-c2"></span>	{<span class="pl-c2"></span>		40 dict begin<span class="pl-c2"></span>		/ColorSpaceFamily xdf<span class="pl-c2"></span>		/background xdf<span class="pl-c2"></span>		/ext1 xdf<span class="pl-c2"></span>		/ext0 xdf<span class="pl-c2"></span>		/BBox xdf<span class="pl-c2"></span>		/y2 xdf<span class="pl-c2"></span>		/x2 xdf<span class="pl-c2"></span>		/y1 xdf<span class="pl-c2"></span>		/x1 xdf<span class="pl-c2"></span>		/rampdict xdf<span class="pl-c2"></span>		/setinkoverprint where {pop /setinkoverprint{pop}def}if<span class="pl-c2"></span>		gsave<span class="pl-c2"></span>		BBox length 0 gt<span class="pl-c2"></span>		{<span class="pl-c2"></span>			newpath<span class="pl-c2"></span>			BBox 0 get BBox 1 get moveto<span class="pl-c2"></span>			BBox 2 get BBox 0 get sub 0 rlineto<span class="pl-c2"></span>			0 BBox 3 get BBox 1 get sub rlineto<span class="pl-c2"></span>			BBox 2 get BBox 0 get sub neg 0 rlineto<span class="pl-c2"></span>			closepath<span class="pl-c2"></span>			clip<span class="pl-c2"></span>			newpath<span class="pl-c2"></span>		} if<span class="pl-c2"></span>		x1 x2 eq<span class="pl-c2"></span>		{<span class="pl-c2"></span>			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			/slope y2 y1 sub x2 x1 sub div def<span class="pl-c2"></span>			/theta slope 1 atan def<span class="pl-c2"></span>			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if<span class="pl-c2"></span>			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if<span class="pl-c2"></span>		}<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		gsave<span class="pl-c2"></span>		clippath<span class="pl-c2"></span>		x1 y1 translate<span class="pl-c2"></span>		theta rotate<span class="pl-c2"></span>		{ pathbbox } stopped<span class="pl-c2"></span>		{ 0 0 0 0 } if<span class="pl-c2"></span>		/yMax exch def<span class="pl-c2"></span>		/xMax exch def<span class="pl-c2"></span>		/yMin exch def<span class="pl-c2"></span>		/xMin exch def<span class="pl-c2"></span>		grestore<span class="pl-c2"></span>		xMax xMin eq yMax yMin eq or<span class="pl-c2"></span>		{<span class="pl-c2"></span>			grestore<span class="pl-c2"></span>			end<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			rampdict begin<span class="pl-c2"></span>			20 dict begin<span class="pl-c2"></span>			background length 0 gt { background sssetbackground gsave clippath fill grestore } if<span class="pl-c2"></span>			gsave<span class="pl-c2"></span>			x1 y1 translate<span class="pl-c2"></span>			theta rotate<span class="pl-c2"></span>			/xStart 0 def<span class="pl-c2"></span>			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def<span class="pl-c2"></span>			/ySpan yMax yMin sub def<span class="pl-c2"></span>			/numsteps NumSamples def<span class="pl-c2"></span>			/rampIndxInc 1 def<span class="pl-c2"></span>			/subsampling false def<span class="pl-c2"></span>			xStart 0 transform<span class="pl-c2"></span>			xEnd 0 transform<span class="pl-c2"></span>			3 -1 roll<span class="pl-c2"></span>			sub dup mul<span class="pl-c2"></span>			3 1 roll<span class="pl-c2"></span>			sub dup mul<span class="pl-c2"></span>			add 0.5 exp 72 div<span class="pl-c2"></span>			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt<span class="pl-c2"></span>			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt<span class="pl-c2"></span>			1 index 1 index lt { exch } if pop<span class="pl-c2"></span>			mul<span class="pl-c2"></span>			/numpix xdf<span class="pl-c2"></span>			numpix 0 ne<span class="pl-c2"></span>			{<span class="pl-c2"></span>				NumSamples numpix div 0.5 gt<span class="pl-c2"></span>				{<span class="pl-c2"></span>					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def<span class="pl-c2"></span>					/rampIndxInc NumSamples 1 sub numsteps div def<span class="pl-c2"></span>					/subsampling true def<span class="pl-c2"></span>				} if<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			ext0<span class="pl-c2"></span>			{<span class="pl-c2"></span>				0 getrampcolor<span class="pl-c2"></span>				xMin xStart lt<span class="pl-c2"></span>				{<span class="pl-c2"></span>					xMin yMin xMin neg ySpan rectfill<span class="pl-c2"></span>				} if<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			/xInc xEnd xStart sub numsteps div def<span class="pl-c2"></span>			/x xStart def<span class="pl-c2"></span>			0<span class="pl-c2"></span>			numsteps<span class="pl-c2"></span>			{<span class="pl-c2"></span>				dup<span class="pl-c2"></span>				subsampling { round cvi } if<span class="pl-c2"></span>				getrampcolor<span class="pl-c2"></span>				x yMin xInc ySpan rectfill<span class="pl-c2"></span>				/x x xInc add def<span class="pl-c2"></span>				rampIndxInc add<span class="pl-c2"></span>			} repeat<span class="pl-c2"></span>			pop<span class="pl-c2"></span>			ext1 {<span class="pl-c2"></span>				xMax xEnd gt<span class="pl-c2"></span>				{<span class="pl-c2"></span>					xEnd yMin xMax xEnd sub ySpan rectfill<span class="pl-c2"></span>				} if<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			grestore<span class="pl-c2"></span>			grestore<span class="pl-c2"></span>			end<span class="pl-c2"></span>			end<span class="pl-c2"></span>			end<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	} bdf<span class="pl-c2"></span>}def<span class="pl-c2"></span>/page_trailer<span class="pl-c2"></span>{<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/doc_trailer{<span class="pl-c2"></span>}def<span class="pl-c2"></span>/capture_currentpagedevice {<span class="pl-c2"></span>	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf<span class="pl-c2"></span>} def<span class="pl-c2"></span>systemdict /findcolorrendering known{<span class="pl-c2"></span>	/findcolorrendering systemdict /findcolorrendering get def<span class="pl-c2"></span>}if<span class="pl-c2"></span>systemdict /setcolorrendering known{<span class="pl-c2"></span>	/setcolorrendering systemdict /setcolorrendering get def<span class="pl-c2"></span>}if<span class="pl-c2"></span>/test_cmyk_color_plate<span class="pl-c2"></span>{<span class="pl-c2"></span>	gsave<span class="pl-c2"></span>	setcmykcolor currentgray 1 ne<span class="pl-c2"></span>	grestore<span class="pl-c2"></span>}def<span class="pl-c2"></span>/inRip_spot_has_ink<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup //Adobe_AGM_Core/AGMCORE_name xddf<span class="pl-c2"></span>	convert_spot_to_process not<span class="pl-c2"></span>}def<span class="pl-c2"></span>/map255_to_range<span class="pl-c2"></span>{<span class="pl-c2"></span>	1 index sub<span class="pl-c2"></span>	3 -1 roll 255 div mul add<span class="pl-c2"></span>}def<span class="pl-c2"></span>/set_csa_crd<span class="pl-c2"></span>{<span class="pl-c2"></span>	/sep_colorspace_dict null AGMCORE_gput<span class="pl-c2"></span>	begin<span class="pl-c2"></span>		CSA get_csa_by_name setcolorspace_opt<span class="pl-c2"></span>		set_crd<span class="pl-c2"></span>	end<span class="pl-c2"></span>}<span class="pl-c2"></span>def<span class="pl-c2"></span>/map_csa<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse<span class="pl-c2"></span>	{pop}{get_csa_by_name /MappedCSA xdf}ifelse<span class="pl-c2"></span>} def<span class="pl-c2"></span>/setsepcolor<span class="pl-c2"></span>{ <span class="pl-c2"></span>	/sep_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>		dup /sep_tint exch AGMCORE_gput<span class="pl-c2"></span>		TintProc<span class="pl-c2"></span>	end<span class="pl-c2"></span>} def<span class="pl-c2"></span>/setdevicencolor<span class="pl-c2"></span>{ <span class="pl-c2"></span>	/devicen_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>		Names length copy<span class="pl-c2"></span>		Names length 1 sub -1 0<span class="pl-c2"></span>		{<span class="pl-c2"></span>			/devicen_tints AGMCORE_gget 3 1 roll xpt<span class="pl-c2"></span>		} for<span class="pl-c2"></span>		TintProc<span class="pl-c2"></span>	end<span class="pl-c2"></span>} def<span class="pl-c2"></span>/sep_colorspace_proc<span class="pl-c2"></span>{<span class="pl-c2"></span>	/AGMCORE_tmp exch store<span class="pl-c2"></span>	/sep_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>	currentdict/Components known{<span class="pl-c2"></span>		Components aload pop <span class="pl-c2"></span>		TintMethod/Lab eq{<span class="pl-c2"></span>			2 {AGMCORE_tmp mul NComponents 1 roll} repeat<span class="pl-c2"></span>			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			TintMethod/Subtractive eq{<span class="pl-c2"></span>				NComponents{<span class="pl-c2"></span>					AGMCORE_tmp mul NComponents 1 roll<span class="pl-c2"></span>				}repeat<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				NComponents{<span class="pl-c2"></span>					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll<span class="pl-c2"></span>				} repeat<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get<span class="pl-c2"></span>		aload pop<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	end<span class="pl-c2"></span>} def<span class="pl-c2"></span>/sep_colorspace_gray_proc<span class="pl-c2"></span>{<span class="pl-c2"></span>	/AGMCORE_tmp exch store<span class="pl-c2"></span>	/sep_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get<span class="pl-c2"></span>	end<span class="pl-c2"></span>} def<span class="pl-c2"></span>/sep_proc_name<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup 0 get <span class="pl-c2"></span>	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{<span class="pl-c2"></span>		pop [/DeviceGray]<span class="pl-c2"></span>		/sep_colorspace_gray_proc<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		/sep_colorspace_proc<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>} def<span class="pl-c2"></span>/setsepcolorspace<span class="pl-c2"></span>{ <span class="pl-c2"></span>	current_spot_alias{<span class="pl-c2"></span>		dup begin<span class="pl-c2"></span>			Name map_alias{<span class="pl-c2"></span>				exch pop<span class="pl-c2"></span>			}if<span class="pl-c2"></span>		end<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	dup /sep_colorspace_dict exch AGMCORE_gput<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	CSA map_csa<span class="pl-c2"></span>	/AGMCORE_sep_special Name dup () eq exch (All) eq or store<span class="pl-c2"></span>	AGMCORE_avoid_L2_sep_space{<span class="pl-c2"></span>		[/Indexed MappedCSA sep_proc_name 255 exch <span class="pl-c2"></span>			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx <span class="pl-c2"></span>		] setcolorspace_opt<span class="pl-c2"></span>		/TintProc {<span class="pl-c2"></span>			255 mul round cvi setcolor<span class="pl-c2"></span>		}bdf<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		MappedCSA 0 get /DeviceCMYK eq <span class="pl-c2"></span>		currentdict/Components known and <span class="pl-c2"></span>		AGMCORE_sep_special not and{<span class="pl-c2"></span>			/TintProc [<span class="pl-c2"></span>				Components aload pop Name findcmykcustomcolor <span class="pl-c2"></span>				/exch cvx /setcustomcolor cvx<span class="pl-c2"></span>			] cvx bdf<span class="pl-c2"></span>		}{<span class="pl-c2"></span> 			AGMCORE_host_sep Name (All) eq and{<span class="pl-c2"></span> 				/TintProc { <span class="pl-c2"></span>					1 exch sub setseparationgray <span class="pl-c2"></span>				}bdf<span class="pl-c2"></span> 			}{<span class="pl-c2"></span>				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and <span class="pl-c2"></span>				AGMCORE_host_sep or<span class="pl-c2"></span>				Name () eq and{<span class="pl-c2"></span>					/TintProc [<span class="pl-c2"></span>						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{<span class="pl-c2"></span>							cvx /setcmykcolor cvx<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							cvx /setgray cvx<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					] cvx bdf<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{<span class="pl-c2"></span>	 					/TintProc [<span class="pl-c2"></span>							/dup cvx<span class="pl-c2"></span>							MappedCSA sep_proc_name cvx exch<span class="pl-c2"></span>							0 get /DeviceGray eq{<span class="pl-c2"></span>								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx<span class="pl-c2"></span>							}if<span class="pl-c2"></span>							/Name cvx /findcmykcustomcolor cvx /exch cvx<span class="pl-c2"></span>							AGMCORE_host_sep{<span class="pl-c2"></span>								AGMCORE_is_cmyk_sep<span class="pl-c2"></span>								/Name cvx <span class="pl-c2"></span>								/AGMCORE_IsSeparationAProcessColor load /exec cvx<span class="pl-c2"></span>								/not cvx /and cvx <span class="pl-c2"></span>							}{<span class="pl-c2"></span>								Name inRip_spot_has_ink not<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>							[<span class="pl-c2"></span>		 						/pop cvx 1<span class="pl-c2"></span>							] cvx /if cvx<span class="pl-c2"></span>							/setcustomcolor cvx<span class="pl-c2"></span>						] cvx bdf<span class="pl-c2"></span> 					}{ <span class="pl-c2"></span>						/TintProc {setcolor} bdf<span class="pl-c2"></span>						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	set_crd<span class="pl-c2"></span>	setsepcolor<span class="pl-c2"></span>	end<span class="pl-c2"></span>} def<span class="pl-c2"></span>/additive_blend<span class="pl-c2"></span>{<span class="pl-c2"></span>  	3 dict begin<span class="pl-c2"></span>  	/numarrays xdf<span class="pl-c2"></span>  	/numcolors xdf<span class="pl-c2"></span>  	0 1 numcolors 1 sub<span class="pl-c2"></span>  		{<span class="pl-c2"></span>  		/c1 xdf<span class="pl-c2"></span>  		1<span class="pl-c2"></span>  		0 1 numarrays 1 sub<span class="pl-c2"></span>  			{<span class="pl-c2"></span>			1 exch add /index cvx<span class="pl-c2"></span>  			c1 /get cvx /mul cvx<span class="pl-c2"></span>  			}for<span class="pl-c2"></span> 		numarrays 1 add 1 /roll cvx <span class="pl-c2"></span>  		}for<span class="pl-c2"></span> 	numarrays [/pop cvx] cvx /repeat cvx<span class="pl-c2"></span>  	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/subtractive_blend<span class="pl-c2"></span>{<span class="pl-c2"></span>	3 dict begin<span class="pl-c2"></span>	/numarrays xdf<span class="pl-c2"></span>	/numcolors xdf<span class="pl-c2"></span>	0 1 numcolors 1 sub<span class="pl-c2"></span>		{<span class="pl-c2"></span>		/c1 xdf<span class="pl-c2"></span>		1 1<span class="pl-c2"></span>		0 1 numarrays 1 sub<span class="pl-c2"></span>			{<span class="pl-c2"></span>			1 3 3 -1 roll add /index cvx  <span class="pl-c2"></span>			c1 /get cvx /sub cvx /mul cvx<span class="pl-c2"></span>			}for<span class="pl-c2"></span>		/sub cvx<span class="pl-c2"></span>		numarrays 1 add 1 /roll cvx<span class="pl-c2"></span>		}for<span class="pl-c2"></span>	numarrays [/pop cvx] cvx /repeat cvx<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/exec_tint_transform<span class="pl-c2"></span>{<span class="pl-c2"></span>	/TintProc [<span class="pl-c2"></span>		/TintTransform cvx /setcolor cvx<span class="pl-c2"></span>	] cvx bdf<span class="pl-c2"></span>	MappedCSA setcolorspace_opt<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/devn_makecustomcolor<span class="pl-c2"></span>{<span class="pl-c2"></span>	2 dict begin<span class="pl-c2"></span>	/names_index xdf<span class="pl-c2"></span>	/Names xdf<span class="pl-c2"></span>	1 1 1 1 Names names_index get findcmykcustomcolor<span class="pl-c2"></span>	/devicen_tints AGMCORE_gget names_index get setcustomcolor<span class="pl-c2"></span>	Names length {pop} repeat<span class="pl-c2"></span>	end<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/setdevicencolorspace<span class="pl-c2"></span>{ <span class="pl-c2"></span>	dup /AliasedColorants known {false}{true}ifelse <span class="pl-c2"></span>	current_spot_alias and {<span class="pl-c2"></span>		7 dict begin<span class="pl-c2"></span>		/names_index 0 def<span class="pl-c2"></span>		dup /names_len exch /Names get length def<span class="pl-c2"></span>		/new_names names_len array def<span class="pl-c2"></span>		/new_LookupTables names_len array def<span class="pl-c2"></span>		/alias_cnt 0 def<span class="pl-c2"></span>		dup /Names get<span class="pl-c2"></span>		{<span class="pl-c2"></span>			dup map_alias {<span class="pl-c2"></span>				exch pop<span class="pl-c2"></span>				dup /ColorLookup known {<span class="pl-c2"></span>					dup begin<span class="pl-c2"></span>					new_LookupTables names_index ColorLookup put<span class="pl-c2"></span>					end<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					dup /Components known {<span class="pl-c2"></span>						dup begin<span class="pl-c2"></span>						new_LookupTables names_index Components put<span class="pl-c2"></span>						end<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						dup begin<span class="pl-c2"></span>						new_LookupTables names_index [null null null null] put<span class="pl-c2"></span>						end<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>				new_names names_index 3 -1 roll /Name get put<span class="pl-c2"></span>				/alias_cnt alias_cnt 1 add def <span class="pl-c2"></span>			}{<span class="pl-c2"></span>				/name xdf				<span class="pl-c2"></span>				new_names names_index name put<span class="pl-c2"></span>				dup /LookupTables known {<span class="pl-c2"></span>					dup begin<span class="pl-c2"></span>					new_LookupTables names_index LookupTables names_index get put<span class="pl-c2"></span>					end<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					dup begin<span class="pl-c2"></span>					new_LookupTables names_index [null null null null] put<span class="pl-c2"></span>					end<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>			/names_index names_index 1 add def <span class="pl-c2"></span>		} forall<span class="pl-c2"></span>		alias_cnt 0 gt {<span class="pl-c2"></span>			/AliasedColorants true def<span class="pl-c2"></span>			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def<span class="pl-c2"></span>			0 1 names_len 1 sub {<span class="pl-c2"></span>				/names_index xdf<span class="pl-c2"></span>				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {<span class="pl-c2"></span>					/AliasedColorants false def<span class="pl-c2"></span>					exit<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{<span class="pl-c2"></span>					new_LookupTables names_index get 0 get null eq {<span class="pl-c2"></span>						dup /Names get names_index get /name xdf<span class="pl-c2"></span>						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq<span class="pl-c2"></span>						or or or not {<span class="pl-c2"></span>							/AliasedColorants false def<span class="pl-c2"></span>							exit<span class="pl-c2"></span>						} if<span class="pl-c2"></span>					} if<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>			} for<span class="pl-c2"></span>			lut_entry_len 1 eq {<span class="pl-c2"></span>				/AliasedColorants false def<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			AliasedColorants {<span class="pl-c2"></span>				dup begin<span class="pl-c2"></span>				/Names new_names def<span class="pl-c2"></span>				/LookupTables new_LookupTables def<span class="pl-c2"></span>				/AliasedColorants true def<span class="pl-c2"></span>				/NComponents lut_entry_len def<span class="pl-c2"></span>				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def<span class="pl-c2"></span>				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def<span class="pl-c2"></span>				currentdict /TTTablesIdx known not {<span class="pl-c2"></span>					/TTTablesIdx -1 def<span class="pl-c2"></span>				} if<span class="pl-c2"></span>				end<span class="pl-c2"></span>			} if<span class="pl-c2"></span>		}if<span class="pl-c2"></span>		end<span class="pl-c2"></span>	} if<span class="pl-c2"></span>	dup /devicen_colorspace_dict exch AGMCORE_gput<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	currentdict /AliasedColorants known {<span class="pl-c2"></span>		AliasedColorants<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		false<span class="pl-c2"></span>	} ifelse<span class="pl-c2"></span>	dup not {<span class="pl-c2"></span>		CSA map_csa<span class="pl-c2"></span>	} if<span class="pl-c2"></span>	/TintTransform load type /nulltype eq or {<span class="pl-c2"></span>		/TintTransform [<span class="pl-c2"></span>			0 1 Names length 1 sub<span class="pl-c2"></span>				{<span class="pl-c2"></span>				/TTTablesIdx TTTablesIdx 1 add def<span class="pl-c2"></span>				dup LookupTables exch get dup 0 get null eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>					1 index<span class="pl-c2"></span>					Names exch get<span class="pl-c2"></span>					dup (Cyan) eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						pop exch<span class="pl-c2"></span>						LookupTables length exch sub<span class="pl-c2"></span>						/index cvx<span class="pl-c2"></span>						0 0 0<span class="pl-c2"></span>						}<span class="pl-c2"></span>						{<span class="pl-c2"></span>						dup (Magenta) eq<span class="pl-c2"></span>							{<span class="pl-c2"></span>							pop exch<span class="pl-c2"></span>							LookupTables length exch sub<span class="pl-c2"></span>							/index cvx<span class="pl-c2"></span>							0 /exch cvx 0 0<span class="pl-c2"></span>							}<span class="pl-c2"></span>							{<span class="pl-c2"></span>							(Yellow) eq<span class="pl-c2"></span>								{<span class="pl-c2"></span>								exch<span class="pl-c2"></span>								LookupTables length exch sub<span class="pl-c2"></span>								/index cvx<span class="pl-c2"></span>								0 0 3 -1 /roll cvx 0<span class="pl-c2"></span>								}<span class="pl-c2"></span>								{<span class="pl-c2"></span>								exch<span class="pl-c2"></span>								LookupTables length exch sub<span class="pl-c2"></span>								/index cvx<span class="pl-c2"></span>								0 0 0 4 -1 /roll cvx<span class="pl-c2"></span>								} ifelse<span class="pl-c2"></span>							} ifelse<span class="pl-c2"></span>						} ifelse<span class="pl-c2"></span>					5 -1 /roll cvx /astore cvx<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{<span class="pl-c2"></span>					dup length 1 sub<span class="pl-c2"></span>					LookupTables length 4 -1 roll sub 1 add<span class="pl-c2"></span>					/index cvx /mul cvx /round cvx /cvi cvx /get cvx<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>					Names length TTTablesIdx add 1 add 1 /roll cvx<span class="pl-c2"></span>				} for<span class="pl-c2"></span>			Names length [/pop cvx] cvx /repeat cvx<span class="pl-c2"></span>			NComponents Names length<span class="pl-c2"></span>  			TintMethod /Subtractive eq<span class="pl-c2"></span>  				{<span class="pl-c2"></span>  				subtractive_blend<span class="pl-c2"></span>  				}<span class="pl-c2"></span>  				{<span class="pl-c2"></span>  				additive_blend<span class="pl-c2"></span>  				} ifelse<span class="pl-c2"></span>		] cvx bdf<span class="pl-c2"></span>	} if<span class="pl-c2"></span>	AGMCORE_host_sep {<span class="pl-c2"></span>		Names convert_to_process {<span class="pl-c2"></span>			exec_tint_transform<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{	<span class="pl-c2"></span>			currentdict /AliasedColorants known {<span class="pl-c2"></span>				AliasedColorants not<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				false<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>			5 dict begin<span class="pl-c2"></span>			/AvoidAliasedColorants xdf<span class="pl-c2"></span>			/painted? false def<span class="pl-c2"></span>			/names_index 0 def<span class="pl-c2"></span>			/names_len Names length def<span class="pl-c2"></span>			AvoidAliasedColorants {<span class="pl-c2"></span>				/currentspotalias current_spot_alias def<span class="pl-c2"></span>				false set_spot_alias<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			Names {<span class="pl-c2"></span>				AGMCORE_is_cmyk_sep {<span class="pl-c2"></span>					dup (Cyan) eq AGMCORE_cyan_plate and exch<span class="pl-c2"></span>					dup (Magenta) eq AGMCORE_magenta_plate and exch<span class="pl-c2"></span>					dup (Yellow) eq AGMCORE_yellow_plate and exch<span class="pl-c2"></span>					(Black) eq AGMCORE_black_plate and or or or {<span class="pl-c2"></span>						/devicen_colorspace_dict AGMCORE_gget /TintProc [<span class="pl-c2"></span>							Names names_index /devn_makecustomcolor cvx<span class="pl-c2"></span>						] cvx ddf<span class="pl-c2"></span>						/painted? true def<span class="pl-c2"></span>					} if<span class="pl-c2"></span>					painted? {exit} if<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {<span class="pl-c2"></span>					/devicen_colorspace_dict AGMCORE_gget /TintProc [<span class="pl-c2"></span>						Names names_index /devn_makecustomcolor cvx<span class="pl-c2"></span>					] cvx ddf<span class="pl-c2"></span>					/painted? true def<span class="pl-c2"></span>					exit<span class="pl-c2"></span>					} if<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>				/names_index names_index 1 add def<span class="pl-c2"></span>			} forall<span class="pl-c2"></span>			AvoidAliasedColorants {<span class="pl-c2"></span>				currentspotalias set_spot_alias<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			painted? {<span class="pl-c2"></span>				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				/devicen_colorspace_dict AGMCORE_gget /TintProc [<span class="pl-c2"></span>					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx<span class="pl-c2"></span> 					0 0 0 0 /setcmykcolor cvx<span class="pl-c2"></span>				] cvx ddf<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>			end<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	}<span class="pl-c2"></span>	{<span class="pl-c2"></span>		AGMCORE_in_rip_sep {<span class="pl-c2"></span>			Names convert_to_process not<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			level3<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>		{<span class="pl-c2"></span>			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt<span class="pl-c2"></span>			/TintProc level3 not AGMCORE_in_rip_sep and {<span class="pl-c2"></span>				[<span class="pl-c2"></span>					Names /length cvx [/pop cvx] cvx /repeat cvx<span class="pl-c2"></span>				] cvx bdf<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				{setcolor} bdf<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			exec_tint_transform<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	} ifelse<span class="pl-c2"></span>	set_crd<span class="pl-c2"></span>	/AliasedColorants false def<span class="pl-c2"></span>	end<span class="pl-c2"></span>} def<span class="pl-c2"></span>/setindexedcolorspace<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup /indexed_colorspace_dict exch AGMCORE_gput<span class="pl-c2"></span>	begin<span class="pl-c2"></span>		currentdict /CSDBase known {<span class="pl-c2"></span>			CSDBase /CSD get_res begin<span class="pl-c2"></span>			currentdict /Names known {<span class="pl-c2"></span>				currentdict devncs<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				1 currentdict sepcs<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>			AGMCORE_host_sep{<span class="pl-c2"></span>				4 dict begin<span class="pl-c2"></span>				/compCnt /Names where {pop Names length}{1}ifelse def<span class="pl-c2"></span>				/NewLookup HiVal 1 add string def<span class="pl-c2"></span>				0 1 HiVal {<span class="pl-c2"></span>					/tableIndex xdf<span class="pl-c2"></span>					Lookup dup type /stringtype eq {<span class="pl-c2"></span>						compCnt tableIndex map_index<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						exec<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>					/Names where {<span class="pl-c2"></span>						pop setdevicencolor<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						setsepcolor<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>					currentgray<span class="pl-c2"></span>					tableIndex exch<span class="pl-c2"></span>					HiVal mul cvi <span class="pl-c2"></span>					NewLookup 3 1 roll put<span class="pl-c2"></span>				} for<span class="pl-c2"></span>				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt<span class="pl-c2"></span>				end<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				level3<span class="pl-c2"></span>				{<span class="pl-c2"></span>					currentdict /Names known {<span class="pl-c2"></span>						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>				}{<span class="pl-c2"></span>				[/Indexed MappedCSA HiVal<span class="pl-c2"></span>					[<span class="pl-c2"></span>					currentdict /Names known {<span class="pl-c2"></span>						Lookup dup type /stringtype eq<span class="pl-c2"></span>							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}<span class="pl-c2"></span>							{/exec cvx}ifelse<span class="pl-c2"></span>							/TintTransform load /exec cvx<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						Lookup dup type /stringtype eq<span class="pl-c2"></span>							{/exch cvx /get cvx 255 /div cvx}<span class="pl-c2"></span>							{/exec cvx}ifelse<span class="pl-c2"></span>							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>					]cvx<span class="pl-c2"></span>				]setcolorspace_opt<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			} ifelse<span class="pl-c2"></span>			end<span class="pl-c2"></span>			set_crd<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			CSA map_csa<span class="pl-c2"></span>			AGMCORE_host_sep level2 not and{<span class="pl-c2"></span>				0 0 0 0 setcmykcolor<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				[/Indexed MappedCSA <span class="pl-c2"></span>				level2 not has_color not and{<span class="pl-c2"></span>					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{<span class="pl-c2"></span>						pop [/DeviceGray]<span class="pl-c2"></span>					}if<span class="pl-c2"></span>					HiVal GrayLookup<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					HiVal <span class="pl-c2"></span>					currentdict/RangeArray known{<span class="pl-c2"></span>						{ <span class="pl-c2"></span>							/indexed_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>							Lookup exch <span class="pl-c2"></span>							dup HiVal gt{<span class="pl-c2"></span>								pop HiVal<span class="pl-c2"></span>							}if<span class="pl-c2"></span>							NComponents mul NComponents getinterval {} forall<span class="pl-c2"></span>							NComponents 1 sub -1 0{<span class="pl-c2"></span>								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range<span class="pl-c2"></span>								NComponents 1 roll<span class="pl-c2"></span>							}for<span class="pl-c2"></span>							end<span class="pl-c2"></span>						} bind<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						Lookup<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>				] setcolorspace_opt<span class="pl-c2"></span>				set_crd<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/setindexedcolor<span class="pl-c2"></span>{<span class="pl-c2"></span>	AGMCORE_host_sep {<span class="pl-c2"></span>		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { <span class="pl-c2"></span>			begin<span class="pl-c2"></span>			CSDBase /CSD get_res begin<span class="pl-c2"></span>			currentdict /Names known{<span class="pl-c2"></span>				map_indexed_devn<span class="pl-c2"></span>				devn<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{<span class="pl-c2"></span>				Lookup 1 3 -1 roll map_index<span class="pl-c2"></span>				sep<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>			end<span class="pl-c2"></span>			end<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			/Lookup get 4 3 -1 roll map_index setcmykcolor<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {<span class="pl-c2"></span>			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin<span class="pl-c2"></span>			map_indexed_devn<span class="pl-c2"></span>			devn<span class="pl-c2"></span>			end<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			setcolor<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>} def<span class="pl-c2"></span>/ignoreimagedata<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentoverprint not{<span class="pl-c2"></span>		gsave<span class="pl-c2"></span>		dup clonedict begin<span class="pl-c2"></span>		1 setgray<span class="pl-c2"></span>		/Decode [0 1] def<span class="pl-c2"></span>		/DataSource &lt;FF&gt; def<span class="pl-c2"></span>		/MultipleDataSources false def<span class="pl-c2"></span>		/BitsPerComponent 8 def<span class="pl-c2"></span>		currentdict end<span class="pl-c2"></span>		systemdict /image get exec<span class="pl-c2"></span>		grestore<span class="pl-c2"></span>		}if<span class="pl-c2"></span>	consumeimagedata<span class="pl-c2"></span>}def<span class="pl-c2"></span>/add_res<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup /CSD eq {<span class="pl-c2"></span>		pop <span class="pl-c2"></span>		//Adobe_AGM_Core begin<span class="pl-c2"></span>		/AGMCORE_CSD_cache load 3 1 roll put<span class="pl-c2"></span>		end<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		defineresource pop<span class="pl-c2"></span>	} ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/del_res<span class="pl-c2"></span>{<span class="pl-c2"></span>	{<span class="pl-c2"></span>		aload pop exch<span class="pl-c2"></span>		dup /CSD eq {<span class="pl-c2"></span>			pop <span class="pl-c2"></span>			{<span class="pl-c2"></span>				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef<span class="pl-c2"></span>			}forall<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			exch<span class="pl-c2"></span>			{<span class="pl-c2"></span>				1 index undefineresource<span class="pl-c2"></span>			}forall<span class="pl-c2"></span>			pop<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	} forall<span class="pl-c2"></span>}def<span class="pl-c2"></span>/get_res<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup /CSD eq {<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		dup type dup /nametype eq exch /stringtype eq or {<span class="pl-c2"></span>			AGMCORE_CSD_cache exch get<span class="pl-c2"></span>		} if<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		findresource<span class="pl-c2"></span>	} ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/get_csa_by_name<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup type dup /nametype eq exch /stringtype eq or{<span class="pl-c2"></span>		/CSA get_res<span class="pl-c2"></span>	} if<span class="pl-c2"></span>}def<span class="pl-c2"></span>/pattern_buf_init<span class="pl-c2"></span>{<span class="pl-c2"></span>	/count get 0 0 put<span class="pl-c2"></span>} def<span class="pl-c2"></span>/pattern_buf_next<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup /count get dup 0 get<span class="pl-c2"></span>	dup 3 1 roll<span class="pl-c2"></span>	1 add 0 xpt<span class="pl-c2"></span>	get				<span class="pl-c2"></span>} def<span class="pl-c2"></span>/cachepattern_compress<span class="pl-c2"></span>{<span class="pl-c2"></span>	5 dict begin<span class="pl-c2"></span>	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def<span class="pl-c2"></span>	/patarray 20 dict def<span class="pl-c2"></span>	/string_size 16000 def<span class="pl-c2"></span>	/readbuffer string_size string def<span class="pl-c2"></span>	currentglobal true setglobal <span class="pl-c2"></span>	patarray 1 array dup 0 1 put /count xpt<span class="pl-c2"></span>	setglobal<span class="pl-c2"></span>	/LZWFilter <span class="pl-c2"></span>	{<span class="pl-c2"></span>		exch<span class="pl-c2"></span>		dup length 0 eq {<span class="pl-c2"></span>			pop<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			patarray dup length 1 sub 3 -1 roll put<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>		{string_size}{0}ifelse string<span class="pl-c2"></span>	} /LZWEncode filter def<span class="pl-c2"></span>	{ 		<span class="pl-c2"></span>		ReadFilter readbuffer readstring<span class="pl-c2"></span>		exch LZWFilter exch writestring<span class="pl-c2"></span>		not {exit} if<span class="pl-c2"></span>	} loop<span class="pl-c2"></span>	LZWFilter closefile<span class="pl-c2"></span>	patarray				<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/cachepattern<span class="pl-c2"></span>{<span class="pl-c2"></span>	2 dict begin<span class="pl-c2"></span>	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def<span class="pl-c2"></span>	/patarray 20 dict def<span class="pl-c2"></span>	currentglobal true setglobal <span class="pl-c2"></span>	patarray 1 array dup 0 1 put /count xpt<span class="pl-c2"></span>	setglobal<span class="pl-c2"></span>	{<span class="pl-c2"></span>		ReadFilter 16000 string readstring exch<span class="pl-c2"></span>		patarray dup length 1 sub 3 -1 roll put<span class="pl-c2"></span>		not {exit} if<span class="pl-c2"></span>	} loop<span class="pl-c2"></span>	patarray dup dup length 1 sub () put					<span class="pl-c2"></span>	end	<span class="pl-c2"></span>}def<span class="pl-c2"></span>/wrap_paintproc<span class="pl-c2"></span>{ <span class="pl-c2"></span>  statusdict /currentfilenameextend known{<span class="pl-c2"></span>	clonedict<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	/OldPaintProc /PaintProc load def<span class="pl-c2"></span>	/PaintProc<span class="pl-c2"></span>	{<span class="pl-c2"></span>		mark exch<span class="pl-c2"></span>		dup /OldPaintProc get stopped<span class="pl-c2"></span>		{closefile restore end} if<span class="pl-c2"></span>		cleartomark<span class="pl-c2"></span>	}  def<span class="pl-c2"></span>	end<span class="pl-c2"></span>  } {pop} ifelse<span class="pl-c2"></span>} def<span class="pl-c2"></span>/make_pattern<span class="pl-c2"></span>{<span class="pl-c2"></span>	exch clonedict exch<span class="pl-c2"></span>	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform<span class="pl-c2"></span>	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub<span class="pl-c2"></span>	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub<span class="pl-c2"></span>	matrix translate exch matrix concatmatrix<span class="pl-c2"></span>			  1 index begin<span class="pl-c2"></span>		BBox 0 get XStep div cvi XStep mul /xshift exch neg def<span class="pl-c2"></span>		BBox 1 get YStep div cvi YStep mul /yshift exch neg def<span class="pl-c2"></span>		BBox 0 get xshift add<span class="pl-c2"></span>		BBox 1 get yshift add<span class="pl-c2"></span>		BBox 2 get xshift add<span class="pl-c2"></span>		BBox 3 get yshift add<span class="pl-c2"></span>		4 array astore<span class="pl-c2"></span>		/BBox exch def<span class="pl-c2"></span>		[ xshift yshift /translate load null /exec load ] dup<span class="pl-c2"></span>		3 /PaintProc load put cvx /PaintProc exch def<span class="pl-c2"></span>		end<span class="pl-c2"></span>	1 index dup /ID get exch /Pattern add_res<span class="pl-c2"></span>	gsave 0 setgray<span class="pl-c2"></span>	makepattern<span class="pl-c2"></span>	grestore<span class="pl-c2"></span>}def<span class="pl-c2"></span>/set_pattern<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup /PatternType get 1 eq{<span class="pl-c2"></span>		dup /PaintType get 1 eq{<span class="pl-c2"></span>			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray<span class="pl-c2"></span>		}if<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	setpattern<span class="pl-c2"></span>}def<span class="pl-c2"></span>/setcolorspace_opt<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup currentcolorspace eq{<span class="pl-c2"></span>		pop<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		setcolorspace<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/updatecolorrendering<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentcolorrendering/RenderingIntent known{<span class="pl-c2"></span>		currentcolorrendering/RenderingIntent get<span class="pl-c2"></span>	}{null}ifelse<span class="pl-c2"></span>	Intent ne {<span class="pl-c2"></span>		Intent /ColorRendering {findresource} stopped<span class="pl-c2"></span>		{<span class="pl-c2"></span>			pop pop systemdict /findcolorrendering known<span class="pl-c2"></span>			{<span class="pl-c2"></span>				Intent findcolorrendering pop<span class="pl-c2"></span>				/ColorRendering findresource <span class="pl-c2"></span>				true<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{false} ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{true} ifelse<span class="pl-c2"></span>		{<span class="pl-c2"></span>			dup begin<span class="pl-c2"></span>			currentdict /TransformPQR known {<span class="pl-c2"></span>				currentdict /TransformPQR get aload pop<span class="pl-c2"></span>				3 {{} eq 3 1 roll} repeat or or<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{true} ifelse<span class="pl-c2"></span>			currentdict /MatrixPQR known {<span class="pl-c2"></span>				currentdict /MatrixPQR get aload pop<span class="pl-c2"></span>				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll<span class="pl-c2"></span>				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll<span class="pl-c2"></span>				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq<span class="pl-c2"></span>				and and and and and and and and<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{true} ifelse<span class="pl-c2"></span>			end<span class="pl-c2"></span>			or<span class="pl-c2"></span>			{<span class="pl-c2"></span>				clonedict begin<span class="pl-c2"></span>				/TransformPQR [<span class="pl-c2"></span>					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div<span class="pl-c2"></span>					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind<span class="pl-c2"></span>					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div<span class="pl-c2"></span>					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind<span class="pl-c2"></span>					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div<span class="pl-c2"></span>					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind<span class="pl-c2"></span>				] def<span class="pl-c2"></span>				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def<span class="pl-c2"></span>				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def<span class="pl-c2"></span>				currentdict end<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			setcolorrendering_opt<span class="pl-c2"></span>		} if		<span class="pl-c2"></span>	}if<span class="pl-c2"></span>} def<span class="pl-c2"></span>/set_crd<span class="pl-c2"></span>{<span class="pl-c2"></span>	AGMCORE_host_sep not level2 and{<span class="pl-c2"></span>		currentdict /ColorRendering known{<span class="pl-c2"></span>			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			currentdict/Intent known{<span class="pl-c2"></span>				updatecolorrendering<span class="pl-c2"></span>			}if<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>		currentcolorspace dup type /arraytype eq<span class="pl-c2"></span>			{0 get}if<span class="pl-c2"></span>		/DeviceRGB eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>			currentdict/UCR known<span class="pl-c2"></span>				{/UCR}{/AGMCORE_currentucr}ifelse<span class="pl-c2"></span>			load setundercolorremoval<span class="pl-c2"></span>			currentdict/BG known <span class="pl-c2"></span>				{/BG}{/AGMCORE_currentbg}ifelse<span class="pl-c2"></span>			load setblackgeneration<span class="pl-c2"></span>			}if<span class="pl-c2"></span>	}if<span class="pl-c2"></span>}def<span class="pl-c2"></span>/setcolorrendering_opt<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup currentcolorrendering eq{<span class="pl-c2"></span>		pop<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		clonedict<span class="pl-c2"></span>		begin<span class="pl-c2"></span>			/Intent Intent def<span class="pl-c2"></span>			currentdict<span class="pl-c2"></span>		end<span class="pl-c2"></span>		setcolorrendering<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/cpaint_gcomp<span class="pl-c2"></span>{<span class="pl-c2"></span>	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf<span class="pl-c2"></span>	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not<span class="pl-c2"></span>	{<span class="pl-c2"></span>		(%end_cpaint_gcomp) flushinput<span class="pl-c2"></span>	}if<span class="pl-c2"></span>}def<span class="pl-c2"></span>/cpaint_gsep<span class="pl-c2"></span>{<span class="pl-c2"></span>	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get<span class="pl-c2"></span>	{	<span class="pl-c2"></span>		(%end_cpaint_gsep) flushinput<span class="pl-c2"></span>	}if<span class="pl-c2"></span>}def<span class="pl-c2"></span>/cpaint_gend<span class="pl-c2"></span>{<span class="pl-c2"></span>	newpath<span class="pl-c2"></span>}def<span class="pl-c2"></span>/set_spot_alias_ary<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup inherit_aliases<span class="pl-c2"></span>	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf<span class="pl-c2"></span>}def<span class="pl-c2"></span>/set_spot_normalization_ary<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup inherit_aliases<span class="pl-c2"></span>	dup length<span class="pl-c2"></span>	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if<span class="pl-c2"></span>	array<span class="pl-c2"></span>	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf<span class="pl-c2"></span>	/AGMCORE_SpotAliasAry where{<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval<span class="pl-c2"></span>		AGMCORE_SpotAliasAry length<span class="pl-c2"></span>	}{0} ifelse<span class="pl-c2"></span>	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval<span class="pl-c2"></span>	true set_spot_alias<span class="pl-c2"></span>}def<span class="pl-c2"></span>/inherit_aliases<span class="pl-c2"></span>{<span class="pl-c2"></span>	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall<span class="pl-c2"></span>}def<span class="pl-c2"></span>/set_spot_alias<span class="pl-c2"></span>{<span class="pl-c2"></span>	/AGMCORE_SpotAliasAry2 where{<span class="pl-c2"></span>		/AGMCORE_current_spot_alias 3 -1 roll put<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		pop<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/current_spot_alias<span class="pl-c2"></span>{<span class="pl-c2"></span>	/AGMCORE_SpotAliasAry2 where{<span class="pl-c2"></span>		/AGMCORE_current_spot_alias get<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		false<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/map_alias<span class="pl-c2"></span>{<span class="pl-c2"></span>	/AGMCORE_SpotAliasAry2 where{<span class="pl-c2"></span>		begin<span class="pl-c2"></span>			/AGMCORE_name xdf<span class="pl-c2"></span>			false	<span class="pl-c2"></span>			AGMCORE_SpotAliasAry2{<span class="pl-c2"></span>				dup/Name get AGMCORE_name eq{<span class="pl-c2"></span>					/CSD get /CSD get_res<span class="pl-c2"></span>					exch pop true<span class="pl-c2"></span>					exit<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					pop<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}forall<span class="pl-c2"></span>		end<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		pop false<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}bdf<span class="pl-c2"></span>/spot_alias<span class="pl-c2"></span>{<span class="pl-c2"></span>	true set_spot_alias<span class="pl-c2"></span>	/AGMCORE_&amp;setcustomcolor AGMCORE_key_known not {<span class="pl-c2"></span>		//Adobe_AGM_Core/AGMCORE_&amp;setcustomcolor /setcustomcolor load put<span class="pl-c2"></span>	} if<span class="pl-c2"></span>	/customcolor_tint 1 AGMCORE_gput<span class="pl-c2"></span>	//Adobe_AGM_Core begin<span class="pl-c2"></span>	/setcustomcolor<span class="pl-c2"></span>	{<span class="pl-c2"></span>		currentdict/TintProc known currentdict/CSA known and 3 1 roll<span class="pl-c2"></span>		//Adobe_AGM_Core begin<span class="pl-c2"></span>		dup /customcolor_tint exch AGMCORE_gput<span class="pl-c2"></span>		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not<span class="pl-c2"></span>		current_spot_alias and{1 index 4 get map_alias}{false}ifelse<span class="pl-c2"></span>		{<span class="pl-c2"></span>			false set_spot_alias<span class="pl-c2"></span>			4 -1 roll{<span class="pl-c2"></span>				exch pop /sep_tint AGMCORE_gget exch<span class="pl-c2"></span>			}if<span class="pl-c2"></span>			mark 3 1 roll<span class="pl-c2"></span>			setsepcolorspace<span class="pl-c2"></span>			counttomark 0 ne{<span class="pl-c2"></span>				setsepcolor<span class="pl-c2"></span>			}if<span class="pl-c2"></span>			pop<span class="pl-c2"></span>			pop<span class="pl-c2"></span>			true set_spot_alias<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			AGMCORE_&amp;setcustomcolor<span class="pl-c2"></span>			pop<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>		end<span class="pl-c2"></span>	}bdf<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/begin_feature<span class="pl-c2"></span>{<span class="pl-c2"></span>	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put<span class="pl-c2"></span>	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put<span class="pl-c2"></span>	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if<span class="pl-c2"></span>}def<span class="pl-c2"></span>/end_feature<span class="pl-c2"></span>{<span class="pl-c2"></span>	2 dict begin<span class="pl-c2"></span>	/spd /setpagedevice load def<span class="pl-c2"></span>	/setpagedevice { get_gstate spd set_gstate } def<span class="pl-c2"></span>	stopped{$error/newerror false put}if<span class="pl-c2"></span>	end<span class="pl-c2"></span>	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse<span class="pl-c2"></span>	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse<span class="pl-c2"></span>	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if<span class="pl-c2"></span>}def<span class="pl-c2"></span>/set_negative<span class="pl-c2"></span>{<span class="pl-c2"></span>	//Adobe_AGM_Core begin<span class="pl-c2"></span>	/AGMCORE_inverting exch def<span class="pl-c2"></span>	level2{<span class="pl-c2"></span>		currentpagedevice/NegativePrint known{<span class="pl-c2"></span>			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{<span class="pl-c2"></span>				true begin_feature true{<span class="pl-c2"></span>						&lt;&lt; /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get &gt;&gt; setpagedevice<span class="pl-c2"></span>				}end_feature<span class="pl-c2"></span>			}if<span class="pl-c2"></span>			/AGMCORE_inverting false def<span class="pl-c2"></span>		}if<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	AGMCORE_inverting{<span class="pl-c2"></span>		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer<span class="pl-c2"></span>		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse <span class="pl-c2"></span>		/AGMIRS_&amp;fill where {pop AGMIRS_&amp;fill}{fill} ifelse grestore<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/lw_save_restore_override {<span class="pl-c2"></span>	/md where {<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		md begin<span class="pl-c2"></span>		initializepage<span class="pl-c2"></span>		/initializepage{}def<span class="pl-c2"></span>		/pmSVsetup{} def<span class="pl-c2"></span>		/endp{}def<span class="pl-c2"></span>		/pse{}def<span class="pl-c2"></span>		/psb{}def<span class="pl-c2"></span>		/orig_showpage where<span class="pl-c2"></span>			{pop}<span class="pl-c2"></span>			{/orig_showpage /showpage load def}<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		/showpage {orig_showpage gR} def<span class="pl-c2"></span>		end<span class="pl-c2"></span>	}if<span class="pl-c2"></span>}def<span class="pl-c2"></span>/pscript_showpage_override {<span class="pl-c2"></span>	/NTPSOct95 where<span class="pl-c2"></span>	{<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		showpage<span class="pl-c2"></span>		save<span class="pl-c2"></span>		/showpage /restore load def<span class="pl-c2"></span>		/restore {exch pop}def<span class="pl-c2"></span>		end<span class="pl-c2"></span>	}if<span class="pl-c2"></span>}def<span class="pl-c2"></span>/driver_media_override<span class="pl-c2"></span>{<span class="pl-c2"></span>	/md where {<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		md /initializepage known {<span class="pl-c2"></span>			md /initializepage {} put<span class="pl-c2"></span>		} if<span class="pl-c2"></span>		md /rC known {<span class="pl-c2"></span>			md /rC {4{pop}repeat} put<span class="pl-c2"></span>		} if<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	/mysetup where {<span class="pl-c2"></span>		/mysetup [1 0 0 1 0 0] put<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put<span class="pl-c2"></span>	level2<span class="pl-c2"></span>		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if<span class="pl-c2"></span>}def<span class="pl-c2"></span>/driver_check_media_override<span class="pl-c2"></span>{<span class="pl-c2"></span>	/PrepsDict where<span class="pl-c2"></span>		{pop}<span class="pl-c2"></span>		{<span class="pl-c2"></span>		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne<span class="pl-c2"></span>		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and<span class="pl-c2"></span>			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and<span class="pl-c2"></span>			}if<span class="pl-c2"></span>			{<span class="pl-c2"></span>			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix<span class="pl-c2"></span>			}if<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>AGMCORE_err_strings begin<span class="pl-c2"></span>	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def<span class="pl-c2"></span>	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def<span class="pl-c2"></span>	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def<span class="pl-c2"></span>end<span class="pl-c2"></span>/set_def_ht<span class="pl-c2"></span>{<span class="pl-c2"></span>	AGMCORE_def_ht sethalftone<span class="pl-c2"></span>} def<span class="pl-c2"></span>end<span class="pl-c2"></span>systemdict /setpacking known<span class="pl-c2"></span>{<span class="pl-c2"></span>	setpacking<span class="pl-c2"></span>} if<span class="pl-c2"></span>%%EndResource<span class="pl-c2"></span>%%BeginResource: procset Adobe_CoolType_Core 2.25 0<span class="pl-c2"></span>%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.<span class="pl-c2"></span>%%Version: 2.25 0<span class="pl-c2"></span>10 dict begin<span class="pl-c2"></span>/Adobe_CoolType_Passthru currentdict def<span class="pl-c2"></span>/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def<span class="pl-c2"></span>Adobe_CoolType_Core_Defined<span class="pl-c2"></span>	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }<span class="pl-c2"></span>if<span class="pl-c2"></span>userdict /Adobe_CoolType_Core 60 dict dup begin put<span class="pl-c2"></span>/Adobe_CoolType_Version 2.25 def<span class="pl-c2"></span>/Level2?<span class="pl-c2"></span>	systemdict /languagelevel known dup<span class="pl-c2"></span>		{ pop systemdict /languagelevel get 2 ge }<span class="pl-c2"></span>	if def<span class="pl-c2"></span>Level2? not<span class="pl-c2"></span>	{<span class="pl-c2"></span>	/currentglobal false def<span class="pl-c2"></span>	/setglobal /pop load def<span class="pl-c2"></span>	/gcheck { pop false } bind def<span class="pl-c2"></span>	/currentpacking false def<span class="pl-c2"></span>	/setpacking /pop load def<span class="pl-c2"></span>	/SharedFontDirectory 0 dict def<span class="pl-c2"></span>	}<span class="pl-c2"></span>if<span class="pl-c2"></span>currentpacking<span class="pl-c2"></span>true setpacking<span class="pl-c2"></span>currentglobal false setglobal<span class="pl-c2"></span>userdict /Adobe_CoolType_Data 2 copy known not<span class="pl-c2"></span>	 { 2 copy 10 dict put }<span class="pl-c2"></span>if<span class="pl-c2"></span>get<span class="pl-c2"></span>	 begin<span class="pl-c2"></span>	 /@opStackCountByLevel 32 dict def<span class="pl-c2"></span>	 /@opStackLevel 0 def<span class="pl-c2"></span>	 /@dictStackCountByLevel 32 dict def<span class="pl-c2"></span>	 /@dictStackLevel 0 def<span class="pl-c2"></span>	 end<span class="pl-c2"></span>setglobal<span class="pl-c2"></span>/@_SaveStackLevels<span class="pl-c2"></span>	{<span class="pl-c2"></span>	Adobe_CoolType_Data<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/@vmState currentglobal def false setglobal<span class="pl-c2"></span>		@opStackCountByLevel<span class="pl-c2"></span>		@opStackLevel<span class="pl-c2"></span>		2 copy known not<span class="pl-c2"></span>			{<span class="pl-c2"></span>			2 copy<span class="pl-c2"></span>			3 dict dup /args<span class="pl-c2"></span>			7 index<span class="pl-c2"></span>			5 add array put<span class="pl-c2"></span>			put get<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{<span class="pl-c2"></span>			get dup /args get dup length 3 index lt<span class="pl-c2"></span>				{<span class="pl-c2"></span>				dup length 5 add array exch<span class="pl-c2"></span>				1 index exch 0 exch putinterval<span class="pl-c2"></span>				1 index exch /args exch put<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ pop }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			}<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			count 1 sub<span class="pl-c2"></span>			1 index lt<span class="pl-c2"></span>				{ pop count }<span class="pl-c2"></span>			if<span class="pl-c2"></span>			dup /argCount exch def<span class="pl-c2"></span>			dup 0 gt<span class="pl-c2"></span>				{<span class="pl-c2"></span>				args exch 0 exch getinterval <span class="pl-c2"></span>			astore pop<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ pop }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			count<span class="pl-c2"></span>			/restCount exch def<span class="pl-c2"></span>			end<span class="pl-c2"></span>		/@opStackLevel @opStackLevel 1 add def<span class="pl-c2"></span>		countdictstack 1 sub<span class="pl-c2"></span>		@dictStackCountByLevel exch @dictStackLevel exch put<span class="pl-c2"></span>		/@dictStackLevel @dictStackLevel 1 add def<span class="pl-c2"></span>		@vmState setglobal<span class="pl-c2"></span>		end<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/@_RestoreStackLevels<span class="pl-c2"></span>	{<span class="pl-c2"></span>	Adobe_CoolType_Data<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/@opStackLevel @opStackLevel 1 sub def<span class="pl-c2"></span>		@opStackCountByLevel @opStackLevel get<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			count restCount sub dup 0 gt<span class="pl-c2"></span>				{ { pop } repeat }<span class="pl-c2"></span>				{ pop }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			args 0 argCount getinterval {} forall<span class="pl-c2"></span>			end<span class="pl-c2"></span>		/@dictStackLevel @dictStackLevel 1 sub def<span class="pl-c2"></span>		@dictStackCountByLevel @dictStackLevel get<span class="pl-c2"></span>		end<span class="pl-c2"></span>	countdictstack exch sub dup 0 gt<span class="pl-c2"></span>		{ { end } repeat }<span class="pl-c2"></span>		{ pop }<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/@_PopStackLevels<span class="pl-c2"></span>	{<span class="pl-c2"></span>	Adobe_CoolType_Data<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/@opStackLevel @opStackLevel 1 sub def<span class="pl-c2"></span>		/@dictStackLevel @dictStackLevel 1 sub def<span class="pl-c2"></span>		end<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/@Raise<span class="pl-c2"></span>	{<span class="pl-c2"></span>	exch cvx exch errordict exch get exec<span class="pl-c2"></span>	stop<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/@ReRaise<span class="pl-c2"></span>	{<span class="pl-c2"></span>	cvx $error /errorname get errordict exch get exec<span class="pl-c2"></span>	stop<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/@Stopped<span class="pl-c2"></span>	{<span class="pl-c2"></span>	0 @#Stopped<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/@#Stopped<span class="pl-c2"></span>	{<span class="pl-c2"></span>	@_SaveStackLevels<span class="pl-c2"></span>	stopped<span class="pl-c2"></span>		{ @_RestoreStackLevels true }<span class="pl-c2"></span>		{ @_PopStackLevels false }<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/@Arg<span class="pl-c2"></span>	{<span class="pl-c2"></span>	Adobe_CoolType_Data<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		@opStackCountByLevel @opStackLevel 1 sub get<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		args exch<span class="pl-c2"></span>		argCount 1 sub exch sub get<span class="pl-c2"></span>		end<span class="pl-c2"></span>		end<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>currentglobal true setglobal<span class="pl-c2"></span>/CTHasResourceForAllBug<span class="pl-c2"></span>	Level2?<span class="pl-c2"></span>		{<span class="pl-c2"></span>		1 dict dup<span class="pl-c2"></span>				/@shouldNotDisappearDictValue true def<span class="pl-c2"></span>				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put<span class="pl-c2"></span>				begin<span class="pl-c2"></span>				count @_SaveStackLevels<span class="pl-c2"></span>					 { (*) { pop stop } 128 string /Category resourceforall }<span class="pl-c2"></span>				stopped pop<span class="pl-c2"></span>				@_RestoreStackLevels<span class="pl-c2"></span>				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup<span class="pl-c2"></span>					 {<span class="pl-c2"></span>						  /@shouldNotDisappearDictValue known<span class="pl-c2"></span>								{<span class="pl-c2"></span>										  {<span class="pl-c2"></span>												end<span class="pl-c2"></span>												currentdict 1 index eq<span class="pl-c2"></span>													 { pop exit }<span class="pl-c2"></span>												if<span class="pl-c2"></span>										  }<span class="pl-c2"></span>									 loop<span class="pl-c2"></span>								}<span class="pl-c2"></span>						  if<span class="pl-c2"></span>					 }<span class="pl-c2"></span>				if<span class="pl-c2"></span>				end<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{ false }<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	def<span class="pl-c2"></span>true setglobal<span class="pl-c2"></span>/CTHasResourceStatusBug<span class="pl-c2"></span>	Level2?<span class="pl-c2"></span>		{<span class="pl-c2"></span>		mark<span class="pl-c2"></span>			{ /steveamerige /Category resourcestatus }<span class="pl-c2"></span>		stopped<span class="pl-c2"></span>			{ cleartomark true }<span class="pl-c2"></span>			{ cleartomark currentglobal not }<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{ false }<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	def<span class="pl-c2"></span>setglobal<span class="pl-c2"></span>/CTResourceStatus<span class="pl-c2"></span>		{<span class="pl-c2"></span>		mark 3 1 roll<span class="pl-c2"></span>		/Category findresource<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec<span class="pl-c2"></span>				{ cleartomark false }<span class="pl-c2"></span>				{ { 3 2 roll pop true } { cleartomark false } ifelse }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			end<span class="pl-c2"></span>		} bind def<span class="pl-c2"></span>/CTWorkAroundBugs<span class="pl-c2"></span>	{<span class="pl-c2"></span>	Level2?<span class="pl-c2"></span>		{<span class="pl-c2"></span>		/cid_PreLoad /ProcSet resourcestatus<span class="pl-c2"></span>			{<span class="pl-c2"></span>			pop pop<span class="pl-c2"></span>			currentglobal<span class="pl-c2"></span>			mark<span class="pl-c2"></span>				{<span class="pl-c2"></span>				(*)<span class="pl-c2"></span>					{<span class="pl-c2"></span>					dup /CMap CTHasResourceStatusBug<span class="pl-c2"></span>						{ CTResourceStatus }<span class="pl-c2"></span>						{ resourcestatus }<span class="pl-c2"></span>					ifelse<span class="pl-c2"></span>						{<span class="pl-c2"></span>						pop dup 0 eq exch 1 eq or<span class="pl-c2"></span>							{<span class="pl-c2"></span>							dup /CMap findresource gcheck setglobal<span class="pl-c2"></span>							/CMap undefineresource<span class="pl-c2"></span>							}<span class="pl-c2"></span>							{<span class="pl-c2"></span>							pop CTHasResourceForAllBug<span class="pl-c2"></span>								{ exit }<span class="pl-c2"></span>								{ stop }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							}<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						}<span class="pl-c2"></span>						{ pop }<span class="pl-c2"></span>					ifelse<span class="pl-c2"></span>					}<span class="pl-c2"></span>				128 string /CMap resourceforall<span class="pl-c2"></span>				}<span class="pl-c2"></span>			stopped<span class="pl-c2"></span>				{ cleartomark }<span class="pl-c2"></span>			stopped pop<span class="pl-c2"></span>			setglobal<span class="pl-c2"></span>			}<span class="pl-c2"></span>		if<span class="pl-c2"></span>		}<span class="pl-c2"></span>	if<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/doc_setup<span class="pl-c2"></span>	{<span class="pl-c2"></span>	Adobe_CoolType_Core<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		CTWorkAroundBugs<span class="pl-c2"></span>		/mov /moveto load def<span class="pl-c2"></span>		/nfnt /newencodedfont load def<span class="pl-c2"></span>		/mfnt /makefont load def<span class="pl-c2"></span>		/sfnt /setfont load def<span class="pl-c2"></span>		/ufnt /undefinefont load def<span class="pl-c2"></span>		/chp /charpath load def<span class="pl-c2"></span>		/awsh /awidthshow load def<span class="pl-c2"></span>		/wsh /widthshow load def<span class="pl-c2"></span>		/ash /ashow load def<span class="pl-c2"></span>		/sh /show load def<span class="pl-c2"></span>		end<span class="pl-c2"></span>		currentglobal false setglobal<span class="pl-c2"></span>	  userdict /Adobe_CoolType_Data 2 copy known not<span class="pl-c2"></span>		  { 2 copy 10 dict put }<span class="pl-c2"></span>		if<span class="pl-c2"></span>		get<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/AddWidths? false def<span class="pl-c2"></span>		/CC 0 def<span class="pl-c2"></span>		/charcode 2 string def<span class="pl-c2"></span>		/@opStackCountByLevel 32 dict def<span class="pl-c2"></span>		/@opStackLevel 0 def<span class="pl-c2"></span>		/@dictStackCountByLevel 32 dict def<span class="pl-c2"></span>		/@dictStackLevel 0 def<span class="pl-c2"></span>		/InVMFontsByCMap 10 dict def<span class="pl-c2"></span>		/InVMDeepCopiedFonts 10 dict def<span class="pl-c2"></span>		end<span class="pl-c2"></span>		setglobal<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/doc_trailer<span class="pl-c2"></span>	{<span class="pl-c2"></span>	currentdict Adobe_CoolType_Core eq<span class="pl-c2"></span>		{ end }<span class="pl-c2"></span>	if<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/page_setup<span class="pl-c2"></span>	{<span class="pl-c2"></span>	Adobe_CoolType_Core begin<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/page_trailer<span class="pl-c2"></span>	{<span class="pl-c2"></span>	end<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/unload<span class="pl-c2"></span>	{<span class="pl-c2"></span>	systemdict /languagelevel known<span class="pl-c2"></span>		{<span class="pl-c2"></span>		systemdict/languagelevel get 2 ge<span class="pl-c2"></span>			{<span class="pl-c2"></span>			userdict/Adobe_CoolType_Core 2 copy known<span class="pl-c2"></span>				{ undef }<span class="pl-c2"></span>				{ pop pop }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			}<span class="pl-c2"></span>		if<span class="pl-c2"></span>		}<span class="pl-c2"></span>	if<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/ndf<span class="pl-c2"></span>	{<span class="pl-c2"></span>	1 index where<span class="pl-c2"></span>		{ pop pop pop }<span class="pl-c2"></span>		{ dup xcheck { bind } if def }<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	} def<span class="pl-c2"></span>/findfont systemdict<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	userdict<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/globaldict where { /globaldict get begin } if<span class="pl-c2"></span>			dup where pop exch get<span class="pl-c2"></span>		/globaldict where { pop end } if<span class="pl-c2"></span>		end<span class="pl-c2"></span>	end<span class="pl-c2"></span>Adobe_CoolType_Core_Defined<span class="pl-c2"></span>	{ /systemfindfont exch def }<span class="pl-c2"></span>	{<span class="pl-c2"></span>	/findfont 1 index def<span class="pl-c2"></span>	/systemfindfont exch def<span class="pl-c2"></span>	}<span class="pl-c2"></span>ifelse<span class="pl-c2"></span>/undefinefont<span class="pl-c2"></span>	{ pop } ndf<span class="pl-c2"></span>/copyfont<span class="pl-c2"></span>	{<span class="pl-c2"></span>	currentglobal 3 1 roll<span class="pl-c2"></span>	1 index gcheck setglobal<span class="pl-c2"></span>	dup null eq { 0 } { dup length } ifelse<span class="pl-c2"></span>	2 index length add 1 add dict<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		exch<span class="pl-c2"></span>			{<span class="pl-c2"></span>			1 index /FID eq<span class="pl-c2"></span>				{ pop pop }<span class="pl-c2"></span>				{ def }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			}<span class="pl-c2"></span>		forall<span class="pl-c2"></span>		dup null eq<span class="pl-c2"></span>			{ pop }<span class="pl-c2"></span>			{ { def } forall }<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		currentdict<span class="pl-c2"></span>		end<span class="pl-c2"></span>	exch setglobal<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/copyarray<span class="pl-c2"></span>	{<span class="pl-c2"></span>	currentglobal exch<span class="pl-c2"></span>	dup gcheck setglobal<span class="pl-c2"></span>	dup length array copy<span class="pl-c2"></span>	exch setglobal<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/newencodedfont<span class="pl-c2"></span>	{<span class="pl-c2"></span>	currentglobal<span class="pl-c2"></span>		{<span class="pl-c2"></span>		SharedFontDirectory 3 index  known<span class="pl-c2"></span>			{ SharedFontDirectory 3 index get /FontReferenced known }<span class="pl-c2"></span>			{ false }<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>		FontDirectory 3 index known<span class="pl-c2"></span>			{ FontDirectory 3 index get /FontReferenced known }<span class="pl-c2"></span>			{<span class="pl-c2"></span>			SharedFontDirectory 3 index known<span class="pl-c2"></span>				{ SharedFontDirectory 3 index get /FontReferenced known }<span class="pl-c2"></span>				{ false }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			}<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	dup<span class="pl-c2"></span>		{<span class="pl-c2"></span>		3 index findfont /FontReferenced get<span class="pl-c2"></span>		2 index dup type /nametype eq<span class="pl-c2"></span>			{findfont}<span class="pl-c2"></span>		if ne<span class="pl-c2"></span>			{ pop false }<span class="pl-c2"></span>		if<span class="pl-c2"></span>		}<span class="pl-c2"></span>	if<span class="pl-c2"></span>		{<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		1 index findfont<span class="pl-c2"></span>		/Encoding get exch<span class="pl-c2"></span>		0 1 255<span class="pl-c2"></span>			{ 2 copy get 3 index 3 1 roll put }<span class="pl-c2"></span>		for<span class="pl-c2"></span>		pop pop pop<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>		dup type /nametype eq<span class="pl-c2"></span>		  { findfont }<span class="pl-c2"></span>	  if<span class="pl-c2"></span>		dup dup maxlength 2 add dict<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			exch<span class="pl-c2"></span>				{<span class="pl-c2"></span>				1 index /FID ne<span class="pl-c2"></span>					{def}<span class="pl-c2"></span>					{pop pop}<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				}<span class="pl-c2"></span>			forall<span class="pl-c2"></span>			/FontReferenced exch def<span class="pl-c2"></span>			/Encoding exch dup length array copy def<span class="pl-c2"></span>			/FontName 1 index dup type /stringtype eq { cvn } if def dup<span class="pl-c2"></span>			currentdict<span class="pl-c2"></span>			end<span class="pl-c2"></span>		definefont def<span class="pl-c2"></span>		}<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/SetSubstituteStrategy<span class="pl-c2"></span>	{<span class="pl-c2"></span>	$SubstituteFont<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		dup type /dicttype ne<span class="pl-c2"></span>			{ 0 dict }<span class="pl-c2"></span>		if<span class="pl-c2"></span>		currentdict /$Strategies known<span class="pl-c2"></span>			{<span class="pl-c2"></span>			exch $Strategies exch <span class="pl-c2"></span>			2 copy known<span class="pl-c2"></span>				{<span class="pl-c2"></span>				get<span class="pl-c2"></span>				2 copy maxlength exch maxlength add dict<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					{ def } forall<span class="pl-c2"></span>					{ def } forall<span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					dup /$Init known<span class="pl-c2"></span>						{ dup /$Init get exec }<span class="pl-c2"></span>					if<span class="pl-c2"></span>					end<span class="pl-c2"></span>				/$Strategy exch def<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ pop pop pop }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{ pop pop }<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		end<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/scff<span class="pl-c2"></span>	{<span class="pl-c2"></span>	$SubstituteFont<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		dup type /stringtype eq<span class="pl-c2"></span>			{ dup length exch }<span class="pl-c2"></span>			{ null }<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		/$sname exch def<span class="pl-c2"></span>		/$slen exch def<span class="pl-c2"></span>		/$inVMIndex<span class="pl-c2"></span>			$sname null eq<span class="pl-c2"></span>				{<span class="pl-c2"></span>				1 index $str cvs<span class="pl-c2"></span>				dup length $slen sub $slen getinterval cvn<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ $sname }<span class="pl-c2"></span>			ifelse def<span class="pl-c2"></span>		end<span class="pl-c2"></span>		{ findfont }<span class="pl-c2"></span>	@Stopped<span class="pl-c2"></span>		{<span class="pl-c2"></span>		dup length 8 add string exch<span class="pl-c2"></span>		1 index 0 (BadFont:) putinterval<span class="pl-c2"></span>		1 index exch 8 exch dup length string cvs putinterval cvn<span class="pl-c2"></span>			{ findfont }<span class="pl-c2"></span>		@Stopped<span class="pl-c2"></span>			{ pop /Courier findfont }<span class="pl-c2"></span>		if<span class="pl-c2"></span>		}<span class="pl-c2"></span>	if<span class="pl-c2"></span>	$SubstituteFont<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/$sname null def<span class="pl-c2"></span>		/$slen 0 def<span class="pl-c2"></span>		/$inVMIndex null def<span class="pl-c2"></span>		end<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/isWidthsOnlyFont<span class="pl-c2"></span>	{<span class="pl-c2"></span>	dup /WidthsOnly known<span class="pl-c2"></span>		{ pop pop true }<span class="pl-c2"></span>		{<span class="pl-c2"></span>		dup /FDepVector known<span class="pl-c2"></span>			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }<span class="pl-c2"></span>			{<span class="pl-c2"></span>			dup /FDArray known<span class="pl-c2"></span>				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }<span class="pl-c2"></span>				{ pop }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			}<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/?str1 256 string def<span class="pl-c2"></span>/?set<span class="pl-c2"></span>	{<span class="pl-c2"></span>	$SubstituteFont<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/$substituteFound false def<span class="pl-c2"></span>		/$fontname 4 index def<span class="pl-c2"></span>		/$doSmartSub false def<span class="pl-c2"></span>		end<span class="pl-c2"></span>	3 index<span class="pl-c2"></span>	currentglobal false setglobal exch<span class="pl-c2"></span>	/CompatibleFonts /ProcSet resourcestatus<span class="pl-c2"></span>		{<span class="pl-c2"></span>		pop pop<span class="pl-c2"></span>		/CompatibleFonts /ProcSet findresource<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			dup /CompatibleFont currentexception<span class="pl-c2"></span>			1 index /CompatibleFont true setexception<span class="pl-c2"></span>			1 index /Font resourcestatus<span class="pl-c2"></span>				{<span class="pl-c2"></span>				pop pop<span class="pl-c2"></span>				3 2 roll setglobal<span class="pl-c2"></span>				end<span class="pl-c2"></span>				exch<span class="pl-c2"></span>				dup findfont<span class="pl-c2"></span>				/CompatibleFonts /ProcSet findresource<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					3 1 roll exch /CompatibleFont exch setexception<span class="pl-c2"></span>					end<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{<span class="pl-c2"></span>				3 2 roll setglobal<span class="pl-c2"></span>				1 index exch /CompatibleFont exch setexception<span class="pl-c2"></span>				end<span class="pl-c2"></span>				findfont<span class="pl-c2"></span>				$SubstituteFont /$substituteFound true put<span class="pl-c2"></span>				}<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{ exch setglobal findfont }<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	$SubstituteFont<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		$substituteFound<span class="pl-c2"></span>			{<span class="pl-c2"></span>		 false<span class="pl-c2"></span>		 (%%[Using embedded font ) print<span class="pl-c2"></span>		 5 index ?str1 cvs print<span class="pl-c2"></span>		 ( to avoid the font substitution problem noted earlier.]%%\n) print<span class="pl-c2"></span>		 }<span class="pl-c2"></span>			{<span class="pl-c2"></span>			dup /FontName known<span class="pl-c2"></span>				{<span class="pl-c2"></span>				dup /FontName get $fontname eq<span class="pl-c2"></span>				1 index /DistillerFauxFont known not and<span class="pl-c2"></span>				/currentdistillerparams where<span class="pl-c2"></span>					{ pop false 2 index isWidthsOnlyFont not and }<span class="pl-c2"></span>				if<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ false }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			}<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		exch pop<span class="pl-c2"></span>		/$doSmartSub true def<span class="pl-c2"></span>		end<span class="pl-c2"></span>		{<span class="pl-c2"></span>		exch pop exch pop exch<span class="pl-c2"></span>		2 dict dup /Found 3 index put<span class="pl-c2"></span>		exch findfont exch<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>		exch exec<span class="pl-c2"></span>		exch dup findfont<span class="pl-c2"></span>		dup /FontType get 3 eq<span class="pl-c2"></span>	  {<span class="pl-c2"></span>		  exch ?str1 cvs<span class="pl-c2"></span>		  dup length 1 sub<span class="pl-c2"></span>		  -1 0<span class="pl-c2"></span>		{<span class="pl-c2"></span>			  exch dup 2 index get 42 eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop<span class="pl-c2"></span>				 exit<span class="pl-c2"></span>			  }<span class="pl-c2"></span>			  {exch pop} ifelse<span class="pl-c2"></span>		  }for<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>		 exch pop<span class="pl-c2"></span>	  } ifelse<span class="pl-c2"></span>		2 dict dup /Downloaded 6 5 roll put<span class="pl-c2"></span>		}<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	dup /FontName 4 index put copyfont definefont pop<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/?str2 256 string def<span class="pl-c2"></span>/?add<span class="pl-c2"></span>	{<span class="pl-c2"></span>	1 index type /integertype eq<span class="pl-c2"></span>		{ exch true 4 2 }<span class="pl-c2"></span>		{ false 3 1 }<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	roll<span class="pl-c2"></span>	1 index findfont<span class="pl-c2"></span>	dup /Widths known<span class="pl-c2"></span>		{<span class="pl-c2"></span>		Adobe_CoolType_Data /AddWidths? true put<span class="pl-c2"></span>		gsave dup 1000 scalefont setfont<span class="pl-c2"></span>		}<span class="pl-c2"></span>	if<span class="pl-c2"></span>	/Downloaded known<span class="pl-c2"></span>		{<span class="pl-c2"></span>		exec<span class="pl-c2"></span>		exch<span class="pl-c2"></span>			{<span class="pl-c2"></span>			exch ?str2 cvs exch<span class="pl-c2"></span>			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length<span class="pl-c2"></span>			?str1 1 index 1 add 3 index putinterval<span class="pl-c2"></span>			exch length 1 add 1 index add<span class="pl-c2"></span>			?str1 2 index (*) putinterval<span class="pl-c2"></span>			?str1 0 2 index getinterval cvn findfont <span class="pl-c2"></span>			?str1 3 index (+) putinterval<span class="pl-c2"></span>			2 dict dup /FontName ?str1 0 6 index getinterval cvn put<span class="pl-c2"></span>			dup /Downloaded Downloaded put end copyfont<span class="pl-c2"></span>			dup /FontName get exch definefont pop pop pop<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{<span class="pl-c2"></span>			pop<span class="pl-c2"></span>			}<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		exch<span class="pl-c2"></span>			{<span class="pl-c2"></span>			findfont<span class="pl-c2"></span>			dup /Found get<span class="pl-c2"></span>			dup length exch ?str1 cvs pop<span class="pl-c2"></span>			?str1 1 index (+) putinterval<span class="pl-c2"></span>			?str1 1 index 1 add 4 index ?str2 cvs putinterval<span class="pl-c2"></span>			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn<span class="pl-c2"></span>			1 dict exch 1 index exch /FontName exch put copyfont<span class="pl-c2"></span>			dup /FontName get exch definefont pop<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{<span class="pl-c2"></span>			pop<span class="pl-c2"></span>			}<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	Adobe_CoolType_Data /AddWidths? get<span class="pl-c2"></span>		{ grestore Adobe_CoolType_Data /AddWidths? false put }<span class="pl-c2"></span>	if<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/?sh<span class="pl-c2"></span>	{<span class="pl-c2"></span>	currentfont /Downloaded known { exch } if pop<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/?chp<span class="pl-c2"></span>	{<span class="pl-c2"></span>	currentfont /Downloaded known { pop } { false chp } ifelse<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/?mv <span class="pl-c2"></span>	{<span class="pl-c2"></span>	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>setpacking<span class="pl-c2"></span>userdict /$SubstituteFont 25 dict put<span class="pl-c2"></span>1 dict<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	/SubstituteFont<span class="pl-c2"></span>		dup $error exch 2 copy known<span class="pl-c2"></span>			{ get }<span class="pl-c2"></span>			{ pop pop { pop /Courier } bind }<span class="pl-c2"></span>		ifelse def<span class="pl-c2"></span>	/currentdistillerparams where dup<span class="pl-c2"></span>		{<span class="pl-c2"></span>		pop pop<span class="pl-c2"></span>		currentdistillerparams /CannotEmbedFontPolicy 2 copy known<span class="pl-c2"></span>			{ get /Error eq }<span class="pl-c2"></span>			{ pop pop false }<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>	if not<span class="pl-c2"></span>		{<span class="pl-c2"></span>		countdictstack array dictstack 0 get<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			userdict<span class="pl-c2"></span>				begin<span class="pl-c2"></span>				$SubstituteFont<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					/$str 128 string def<span class="pl-c2"></span>					/$fontpat 128 string def<span class="pl-c2"></span>					/$slen 0 def<span class="pl-c2"></span>					/$sname null def<span class="pl-c2"></span>					/$match false def<span class="pl-c2"></span>					/$fontname null def<span class="pl-c2"></span>					/$substituteFound false def<span class="pl-c2"></span>					/$inVMIndex null def<span class="pl-c2"></span>					/$doSmartSub true def<span class="pl-c2"></span>					/$depth 0 def<span class="pl-c2"></span>					/$fontname null def<span class="pl-c2"></span>					/$italicangle 26.5 def<span class="pl-c2"></span>					/$dstack null def<span class="pl-c2"></span>					/$Strategies 10 dict dup<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						/$Type3Underprint<span class="pl-c2"></span>							{<span class="pl-c2"></span>							currentglobal exch false setglobal<span class="pl-c2"></span>							11 dict<span class="pl-c2"></span>								begin<span class="pl-c2"></span>								/UseFont exch<span class="pl-c2"></span>									$WMode 0 ne<span class="pl-c2"></span>										{<span class="pl-c2"></span>										dup length dict copy<span class="pl-c2"></span>										dup /WMode $WMode put<span class="pl-c2"></span>										/UseFont exch definefont<span class="pl-c2"></span>										}<span class="pl-c2"></span>									if def<span class="pl-c2"></span>								/FontName $fontname dup type /stringtype eq { cvn } if def<span class="pl-c2"></span>								/FontType 3 def<span class="pl-c2"></span>								/FontMatrix [ .001 0 0 .001 0 0 ] def<span class="pl-c2"></span>								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def<span class="pl-c2"></span>								/FontBBox [ 0 0 0 0 ] def<span class="pl-c2"></span>								/CCInfo 7 dict dup<span class="pl-c2"></span>									begin<span class="pl-c2"></span>									/cc null def<span class="pl-c2"></span>									/x 0 def<span class="pl-c2"></span>									/y 0 def<span class="pl-c2"></span>									end def<span class="pl-c2"></span>								/BuildChar<span class="pl-c2"></span>									{<span class="pl-c2"></span>									exch<span class="pl-c2"></span>										begin<span class="pl-c2"></span>										CCInfo<span class="pl-c2"></span>											begin<span class="pl-c2"></span>											1 string dup 0 3 index put exch pop<span class="pl-c2"></span>											/cc exch def<span class="pl-c2"></span>											UseFont 1000 scalefont setfont<span class="pl-c2"></span>											cc stringwidth /y exch def /x exch def<span class="pl-c2"></span>											x y setcharwidth<span class="pl-c2"></span>											$SubstituteFont /$Strategy get /$Underprint get exec<span class="pl-c2"></span>											0 0 moveto cc show<span class="pl-c2"></span>											x y moveto<span class="pl-c2"></span>											end<span class="pl-c2"></span>										end<span class="pl-c2"></span>									} bind def<span class="pl-c2"></span>								currentdict<span class="pl-c2"></span>								end<span class="pl-c2"></span>							exch setglobal<span class="pl-c2"></span>							} bind def<span class="pl-c2"></span>						/$GetaTint<span class="pl-c2"></span>							2 dict dup<span class="pl-c2"></span>								begin<span class="pl-c2"></span>								/$BuildFont<span class="pl-c2"></span>									{<span class="pl-c2"></span>									dup /WMode known<span class="pl-c2"></span>										{ dup /WMode get }<span class="pl-c2"></span>										{ 0 }<span class="pl-c2"></span>									ifelse<span class="pl-c2"></span>									/$WMode exch def<span class="pl-c2"></span>									$fontname exch<span class="pl-c2"></span>									dup /FontName known<span class="pl-c2"></span>										{<span class="pl-c2"></span>										dup /FontName get<span class="pl-c2"></span>										dup type /stringtype eq { cvn } if<span class="pl-c2"></span>										}<span class="pl-c2"></span>										{ /unnamedfont }<span class="pl-c2"></span>									ifelse<span class="pl-c2"></span>									exch<span class="pl-c2"></span>									Adobe_CoolType_Data /InVMDeepCopiedFonts get<span class="pl-c2"></span>									1 index /FontName get known<span class="pl-c2"></span>										{<span class="pl-c2"></span>										pop<span class="pl-c2"></span>										Adobe_CoolType_Data /InVMDeepCopiedFonts get<span class="pl-c2"></span>										1 index get<span class="pl-c2"></span>										null copyfont<span class="pl-c2"></span>										}<span class="pl-c2"></span>										{ $deepcopyfont }<span class="pl-c2"></span>									ifelse<span class="pl-c2"></span>									exch 1 index exch /FontBasedOn exch put<span class="pl-c2"></span>									dup /FontName $fontname dup type /stringtype eq { cvn } if put<span class="pl-c2"></span>									definefont<span class="pl-c2"></span>									Adobe_CoolType_Data /InVMDeepCopiedFonts get<span class="pl-c2"></span>										begin<span class="pl-c2"></span>										dup /FontBasedOn get 1 index def<span class="pl-c2"></span>										end<span class="pl-c2"></span>									} bind def<span class="pl-c2"></span>								/$Underprint<span class="pl-c2"></span>									{<span class="pl-c2"></span>									gsave<span class="pl-c2"></span>									x abs y abs gt<span class="pl-c2"></span>										{ /y 1000 def }<span class="pl-c2"></span>										{ /x -1000 def 500 120 translate }<span class="pl-c2"></span>									ifelse<span class="pl-c2"></span>									Level2?<span class="pl-c2"></span>										{<span class="pl-c2"></span>										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]<span class="pl-c2"></span>										setcolorspace<span class="pl-c2"></span>										}<span class="pl-c2"></span>										{ 0 setgray }<span class="pl-c2"></span>									ifelse<span class="pl-c2"></span>									10 setlinewidth<span class="pl-c2"></span>									x .8 mul<span class="pl-c2"></span>									[ 7 3 ]<span class="pl-c2"></span>										{<span class="pl-c2"></span>										y mul 8 div 120 sub x 10 div exch moveto<span class="pl-c2"></span>										0 y 4 div neg rlineto<span class="pl-c2"></span>										dup 0 rlineto<span class="pl-c2"></span>										0 y 4 div rlineto<span class="pl-c2"></span>										closepath<span class="pl-c2"></span>										gsave<span class="pl-c2"></span>										Level2?<span class="pl-c2"></span>											{ .2 setcolor }<span class="pl-c2"></span>											{ .8 setgray }<span class="pl-c2"></span>										ifelse<span class="pl-c2"></span>										fill grestore<span class="pl-c2"></span>										stroke<span class="pl-c2"></span>										}<span class="pl-c2"></span>									forall<span class="pl-c2"></span>									pop<span class="pl-c2"></span>									grestore<span class="pl-c2"></span>									} bind def<span class="pl-c2"></span>								end def<span class="pl-c2"></span>						/$Oblique<span class="pl-c2"></span>							1 dict dup<span class="pl-c2"></span>								begin<span class="pl-c2"></span>								/$BuildFont<span class="pl-c2"></span>									{<span class="pl-c2"></span>									currentglobal exch dup gcheck setglobal<span class="pl-c2"></span>									null copyfont<span class="pl-c2"></span>										begin<span class="pl-c2"></span>										/FontBasedOn<span class="pl-c2"></span>										currentdict /FontName known<span class="pl-c2"></span>											{<span class="pl-c2"></span>											FontName<span class="pl-c2"></span>											dup type /stringtype eq { cvn } if<span class="pl-c2"></span>											}<span class="pl-c2"></span>											{ /unnamedfont }<span class="pl-c2"></span>										ifelse<span class="pl-c2"></span>										def<span class="pl-c2"></span>										/FontName $fontname dup type /stringtype eq { cvn } if def<span class="pl-c2"></span>										/currentdistillerparams where<span class="pl-c2"></span>											{ pop }<span class="pl-c2"></span>											{<span class="pl-c2"></span>											/FontInfo currentdict /FontInfo known<span class="pl-c2"></span>												{ FontInfo null copyfont }<span class="pl-c2"></span>												{ 2 dict }<span class="pl-c2"></span>											ifelse<span class="pl-c2"></span>											dup<span class="pl-c2"></span>												begin<span class="pl-c2"></span>												/ItalicAngle $italicangle def<span class="pl-c2"></span>												/FontMatrix FontMatrix<span class="pl-c2"></span>												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]<span class="pl-c2"></span>												matrix concatmatrix readonly<span class="pl-c2"></span>												end<span class="pl-c2"></span>											4 2 roll def<span class="pl-c2"></span>											def<span class="pl-c2"></span>											}<span class="pl-c2"></span>										ifelse<span class="pl-c2"></span>										FontName currentdict<span class="pl-c2"></span>										end<span class="pl-c2"></span>									definefont<span class="pl-c2"></span>									exch setglobal<span class="pl-c2"></span>									} bind def<span class="pl-c2"></span>								end def<span class="pl-c2"></span>						/$None<span class="pl-c2"></span>							1 dict dup<span class="pl-c2"></span>								begin<span class="pl-c2"></span>								/$BuildFont {} bind def<span class="pl-c2"></span>								end def<span class="pl-c2"></span>						end def<span class="pl-c2"></span>					/$Oblique SetSubstituteStrategy<span class="pl-c2"></span>					/$findfontByEnum<span class="pl-c2"></span>						{<span class="pl-c2"></span>						dup type /stringtype eq { cvn } if<span class="pl-c2"></span>						dup /$fontname exch def<span class="pl-c2"></span>						$sname null eq<span class="pl-c2"></span>							{ $str cvs dup length $slen sub $slen getinterval }<span class="pl-c2"></span>							{ pop $sname }<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval<span class="pl-c2"></span>						/$match false def<span class="pl-c2"></span>						$SubstituteFont /$dstack countdictstack array dictstack put<span class="pl-c2"></span>						mark<span class="pl-c2"></span>							{<span class="pl-c2"></span>							$fontpat 0 $slen 7 add getinterval<span class="pl-c2"></span>								{ /$match exch def exit }<span class="pl-c2"></span>							$str filenameforall<span class="pl-c2"></span>							}<span class="pl-c2"></span>						stopped<span class="pl-c2"></span>							{<span class="pl-c2"></span>							cleardictstack<span class="pl-c2"></span>							currentdict<span class="pl-c2"></span>							true<span class="pl-c2"></span>							$SubstituteFont /$dstack get<span class="pl-c2"></span>								{<span class="pl-c2"></span>								exch<span class="pl-c2"></span>									{<span class="pl-c2"></span>									1 index eq<span class="pl-c2"></span>										{ pop false }<span class="pl-c2"></span>										{ true }<span class="pl-c2"></span>									ifelse<span class="pl-c2"></span>									}<span class="pl-c2"></span>									{ begin false }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								}<span class="pl-c2"></span>							forall<span class="pl-c2"></span>							pop<span class="pl-c2"></span>							}<span class="pl-c2"></span>						if<span class="pl-c2"></span>						cleartomark<span class="pl-c2"></span>						/$slen 0 def<span class="pl-c2"></span>						$match false ne<span class="pl-c2"></span>							{ $match (fonts/) anchorsearch pop pop cvn }<span class="pl-c2"></span>							{ /Courier }<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						} bind def<span class="pl-c2"></span>					/$ROS 1 dict dup<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						/Adobe 4 dict dup<span class="pl-c2"></span>							begin<span class="pl-c2"></span>							/Japan1  [ /Ryumin-Light /HeiseiMin-W3<span class="pl-c2"></span>										  /GothicBBB-Medium /HeiseiKakuGo-W5<span class="pl-c2"></span>										  /HeiseiMaruGo-W4 /Jun101-Light ] def<span class="pl-c2"></span>							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def<span class="pl-c2"></span>							/GB1	  [ /STSong-Light /STHeiti-Regular ] def<span class="pl-c2"></span>							/CNS1	 [ /MKai-Medium /MHei-Medium ] def<span class="pl-c2"></span>							end def<span class="pl-c2"></span>						end def<span class="pl-c2"></span>					/$cmapname null def<span class="pl-c2"></span>					/$deepcopyfont<span class="pl-c2"></span>						{<span class="pl-c2"></span>						dup /FontType get 0 eq<span class="pl-c2"></span>							{<span class="pl-c2"></span>							1 dict dup /FontName /copied put copyfont<span class="pl-c2"></span>								begin<span class="pl-c2"></span>								/FDepVector FDepVector copyarray<span class="pl-c2"></span>								0 1 2 index length 1 sub<span class="pl-c2"></span>									{<span class="pl-c2"></span>									2 copy get $deepcopyfont<span class="pl-c2"></span>									dup /FontName /copied put<span class="pl-c2"></span>									/copied exch definefont<span class="pl-c2"></span>									3 copy put pop pop<span class="pl-c2"></span>									}<span class="pl-c2"></span>								for<span class="pl-c2"></span>								def<span class="pl-c2"></span>								currentdict<span class="pl-c2"></span>								end<span class="pl-c2"></span>							}<span class="pl-c2"></span>							{ $Strategies /$Type3Underprint get exec }<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						} bind def<span class="pl-c2"></span>					/$buildfontname<span class="pl-c2"></span>						{<span class="pl-c2"></span>						dup /CIDFont findresource /CIDSystemInfo get<span class="pl-c2"></span>							begin<span class="pl-c2"></span>							Registry length Ordering length Supplement 8 string cvs<span class="pl-c2"></span>							3 copy length 2 add add add string<span class="pl-c2"></span>							dup 5 1 roll dup 0 Registry putinterval<span class="pl-c2"></span>							dup 4 index (-) putinterval<span class="pl-c2"></span>							dup 4 index 1 add Ordering putinterval<span class="pl-c2"></span>							4 2 roll add 1 add 2 copy (-) putinterval<span class="pl-c2"></span>							end<span class="pl-c2"></span>						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch<span class="pl-c2"></span>						anchorsearch<span class="pl-c2"></span>							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }<span class="pl-c2"></span>							{ pop pop pop pop pop }<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						length<span class="pl-c2"></span>						$str 1 index (-) putinterval 1 add<span class="pl-c2"></span>						$str 1 index $cmapname $fontpat cvs putinterval<span class="pl-c2"></span>						$cmapname length add<span class="pl-c2"></span>						$str exch 0 exch getinterval cvn<span class="pl-c2"></span>						} bind def<span class="pl-c2"></span>					/$findfontByROS<span class="pl-c2"></span>						{<span class="pl-c2"></span>						/$fontname exch def<span class="pl-c2"></span>						$ROS Registry 2 copy known<span class="pl-c2"></span>							{<span class="pl-c2"></span>							get Ordering 2 copy known<span class="pl-c2"></span>								{ get }<span class="pl-c2"></span>								{ pop pop [] }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							}<span class="pl-c2"></span>							{ pop pop [] }<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						false exch<span class="pl-c2"></span>							{<span class="pl-c2"></span>							dup /CIDFont resourcestatus<span class="pl-c2"></span>								{<span class="pl-c2"></span>								pop pop<span class="pl-c2"></span>								save<span class="pl-c2"></span>								1 index /CIDFont findresource<span class="pl-c2"></span>								dup /WidthsOnly known<span class="pl-c2"></span>									{ dup /WidthsOnly get }<span class="pl-c2"></span>									{ false }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								exch pop<span class="pl-c2"></span>								exch restore<span class="pl-c2"></span>									{ pop }<span class="pl-c2"></span>									{ exch pop true exit }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								}<span class="pl-c2"></span>								{ pop }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							}<span class="pl-c2"></span>						forall<span class="pl-c2"></span>							{ $str cvs $buildfontname }<span class="pl-c2"></span>							{<span class="pl-c2"></span>							false (*)<span class="pl-c2"></span>								{<span class="pl-c2"></span>								save exch<span class="pl-c2"></span>								dup /CIDFont findresource<span class="pl-c2"></span>								dup /WidthsOnly known<span class="pl-c2"></span>									{ dup /WidthsOnly get not }<span class="pl-c2"></span>									{ true }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								exch /CIDSystemInfo get<span class="pl-c2"></span>								dup /Registry get Registry eq<span class="pl-c2"></span>								exch /Ordering get Ordering eq and and<span class="pl-c2"></span>									{ exch restore exch pop true exit }<span class="pl-c2"></span>									{ pop restore }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								}<span class="pl-c2"></span>							$str /CIDFont resourceforall<span class="pl-c2"></span>								{ $buildfontname }<span class="pl-c2"></span>								{ $fontname $findfontByEnum }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							}<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						} bind def<span class="pl-c2"></span>					end<span class="pl-c2"></span>				end<span class="pl-c2"></span>				currentdict /$error known currentdict /languagelevel known and dup<span class="pl-c2"></span>					{ pop $error /SubstituteFont known }<span class="pl-c2"></span>				if<span class="pl-c2"></span>				dup<span class="pl-c2"></span>					{ $error }<span class="pl-c2"></span>					{ Adobe_CoolType_Core }<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				begin<span class="pl-c2"></span>					{<span class="pl-c2"></span>					/SubstituteFont<span class="pl-c2"></span>					/CMap /Category resourcestatus<span class="pl-c2"></span>						{<span class="pl-c2"></span>						pop pop<span class="pl-c2"></span>						{<span class="pl-c2"></span>						$SubstituteFont<span class="pl-c2"></span>							begin<span class="pl-c2"></span>							/$substituteFound true def<span class="pl-c2"></span>							dup length $slen gt<span class="pl-c2"></span>							$sname null ne or<span class="pl-c2"></span>							$slen 0 gt and<span class="pl-c2"></span>								{<span class="pl-c2"></span>								$sname null eq<span class="pl-c2"></span>									{ dup $str cvs dup length $slen sub $slen getinterval cvn }<span class="pl-c2"></span>									{ $sname }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								Adobe_CoolType_Data /InVMFontsByCMap get<span class="pl-c2"></span>								1 index 2 copy known<span class="pl-c2"></span>									{<span class="pl-c2"></span>									get<span class="pl-c2"></span>									false exch<span class="pl-c2"></span>										{<span class="pl-c2"></span>										pop<span class="pl-c2"></span>										currentglobal<span class="pl-c2"></span>											{<span class="pl-c2"></span>											GlobalFontDirectory 1 index known<span class="pl-c2"></span>												{ exch pop true exit }<span class="pl-c2"></span>												{ pop }<span class="pl-c2"></span>											ifelse<span class="pl-c2"></span>											}<span class="pl-c2"></span>											{<span class="pl-c2"></span>											FontDirectory 1 index known<span class="pl-c2"></span>												{ exch pop true exit }<span class="pl-c2"></span>												{<span class="pl-c2"></span>												GlobalFontDirectory 1 index known<span class="pl-c2"></span>													{ exch pop true exit }<span class="pl-c2"></span>													{ pop }<span class="pl-c2"></span>												ifelse<span class="pl-c2"></span>												}<span class="pl-c2"></span>											ifelse<span class="pl-c2"></span>											}<span class="pl-c2"></span>										ifelse<span class="pl-c2"></span>										}<span class="pl-c2"></span>									forall<span class="pl-c2"></span>									}<span class="pl-c2"></span>									{ pop pop false }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>									{<span class="pl-c2"></span>									exch pop exch pop<span class="pl-c2"></span>									}<span class="pl-c2"></span>									{<span class="pl-c2"></span>									dup /CMap resourcestatus<span class="pl-c2"></span>										{<span class="pl-c2"></span>										pop pop<span class="pl-c2"></span>										dup /$cmapname exch def<span class="pl-c2"></span>										/CMap findresource /CIDSystemInfo get { def } forall<span class="pl-c2"></span>										$findfontByROS<span class="pl-c2"></span>										}<span class="pl-c2"></span>										{<span class="pl-c2"></span>										128 string cvs<span class="pl-c2"></span>										dup (-) search<span class="pl-c2"></span>											{<span class="pl-c2"></span>											3 1 roll search<span class="pl-c2"></span>												{<span class="pl-c2"></span>												3 1 roll pop<span class="pl-c2"></span>													{ dup cvi }<span class="pl-c2"></span>												stopped<span class="pl-c2"></span>													{ pop pop pop pop pop $findfontByEnum }<span class="pl-c2"></span>													{<span class="pl-c2"></span>													4 2 roll pop pop<span class="pl-c2"></span>													exch length<span class="pl-c2"></span>													exch<span class="pl-c2"></span>													2 index length<span class="pl-c2"></span>													2 index<span class="pl-c2"></span>													sub<span class="pl-c2"></span>													exch 1 sub -1 0<span class="pl-c2"></span>														{<span class="pl-c2"></span>														$str cvs dup length<span class="pl-c2"></span>														4 index<span class="pl-c2"></span>														0<span class="pl-c2"></span>														4 index<span class="pl-c2"></span>														4 3 roll add<span class="pl-c2"></span>														getinterval<span class="pl-c2"></span>														exch 1 index exch 3 index exch<span class="pl-c2"></span>														putinterval<span class="pl-c2"></span>														dup /CMap resourcestatus<span class="pl-c2"></span>															{<span class="pl-c2"></span>															pop pop<span class="pl-c2"></span>															4 1 roll pop pop pop<span class="pl-c2"></span>															dup /$cmapname exch def<span class="pl-c2"></span>															/CMap findresource /CIDSystemInfo get { def } forall<span class="pl-c2"></span>															$findfontByROS<span class="pl-c2"></span>															true exit<span class="pl-c2"></span>															}<span class="pl-c2"></span>															{ pop }<span class="pl-c2"></span>														ifelse<span class="pl-c2"></span>														}<span class="pl-c2"></span>													for<span class="pl-c2"></span>													dup type /booleantype eq<span class="pl-c2"></span>														{ pop }<span class="pl-c2"></span>														{ pop pop pop $findfontByEnum }<span class="pl-c2"></span>													ifelse<span class="pl-c2"></span>													}<span class="pl-c2"></span>												ifelse<span class="pl-c2"></span>												}<span class="pl-c2"></span>												{ pop pop pop $findfontByEnum }<span class="pl-c2"></span>											ifelse<span class="pl-c2"></span>											}<span class="pl-c2"></span>											{ pop pop $findfontByEnum }<span class="pl-c2"></span>										ifelse<span class="pl-c2"></span>										}<span class="pl-c2"></span>									ifelse<span class="pl-c2"></span>									}<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								}<span class="pl-c2"></span>								{ //SubstituteFont exec }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							/$slen 0 def<span class="pl-c2"></span>							end<span class="pl-c2"></span>						}<span class="pl-c2"></span>						}<span class="pl-c2"></span>						{<span class="pl-c2"></span>						{<span class="pl-c2"></span>						$SubstituteFont<span class="pl-c2"></span>							begin<span class="pl-c2"></span>							/$substituteFound true def<span class="pl-c2"></span>							dup length $slen gt<span class="pl-c2"></span>							$sname null ne or<span class="pl-c2"></span>							$slen 0 gt and<span class="pl-c2"></span>								{ $findfontByEnum }<span class="pl-c2"></span>								{ //SubstituteFont exec }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							end<span class="pl-c2"></span>						}<span class="pl-c2"></span>						}<span class="pl-c2"></span>					ifelse<span class="pl-c2"></span>					bind readonly def<span class="pl-c2"></span>					Adobe_CoolType_Core /scfindfont /systemfindfont load put<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{<span class="pl-c2"></span>					/scfindfont<span class="pl-c2"></span>						{<span class="pl-c2"></span>						$SubstituteFont<span class="pl-c2"></span>							begin<span class="pl-c2"></span>							dup systemfindfont<span class="pl-c2"></span>							dup /FontName known<span class="pl-c2"></span>								{ dup /FontName get dup 3 index ne }<span class="pl-c2"></span>								{ /noname true }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							dup<span class="pl-c2"></span>								{<span class="pl-c2"></span>								/$origfontnamefound 2 index def<span class="pl-c2"></span>								/$origfontname 4 index def /$substituteFound true def<span class="pl-c2"></span>								}<span class="pl-c2"></span>							if<span class="pl-c2"></span>							exch pop<span class="pl-c2"></span>								{<span class="pl-c2"></span>								$slen 0 gt<span class="pl-c2"></span>								$sname null ne<span class="pl-c2"></span>								3 index length $slen gt or and<span class="pl-c2"></span>									{<span class="pl-c2"></span>									pop dup $findfontByEnum findfont<span class="pl-c2"></span>									dup maxlength 1 add dict<span class="pl-c2"></span>										begin<span class="pl-c2"></span>											{ 1 index /FID eq { pop pop } { def } ifelse }<span class="pl-c2"></span>										forall<span class="pl-c2"></span>										currentdict<span class="pl-c2"></span>										end<span class="pl-c2"></span>									definefont<span class="pl-c2"></span>									dup /FontName known { dup /FontName get } { null } ifelse<span class="pl-c2"></span>									$origfontnamefound ne<span class="pl-c2"></span>										{<span class="pl-c2"></span>										$origfontname $str cvs print<span class="pl-c2"></span>										( substitution revised, using ) print<span class="pl-c2"></span>										dup /FontName known<span class="pl-c2"></span>											{ dup /FontName get } { (unspecified font) }<span class="pl-c2"></span>										ifelse<span class="pl-c2"></span>										$str cvs print (.\n) print<span class="pl-c2"></span>										}<span class="pl-c2"></span>									if<span class="pl-c2"></span>									}<span class="pl-c2"></span>									{ exch pop }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								}<span class="pl-c2"></span>								{ exch pop }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							end<span class="pl-c2"></span>						} bind def<span class="pl-c2"></span>					}<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				end<span class="pl-c2"></span>			end<span class="pl-c2"></span>		Adobe_CoolType_Core_Defined not<span class="pl-c2"></span>			{<span class="pl-c2"></span>			Adobe_CoolType_Core /findfont<span class="pl-c2"></span>				{<span class="pl-c2"></span>				$SubstituteFont<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					$depth 0 eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						/$fontname 1 index dup type /stringtype ne { $str cvs } if def<span class="pl-c2"></span>						/$substituteFound false def<span class="pl-c2"></span>						}<span class="pl-c2"></span>					if<span class="pl-c2"></span>					/$depth $depth 1 add def<span class="pl-c2"></span>					end<span class="pl-c2"></span>				scfindfont<span class="pl-c2"></span>				$SubstituteFont<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					/$depth $depth 1 sub def<span class="pl-c2"></span>					$substituteFound $depth 0 eq and<span class="pl-c2"></span>						{<span class="pl-c2"></span>						$inVMIndex null ne<span class="pl-c2"></span>							{ dup $inVMIndex $AddInVMFont }<span class="pl-c2"></span>						if<span class="pl-c2"></span>						$doSmartSub<span class="pl-c2"></span>							{<span class="pl-c2"></span>							currentdict /$Strategy known<span class="pl-c2"></span>								{ $Strategy /$BuildFont get exec }<span class="pl-c2"></span>							if<span class="pl-c2"></span>							}<span class="pl-c2"></span>						if<span class="pl-c2"></span>						}<span class="pl-c2"></span>					if<span class="pl-c2"></span>					end<span class="pl-c2"></span>				} bind put<span class="pl-c2"></span>			}<span class="pl-c2"></span>		if<span class="pl-c2"></span>		}<span class="pl-c2"></span>	if<span class="pl-c2"></span>	end<span class="pl-c2"></span>/$AddInVMFont<span class="pl-c2"></span>	{<span class="pl-c2"></span>	exch /FontName 2 copy known<span class="pl-c2"></span>		{<span class="pl-c2"></span>		get<span class="pl-c2"></span>		1 dict dup begin exch 1 index gcheck def end exch<span class="pl-c2"></span>		Adobe_CoolType_Data /InVMFontsByCMap get exch<span class="pl-c2"></span>		$DictAdd<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{ pop pop pop }<span class="pl-c2"></span>	ifelse<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>/$DictAdd<span class="pl-c2"></span>	{<span class="pl-c2"></span>	2 copy known not<span class="pl-c2"></span>		{ 2 copy 4 index length dict put }<span class="pl-c2"></span>	if<span class="pl-c2"></span>	Level2? not<span class="pl-c2"></span>		{<span class="pl-c2"></span>		2 copy get dup maxlength exch length 4 index length add lt<span class="pl-c2"></span>		2 copy get dup length 4 index length add exch maxlength 1 index lt<span class="pl-c2"></span>			{<span class="pl-c2"></span>			2 mul dict<span class="pl-c2"></span>				begin<span class="pl-c2"></span>				2 copy get { forall } def<span class="pl-c2"></span>				2 copy currentdict put<span class="pl-c2"></span>				end<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{ pop }<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>	if<span class="pl-c2"></span>	get<span class="pl-c2"></span>		begin<span class="pl-c2"></span>			{ def }<span class="pl-c2"></span>		forall<span class="pl-c2"></span>		end<span class="pl-c2"></span>	} bind def<span class="pl-c2"></span>end<span class="pl-c2"></span>end<span class="pl-c2"></span>%%EndResource<span class="pl-c2"></span>%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0<span class="pl-c2"></span>%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.<span class="pl-c2"></span>%%Version: 1.21 0<span class="pl-c2"></span>systemdict /languagelevel known dup<span class="pl-c2"></span>	{ currentglobal false setglobal }<span class="pl-c2"></span>	{ false }<span class="pl-c2"></span>ifelse<span class="pl-c2"></span>exch<span class="pl-c2"></span>userdict /Adobe_CoolType_Utility 2 copy known<span class="pl-c2"></span>	{ 2 copy get dup maxlength 27 add dict copy }<span class="pl-c2"></span>	{ 27 dict }<span class="pl-c2"></span>ifelse put<span class="pl-c2"></span>Adobe_CoolType_Utility<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	/@eexecStartData<span class="pl-c2"></span>		  &lt;BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E<span class="pl-c2"></span>		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C<span class="pl-c2"></span>		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A&gt; def<span class="pl-c2"></span>	/@recognizeCIDFont null def<span class="pl-c2"></span>	/ct_Level2? exch def<span class="pl-c2"></span>	/ct_Clone? 1183615869 internaldict dup<span class="pl-c2"></span>			/CCRun known not<span class="pl-c2"></span>			exch /eCCRun known not<span class="pl-c2"></span>			ct_Level2? and or def<span class="pl-c2"></span>ct_Level2?<span class="pl-c2"></span>	{ globaldict begin currentglobal true setglobal }<span class="pl-c2"></span>if<span class="pl-c2"></span>	/ct_AddStdCIDMap<span class="pl-c2"></span>		ct_Level2?<span class="pl-c2"></span>			{ {<span class="pl-c2"></span>				mark<span class="pl-c2"></span>				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put<span class="pl-c2"></span>					 {<span class="pl-c2"></span>					 ((Hex) 57 StartData<span class="pl-c2"></span>					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0<span class="pl-c2"></span>					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60<span class="pl-c2"></span>					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8<span class="pl-c2"></span>					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec<span class="pl-c2"></span>					 }<span class="pl-c2"></span>				stopped<span class="pl-c2"></span>					 {<span class="pl-c2"></span>					 cleartomark<span class="pl-c2"></span>					 Adobe_CoolType_Utility /@recognizeCIDFont get<span class="pl-c2"></span>					 countdictstack dup array dictstack<span class="pl-c2"></span>					 exch 1 sub -1 0<span class="pl-c2"></span>						  {<span class="pl-c2"></span>						  2 copy get 3 index eq<span class="pl-c2"></span>								{ 1 index length exch sub 1 sub { end } repeat exit }<span class="pl-c2"></span>								{ pop }<span class="pl-c2"></span>						  ifelse<span class="pl-c2"></span>						  }<span class="pl-c2"></span>					 for<span class="pl-c2"></span>					 pop pop<span class="pl-c2"></span>					 Adobe_CoolType_Utility /@eexecStartData get eexec<span class="pl-c2"></span>					 }<span class="pl-c2"></span>					 { cleartomark }<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>			} }<span class="pl-c2"></span>			{ {<span class="pl-c2"></span>				Adobe_CoolType_Utility /@eexecStartData get eexec<span class="pl-c2"></span>			} }<span class="pl-c2"></span>		ifelse bind def<span class="pl-c2"></span>userdict /cid_extensions known<span class="pl-c2"></span>dup { cid_extensions /cid_UpdateDB known and } if<span class="pl-c2"></span>	 {<span class="pl-c2"></span>	 cid_extensions<span class="pl-c2"></span>	 begin<span class="pl-c2"></span>	 /cid_GetCIDSystemInfo<span class="pl-c2"></span>		 {<span class="pl-c2"></span>		 1 index type /stringtype eq<span class="pl-c2"></span>			 { exch cvn exch }<span class="pl-c2"></span>		 if<span class="pl-c2"></span>		 cid_extensions<span class="pl-c2"></span>			 begin<span class="pl-c2"></span>			 dup load 2 index known<span class="pl-c2"></span>				 {<span class="pl-c2"></span>				 2 copy<span class="pl-c2"></span>				 cid_GetStatusInfo<span class="pl-c2"></span>				 dup null ne<span class="pl-c2"></span>					 {<span class="pl-c2"></span>					 1 index load<span class="pl-c2"></span>					 3 index get<span class="pl-c2"></span>					 dup null eq<span class="pl-c2"></span>						  { pop pop cid_UpdateDB }<span class="pl-c2"></span>						  {<span class="pl-c2"></span>						  exch<span class="pl-c2"></span>						  1 index /Created get eq<span class="pl-c2"></span>							  { exch pop exch pop }<span class="pl-c2"></span>							  { pop cid_UpdateDB }<span class="pl-c2"></span>						  ifelse<span class="pl-c2"></span>						  }<span class="pl-c2"></span>					 ifelse<span class="pl-c2"></span>					 }<span class="pl-c2"></span>					 { pop cid_UpdateDB }<span class="pl-c2"></span>				 ifelse<span class="pl-c2"></span>				 }<span class="pl-c2"></span>				 { cid_UpdateDB }<span class="pl-c2"></span>			 ifelse<span class="pl-c2"></span>			 end<span class="pl-c2"></span>		 } bind def<span class="pl-c2"></span>	 end<span class="pl-c2"></span>	 }<span class="pl-c2"></span>if<span class="pl-c2"></span>ct_Level2?<span class="pl-c2"></span>	{ end setglobal }<span class="pl-c2"></span>if<span class="pl-c2"></span>	/ct_UseNativeCapability?  systemdict /composefont known def<span class="pl-c2"></span>	/ct_MakeOCF 35 dict def<span class="pl-c2"></span>	/ct_Vars 25 dict def<span class="pl-c2"></span>	/ct_GlyphDirProcs 6 dict def<span class="pl-c2"></span>	/ct_BuildCharDict 15 dict dup<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/charcode 2 string def<span class="pl-c2"></span>		/dst_string 1500 string def<span class="pl-c2"></span>		/nullstring () def<span class="pl-c2"></span>		/usewidths? true def<span class="pl-c2"></span>		end def<span class="pl-c2"></span>	ct_Level2? { setglobal } { pop } ifelse<span class="pl-c2"></span>	ct_GlyphDirProcs<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/GetGlyphDirectory<span class="pl-c2"></span>			{<span class="pl-c2"></span>			systemdict /languagelevel known<span class="pl-c2"></span>				{ pop /CIDFont findresource /GlyphDirectory get }<span class="pl-c2"></span>				{<span class="pl-c2"></span>				1 index /CIDFont findresource /GlyphDirectory<span class="pl-c2"></span>				get dup type /dicttype eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>					dup dup maxlength exch length sub 2 index lt<span class="pl-c2"></span>						{<span class="pl-c2"></span>						dup length 2 index add dict copy 2 index<span class="pl-c2"></span>						/CIDFont findresource/GlyphDirectory 2 index put<span class="pl-c2"></span>						}<span class="pl-c2"></span>					if<span class="pl-c2"></span>					}<span class="pl-c2"></span>				if<span class="pl-c2"></span>				exch pop exch pop<span class="pl-c2"></span>				}<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			+<span class="pl-c2"></span>			} def<span class="pl-c2"></span>		/+<span class="pl-c2"></span>			{<span class="pl-c2"></span>			systemdict /languagelevel known<span class="pl-c2"></span>				{<span class="pl-c2"></span>				currentglobal false setglobal<span class="pl-c2"></span>				3 dict begin<span class="pl-c2"></span>					/vm exch def<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ 1 dict begin }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			/$ exch def<span class="pl-c2"></span>			systemdict /languagelevel known<span class="pl-c2"></span>				{<span class="pl-c2"></span>				vm setglobal<span class="pl-c2"></span>				/gvm currentglobal def<span class="pl-c2"></span>				$ gcheck setglobal<span class="pl-c2"></span>				}<span class="pl-c2"></span>			if<span class="pl-c2"></span>			? { $ begin } if<span class="pl-c2"></span>			} def<span class="pl-c2"></span>		/? { $ type /dicttype eq } def<span class="pl-c2"></span>		/| {<span class="pl-c2"></span>			userdict /Adobe_CoolType_Data known<span class="pl-c2"></span>				{<span class="pl-c2"></span>			Adobe_CoolType_Data /AddWidths? known<span class="pl-c2"></span>				{<span class="pl-c2"></span>				 currentdict Adobe_CoolType_Data<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					  begin<span class="pl-c2"></span>						AddWidths?<span class="pl-c2"></span>								{<span class="pl-c2"></span>								Adobe_CoolType_Data /CC 3 index put<span class="pl-c2"></span>								? { def } { $ 3 1 roll put } ifelse<span class="pl-c2"></span>								CC charcode exch 1 index 0 2 index 256 idiv put<span class="pl-c2"></span>								1 index exch 1 exch 256 mod put<span class="pl-c2"></span>								stringwidth 2 array astore<span class="pl-c2"></span>								currentfont /Widths get exch CC exch put<span class="pl-c2"></span>								}<span class="pl-c2"></span>								{ ? { def } { $ 3 1 roll put } ifelse }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>					end<span class="pl-c2"></span>				end<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ ? { def } { $ 3 1 roll put } ifelse }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			} def<span class="pl-c2"></span>		/!<span class="pl-c2"></span>			{<span class="pl-c2"></span>			? { end } if<span class="pl-c2"></span>			systemdict /languagelevel known<span class="pl-c2"></span>				{ gvm setglobal }<span class="pl-c2"></span>			if<span class="pl-c2"></span>			end<span class="pl-c2"></span>			} def<span class="pl-c2"></span>		/: { string currentfile exch readstring pop } executeonly def<span class="pl-c2"></span>		end<span class="pl-c2"></span>	ct_MakeOCF<span class="pl-c2"></span>		begin<span class="pl-c2"></span>		/ct_cHexEncoding<span class="pl-c2"></span>		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12<span class="pl-c2"></span>		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25<span class="pl-c2"></span>		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38<span class="pl-c2"></span>		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B<span class="pl-c2"></span>		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E<span class="pl-c2"></span>		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71<span class="pl-c2"></span>		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84<span class="pl-c2"></span>		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97<span class="pl-c2"></span>		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA<span class="pl-c2"></span>		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD<span class="pl-c2"></span>		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0<span class="pl-c2"></span>		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3<span class="pl-c2"></span>		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6<span class="pl-c2"></span>		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def<span class="pl-c2"></span>		/ct_CID_STR_SIZE 8000 def<span class="pl-c2"></span>		/ct_mkocfStr100 100 string def<span class="pl-c2"></span>		/ct_defaultFontMtx [.001 0 0 .001 0 0] def<span class="pl-c2"></span>		/ct_1000Mtx [1000 0 0 1000 0 0] def<span class="pl-c2"></span>		/ct_raise {exch cvx exch errordict exch get exec stop} bind def<span class="pl-c2"></span>		/ct_reraise<span class="pl-c2"></span>			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print<span class="pl-c2"></span>					errordict exch get exec stop<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		/ct_cvnsi<span class="pl-c2"></span>			{<span class="pl-c2"></span>			1 index add 1 sub 1 exch 0 4 1 roll<span class="pl-c2"></span>				{<span class="pl-c2"></span>				2 index exch get<span class="pl-c2"></span>				exch 8 bitshift<span class="pl-c2"></span>				add<span class="pl-c2"></span>				}<span class="pl-c2"></span>			for<span class="pl-c2"></span>			exch pop<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		/ct_GetInterval<span class="pl-c2"></span>			{<span class="pl-c2"></span>			Adobe_CoolType_Utility /ct_BuildCharDict get<span class="pl-c2"></span>				begin<span class="pl-c2"></span>				/dst_index 0 def<span class="pl-c2"></span>				dup dst_string length gt<span class="pl-c2"></span>					{ dup string /dst_string exch def }<span class="pl-c2"></span>				if<span class="pl-c2"></span>				1 index ct_CID_STR_SIZE idiv<span class="pl-c2"></span>				/arrayIndex exch def<span class="pl-c2"></span>				2 index arrayIndex  get<span class="pl-c2"></span>				2 index<span class="pl-c2"></span>				arrayIndex ct_CID_STR_SIZE mul<span class="pl-c2"></span>				sub<span class="pl-c2"></span>					{<span class="pl-c2"></span>					dup 3 index add 2 index length le<span class="pl-c2"></span>						{<span class="pl-c2"></span>						2 index getinterval<span class="pl-c2"></span>						dst_string  dst_index 2 index putinterval<span class="pl-c2"></span>						length dst_index add /dst_index exch def<span class="pl-c2"></span>						exit<span class="pl-c2"></span>						}<span class="pl-c2"></span>						{<span class="pl-c2"></span>						1 index length 1 index sub<span class="pl-c2"></span>						dup 4 1 roll<span class="pl-c2"></span>						getinterval<span class="pl-c2"></span>						dst_string  dst_index 2 index putinterval<span class="pl-c2"></span>						pop dup dst_index add /dst_index exch def<span class="pl-c2"></span>						sub<span class="pl-c2"></span>						/arrayIndex arrayIndex 1 add def<span class="pl-c2"></span>						2 index dup length arrayIndex gt<span class="pl-c2"></span>							  { arrayIndex get }<span class="pl-c2"></span>							  {<span class="pl-c2"></span>							  pop<span class="pl-c2"></span>							  exit<span class="pl-c2"></span>							  }<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						0<span class="pl-c2"></span>						}<span class="pl-c2"></span>					ifelse<span class="pl-c2"></span>					}<span class="pl-c2"></span>				loop<span class="pl-c2"></span>				pop pop pop<span class="pl-c2"></span>				dst_string 0 dst_index getinterval<span class="pl-c2"></span>				end<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		ct_Level2?<span class="pl-c2"></span>			{<span class="pl-c2"></span>			/ct_resourcestatus<span class="pl-c2"></span>			currentglobal mark true setglobal<span class="pl-c2"></span>				{ /unknowninstancename /Category resourcestatus }<span class="pl-c2"></span>			stopped<span class="pl-c2"></span>				{ cleartomark setglobal true }<span class="pl-c2"></span>				{ cleartomark currentglobal not exch setglobal }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>				{<span class="pl-c2"></span>					{<span class="pl-c2"></span>					mark 3 1 roll /Category findresource<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						ct_Vars /vm currentglobal put<span class="pl-c2"></span>						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec<span class="pl-c2"></span>							{ cleartomark false }<span class="pl-c2"></span>							{ { 3 2 roll pop true } { cleartomark false } ifelse }<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						ct_Vars /vm get setglobal<span class="pl-c2"></span>						end<span class="pl-c2"></span>					}<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ { resourcestatus } }<span class="pl-c2"></span>			ifelse bind def<span class="pl-c2"></span>			/CIDFont /Category ct_resourcestatus<span class="pl-c2"></span>				{ pop pop }<span class="pl-c2"></span>				{<span class="pl-c2"></span>				currentglobal  true setglobal<span class="pl-c2"></span>				/Generic /Category findresource<span class="pl-c2"></span>				dup length dict copy<span class="pl-c2"></span>				dup /InstanceType /dicttype put<span class="pl-c2"></span>				/CIDFont exch /Category defineresource pop<span class="pl-c2"></span>				setglobal<span class="pl-c2"></span>				}<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			ct_UseNativeCapability?<span class="pl-c2"></span>				{<span class="pl-c2"></span>				/CIDInit /ProcSet findresource begin<span class="pl-c2"></span>				12 dict begin<span class="pl-c2"></span>				begincmap<span class="pl-c2"></span>				/CIDSystemInfo 3 dict dup begin<span class="pl-c2"></span>				  /Registry (Adobe) def<span class="pl-c2"></span>				  /Ordering (Identity) def<span class="pl-c2"></span>				  /Supplement 0 def<span class="pl-c2"></span>				end def<span class="pl-c2"></span>				/CMapName /Identity-H def<span class="pl-c2"></span>				/CMapVersion 1.000 def<span class="pl-c2"></span>				/CMapType 1 def<span class="pl-c2"></span>				1 begincodespacerange<span class="pl-c2"></span>				&lt;0000&gt; &lt;FFFF&gt;<span class="pl-c2"></span>				endcodespacerange<span class="pl-c2"></span>				1 begincidrange<span class="pl-c2"></span>				&lt;0000&gt; &lt;FFFF&gt; 0<span class="pl-c2"></span>				endcidrange<span class="pl-c2"></span>				endcmap<span class="pl-c2"></span>				CMapName currentdict /CMap defineresource pop<span class="pl-c2"></span>				end<span class="pl-c2"></span>				end<span class="pl-c2"></span>				}<span class="pl-c2"></span>			if<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{<span class="pl-c2"></span>			/ct_Category 2 dict begin<span class="pl-c2"></span>			/CIDFont  10 dict def<span class="pl-c2"></span>			/ProcSet	2 dict def<span class="pl-c2"></span>			currentdict<span class="pl-c2"></span>			end<span class="pl-c2"></span>			def<span class="pl-c2"></span>			/defineresource<span class="pl-c2"></span>				{<span class="pl-c2"></span>				ct_Category 1 index 2 copy known<span class="pl-c2"></span>					{<span class="pl-c2"></span>					get<span class="pl-c2"></span>					dup dup maxlength exch length eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						dup length 10 add dict copy<span class="pl-c2"></span>						ct_Category 2 index 2 index put<span class="pl-c2"></span>						}<span class="pl-c2"></span>					if<span class="pl-c2"></span>					3 index 3 index put<span class="pl-c2"></span>					pop exch pop<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{ pop pop /defineresource /undefined ct_raise }<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				} bind def<span class="pl-c2"></span>			/findresource<span class="pl-c2"></span>				{<span class="pl-c2"></span>				ct_Category 1 index 2 copy known<span class="pl-c2"></span>					{<span class="pl-c2"></span>					get<span class="pl-c2"></span>					2 index 2 copy known<span class="pl-c2"></span>						{ get 3 1 roll pop pop}<span class="pl-c2"></span>						{ pop pop /findresource /undefinedresource ct_raise }<span class="pl-c2"></span>					ifelse<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{ pop pop /findresource /undefined ct_raise }<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				} bind def<span class="pl-c2"></span>			/resourcestatus<span class="pl-c2"></span>				{<span class="pl-c2"></span>				ct_Category 1 index 2 copy known<span class="pl-c2"></span>					{<span class="pl-c2"></span>					get<span class="pl-c2"></span>					2 index known<span class="pl-c2"></span>					exch pop exch pop<span class="pl-c2"></span>						{<span class="pl-c2"></span>						0 -1 true<span class="pl-c2"></span>						}<span class="pl-c2"></span>						{<span class="pl-c2"></span>						false<span class="pl-c2"></span>						}<span class="pl-c2"></span>					ifelse<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{ pop pop /findresource /undefined ct_raise }<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				} bind def<span class="pl-c2"></span>			/ct_resourcestatus /resourcestatus load def<span class="pl-c2"></span>			}<span class="pl-c2"></span>		ifelse<span class="pl-c2"></span>		/ct_CIDInit 2 dict<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			/ct_cidfont_stream_init<span class="pl-c2"></span>				{<span class="pl-c2"></span>					{<span class="pl-c2"></span>					dup (Binary) eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						pop<span class="pl-c2"></span>						null<span class="pl-c2"></span>						currentfile<span class="pl-c2"></span>						ct_Level2?<span class="pl-c2"></span>							{<span class="pl-c2"></span>								{ cid_BYTE_COUNT () /SubFileDecode filter }<span class="pl-c2"></span>							stopped<span class="pl-c2"></span>								{ pop pop pop }<span class="pl-c2"></span>							if<span class="pl-c2"></span>							}<span class="pl-c2"></span>						if<span class="pl-c2"></span>						/readstring load<span class="pl-c2"></span>						exit<span class="pl-c2"></span>						}<span class="pl-c2"></span>					if<span class="pl-c2"></span>					dup (Hex) eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						pop<span class="pl-c2"></span>						currentfile<span class="pl-c2"></span>						ct_Level2?<span class="pl-c2"></span>							{<span class="pl-c2"></span>								{ null exch /ASCIIHexDecode filter /readstring }<span class="pl-c2"></span>							stopped<span class="pl-c2"></span>								{ pop exch pop (&gt;) exch /readhexstring }<span class="pl-c2"></span>							if<span class="pl-c2"></span>							}<span class="pl-c2"></span>							{ (&gt;) exch /readhexstring }<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						load<span class="pl-c2"></span>						exit<span class="pl-c2"></span>						}<span class="pl-c2"></span>					if<span class="pl-c2"></span>					/StartData /typecheck ct_raise<span class="pl-c2"></span>					}<span class="pl-c2"></span>				loop<span class="pl-c2"></span>				cid_BYTE_COUNT ct_CID_STR_SIZE le<span class="pl-c2"></span>					{<span class="pl-c2"></span>					2 copy cid_BYTE_COUNT string exch exec<span class="pl-c2"></span>					pop<span class="pl-c2"></span>					1 array dup<span class="pl-c2"></span>					3 -1 roll<span class="pl-c2"></span>					0 exch put<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{<span class="pl-c2"></span>					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi<span class="pl-c2"></span>					dup array exch 2 sub 0 exch 1 exch<span class="pl-c2"></span>						{<span class="pl-c2"></span>						2 copy<span class="pl-c2"></span>						5 index<span class="pl-c2"></span>						ct_CID_STR_SIZE<span class="pl-c2"></span>						string<span class="pl-c2"></span>						6 index exec<span class="pl-c2"></span>						pop<span class="pl-c2"></span>						put<span class="pl-c2"></span>						pop<span class="pl-c2"></span>						}<span class="pl-c2"></span>					for<span class="pl-c2"></span>					2 index<span class="pl-c2"></span>					cid_BYTE_COUNT ct_CID_STR_SIZE mod string<span class="pl-c2"></span>					3 index exec<span class="pl-c2"></span>					pop<span class="pl-c2"></span>					1 index exch<span class="pl-c2"></span>					1 index length 1 sub<span class="pl-c2"></span>					exch put<span class="pl-c2"></span>					}<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				cid_CIDFONT exch /GlyphData exch put<span class="pl-c2"></span>				2 index null eq<span class="pl-c2"></span>					{<span class="pl-c2"></span>					pop pop pop<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{<span class="pl-c2"></span>					pop /readstring load<span class="pl-c2"></span>					1 string exch<span class="pl-c2"></span>						{<span class="pl-c2"></span>						3 copy exec<span class="pl-c2"></span>						pop<span class="pl-c2"></span>						dup length 0 eq<span class="pl-c2"></span>							{<span class="pl-c2"></span>							pop pop pop pop pop<span class="pl-c2"></span>							true exit<span class="pl-c2"></span>							}<span class="pl-c2"></span>						if<span class="pl-c2"></span>						4 index<span class="pl-c2"></span>						eq<span class="pl-c2"></span>							{<span class="pl-c2"></span>							pop pop pop pop<span class="pl-c2"></span>							false exit<span class="pl-c2"></span>							}<span class="pl-c2"></span>						if<span class="pl-c2"></span>						}<span class="pl-c2"></span>					loop<span class="pl-c2"></span>					pop<span class="pl-c2"></span>					}<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				} bind def<span class="pl-c2"></span>			/StartData<span class="pl-c2"></span>				{<span class="pl-c2"></span>				mark<span class="pl-c2"></span>					{<span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					dup /FDArray get 0 get /FontMatrix get<span class="pl-c2"></span>					0 get 0.001 eq<span class="pl-c2"></span>						{<span class="pl-c2"></span>						dup /CDevProc known not<span class="pl-c2"></span>							{<span class="pl-c2"></span>							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known<span class="pl-c2"></span>								{ get }<span class="pl-c2"></span>								{<span class="pl-c2"></span>								pop pop<span class="pl-c2"></span>								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }<span class="pl-c2"></span>								}<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							def<span class="pl-c2"></span>							}<span class="pl-c2"></span>						if<span class="pl-c2"></span>						}<span class="pl-c2"></span>						{<span class="pl-c2"></span>						 /CDevProc<span class="pl-c2"></span>							 {<span class="pl-c2"></span>							 pop pop pop pop pop<span class="pl-c2"></span>							 0<span class="pl-c2"></span>							 1 cid_temp /cid_CIDFONT get<span class="pl-c2"></span>							 /FDArray get 0 get<span class="pl-c2"></span>							 /FontMatrix get 0 get div<span class="pl-c2"></span>							 7 index 2 div<span class="pl-c2"></span>							 1 index 0.88 mul<span class="pl-c2"></span>							 } def<span class="pl-c2"></span>						}<span class="pl-c2"></span>					ifelse<span class="pl-c2"></span>					/cid_temp 15 dict def<span class="pl-c2"></span>					cid_temp<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						/cid_CIDFONT exch def<span class="pl-c2"></span>						3 copy pop<span class="pl-c2"></span>						dup /cid_BYTE_COUNT exch def 0 gt<span class="pl-c2"></span>							{<span class="pl-c2"></span>							ct_cidfont_stream_init<span class="pl-c2"></span>							FDArray<span class="pl-c2"></span>								{<span class="pl-c2"></span>								/Private get<span class="pl-c2"></span>								dup /SubrMapOffset known<span class="pl-c2"></span>									{<span class="pl-c2"></span>									begin<span class="pl-c2"></span>									/Subrs SubrCount array def<span class="pl-c2"></span>									Subrs<span class="pl-c2"></span>									SubrMapOffset<span class="pl-c2"></span>									SubrCount<span class="pl-c2"></span>									SDBytes<span class="pl-c2"></span>									ct_Level2?<span class="pl-c2"></span>										{<span class="pl-c2"></span>										currentdict dup /SubrMapOffset undef<span class="pl-c2"></span>										dup /SubrCount undef<span class="pl-c2"></span>										/SDBytes undef<span class="pl-c2"></span>										}<span class="pl-c2"></span>									if<span class="pl-c2"></span>									end<span class="pl-c2"></span>									/cid_SD_BYTES exch def<span class="pl-c2"></span>									/cid_SUBR_COUNT exch def<span class="pl-c2"></span>									/cid_SUBR_MAP_OFFSET exch def<span class="pl-c2"></span>									/cid_SUBRS exch def<span class="pl-c2"></span>									cid_SUBR_COUNT 0 gt<span class="pl-c2"></span>										{<span class="pl-c2"></span>										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval<span class="pl-c2"></span>										0 cid_SD_BYTES ct_cvnsi<span class="pl-c2"></span>										0 1 cid_SUBR_COUNT 1 sub<span class="pl-c2"></span>											{<span class="pl-c2"></span>											exch 1 index<span class="pl-c2"></span>											1 add<span class="pl-c2"></span>											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add<span class="pl-c2"></span>											GlyphData exch cid_SD_BYTES ct_GetInterval<span class="pl-c2"></span>											0 cid_SD_BYTES ct_cvnsi<span class="pl-c2"></span>											cid_SUBRS 4 2 roll<span class="pl-c2"></span>											GlyphData exch<span class="pl-c2"></span>											4 index<span class="pl-c2"></span>											1 index<span class="pl-c2"></span>											sub<span class="pl-c2"></span>											ct_GetInterval<span class="pl-c2"></span>											dup length string copy put<span class="pl-c2"></span>											}<span class="pl-c2"></span>										for<span class="pl-c2"></span>										pop<span class="pl-c2"></span>										}<span class="pl-c2"></span>									if<span class="pl-c2"></span>									}<span class="pl-c2"></span>									{ pop }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								}<span class="pl-c2"></span>							forall<span class="pl-c2"></span>							}<span class="pl-c2"></span>						if<span class="pl-c2"></span>						cleartomark pop pop<span class="pl-c2"></span>						end<span class="pl-c2"></span>					CIDFontName currentdict /CIDFont defineresource pop<span class="pl-c2"></span>					end end<span class="pl-c2"></span>					}<span class="pl-c2"></span>				stopped<span class="pl-c2"></span>					{ cleartomark /StartData ct_reraise }<span class="pl-c2"></span>				if<span class="pl-c2"></span>				} bind def<span class="pl-c2"></span>			currentdict<span class="pl-c2"></span>			end def<span class="pl-c2"></span>		/ct_saveCIDInit<span class="pl-c2"></span>			{<span class="pl-c2"></span>			/CIDInit /ProcSet ct_resourcestatus<span class="pl-c2"></span>				{ true }<span class="pl-c2"></span>				{ /CIDInitC /ProcSet ct_resourcestatus }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>				{<span class="pl-c2"></span>				pop pop<span class="pl-c2"></span>				/CIDInit /ProcSet findresource<span class="pl-c2"></span>				ct_UseNativeCapability?<span class="pl-c2"></span>					{ pop null }<span class="pl-c2"></span>					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			ct_Vars exch /ct_oldCIDInit exch put<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		/ct_restoreCIDInit<span class="pl-c2"></span>			{<span class="pl-c2"></span>			ct_Vars /ct_oldCIDInit get dup null ne<span class="pl-c2"></span>				{ /CIDInit exch /ProcSet defineresource pop }<span class="pl-c2"></span>				{ pop }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		/ct_BuildCharSetUp<span class="pl-c2"></span>			{<span class="pl-c2"></span>			1 index<span class="pl-c2"></span>				begin<span class="pl-c2"></span>				CIDFont<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					Adobe_CoolType_Utility /ct_BuildCharDict get<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						/ct_dfCharCode exch def<span class="pl-c2"></span>						/ct_dfDict exch def<span class="pl-c2"></span>						CIDFirstByte ct_dfCharCode add<span class="pl-c2"></span>						dup CIDCount ge<span class="pl-c2"></span>							{ pop 0 }<span class="pl-c2"></span>						if<span class="pl-c2"></span>						/cid exch def<span class="pl-c2"></span>							{<span class="pl-c2"></span>							GlyphDirectory cid 2 copy known<span class="pl-c2"></span>								{ get }<span class="pl-c2"></span>								{ pop pop nullstring }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							dup length FDBytes sub 0 gt<span class="pl-c2"></span>								{<span class="pl-c2"></span>								dup<span class="pl-c2"></span>								FDBytes 0 ne<span class="pl-c2"></span>									{ 0 FDBytes ct_cvnsi }<span class="pl-c2"></span>									{ pop 0 }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								/fdIndex exch def<span class="pl-c2"></span>								dup length FDBytes sub FDBytes exch getinterval<span class="pl-c2"></span>								/charstring exch def<span class="pl-c2"></span>								exit<span class="pl-c2"></span>								}<span class="pl-c2"></span>								{<span class="pl-c2"></span>								pop<span class="pl-c2"></span>								cid 0 eq<span class="pl-c2"></span>									{ /charstring nullstring def exit }<span class="pl-c2"></span>								if<span class="pl-c2"></span>								/cid 0 def<span class="pl-c2"></span>								}<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							}<span class="pl-c2"></span>						loop<span class="pl-c2"></span>			} def<span class="pl-c2"></span>		/ct_SetCacheDevice<span class="pl-c2"></span>			{<span class="pl-c2"></span>			0 0 moveto<span class="pl-c2"></span>			dup stringwidth<span class="pl-c2"></span>			3 -1 roll<span class="pl-c2"></span>			true charpath<span class="pl-c2"></span>			pathbbox<span class="pl-c2"></span>			0 -1000<span class="pl-c2"></span>			7 index 2 div 880<span class="pl-c2"></span>			setcachedevice2<span class="pl-c2"></span>			0 0 moveto<span class="pl-c2"></span>			} def<span class="pl-c2"></span>		/ct_CloneSetCacheProc<span class="pl-c2"></span>			{<span class="pl-c2"></span>			1 eq<span class="pl-c2"></span>				{<span class="pl-c2"></span>				stringwidth<span class="pl-c2"></span>				pop -2 div -880<span class="pl-c2"></span>				0 -1000 setcharwidth<span class="pl-c2"></span>				moveto<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{<span class="pl-c2"></span>				usewidths?<span class="pl-c2"></span>					{<span class="pl-c2"></span>					currentfont /Widths get cid<span class="pl-c2"></span>					2 copy known<span class="pl-c2"></span>						{ get exch pop aload pop }<span class="pl-c2"></span>						{ pop pop stringwidth }<span class="pl-c2"></span>					ifelse<span class="pl-c2"></span>					}<span class="pl-c2"></span>					{ stringwidth }<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				setcharwidth<span class="pl-c2"></span>				0 0 moveto<span class="pl-c2"></span>				}<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			} def<span class="pl-c2"></span>		/ct_Type3ShowCharString<span class="pl-c2"></span>			{<span class="pl-c2"></span>			ct_FDDict fdIndex 2 copy known<span class="pl-c2"></span>				{ get }<span class="pl-c2"></span>				{<span class="pl-c2"></span>				currentglobal 3 1 roll<span class="pl-c2"></span>				1 index gcheck setglobal<span class="pl-c2"></span>				ct_Type1FontTemplate dup maxlength dict copy<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					FDArray fdIndex get<span class="pl-c2"></span>					dup /FontMatrix 2 copy known<span class="pl-c2"></span>						{ get }<span class="pl-c2"></span>						{ pop pop ct_defaultFontMtx }<span class="pl-c2"></span>					ifelse<span class="pl-c2"></span>					/FontMatrix exch dup length array copy def<span class="pl-c2"></span>					/Private get<span class="pl-c2"></span>					/Private exch def<span class="pl-c2"></span>					/Widths rootfont /Widths get def<span class="pl-c2"></span>					/CharStrings 1 dict dup /.notdef<span class="pl-c2"></span>						&lt;d841272cf18f54fc13&gt; dup length string copy put def<span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					end<span class="pl-c2"></span>				/ct_Type1Font exch definefont<span class="pl-c2"></span>				dup 5 1 roll put<span class="pl-c2"></span>				setglobal<span class="pl-c2"></span>				}<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			dup /CharStrings get 1 index /Encoding get<span class="pl-c2"></span>			ct_dfCharCode get charstring put<span class="pl-c2"></span>			rootfont /WMode 2 copy known<span class="pl-c2"></span>				{ get }<span class="pl-c2"></span>				{ pop pop 0 }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			exch<span class="pl-c2"></span>			1000 scalefont setfont<span class="pl-c2"></span>			ct_str1 0 ct_dfCharCode put<span class="pl-c2"></span>			ct_str1 exch ct_dfSetCacheProc<span class="pl-c2"></span>			ct_SyntheticBold<span class="pl-c2"></span>				{<span class="pl-c2"></span>				currentpoint<span class="pl-c2"></span>				ct_str1 show<span class="pl-c2"></span>				newpath<span class="pl-c2"></span>				moveto<span class="pl-c2"></span>				ct_str1 true charpath<span class="pl-c2"></span>				ct_StrokeWidth setlinewidth<span class="pl-c2"></span>				stroke<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ ct_str1 show }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			} def<span class="pl-c2"></span>		/ct_Type4ShowCharString<span class="pl-c2"></span>			{<span class="pl-c2"></span>			ct_dfDict ct_dfCharCode charstring<span class="pl-c2"></span>			FDArray fdIndex get<span class="pl-c2"></span>			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not<span class="pl-c2"></span>				{ ct_1000Mtx matrix concatmatrix concat }<span class="pl-c2"></span>				{ pop }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			/Private get<span class="pl-c2"></span>			Adobe_CoolType_Utility /ct_Level2? get not<span class="pl-c2"></span>				{<span class="pl-c2"></span>				ct_dfDict /Private<span class="pl-c2"></span>				3 -1 roll<span class="pl-c2"></span>					{ put }<span class="pl-c2"></span>				1183615869 internaldict /superexec get exec<span class="pl-c2"></span>				}<span class="pl-c2"></span>			if<span class="pl-c2"></span>			1183615869 internaldict<span class="pl-c2"></span>			Adobe_CoolType_Utility /ct_Level2? get<span class="pl-c2"></span>				{ 1 index }<span class="pl-c2"></span>				{ 3 index /Private get mark 6 1 roll }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			dup /RunInt known<span class="pl-c2"></span>				{ /RunInt get }<span class="pl-c2"></span>				{ pop /CCRun }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			get exec<span class="pl-c2"></span>			Adobe_CoolType_Utility /ct_Level2? get not<span class="pl-c2"></span>				{ cleartomark }<span class="pl-c2"></span>			if<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		/ct_BuildCharIncremental<span class="pl-c2"></span>			{<span class="pl-c2"></span>				{<span class="pl-c2"></span>				Adobe_CoolType_Utility /ct_MakeOCF get begin<span class="pl-c2"></span>				ct_BuildCharSetUp<span class="pl-c2"></span>				ct_ShowCharString<span class="pl-c2"></span>				}<span class="pl-c2"></span>			stopped<span class="pl-c2"></span>				{ stop }<span class="pl-c2"></span>			if<span class="pl-c2"></span>			end<span class="pl-c2"></span>			end<span class="pl-c2"></span>			end<span class="pl-c2"></span>			end<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		/BaseFontNameStr (BF00) def<span class="pl-c2"></span>		/ct_Type1FontTemplate 14 dict<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			/FontType 1 def<span class="pl-c2"></span>			/FontMatrix  [0.001 0 0 0.001 0 0] def<span class="pl-c2"></span>			/FontBBox  [-250 -250 1250 1250] def<span class="pl-c2"></span>			/Encoding ct_cHexEncoding def<span class="pl-c2"></span>			/PaintType 0 def<span class="pl-c2"></span>			currentdict<span class="pl-c2"></span>			end def<span class="pl-c2"></span>		/BaseFontTemplate 11 dict<span class="pl-c2"></span>			begin<span class="pl-c2"></span>			/FontMatrix  [0.001 0 0 0.001 0 0] def<span class="pl-c2"></span>			/FontBBox  [-250 -250 1250 1250] def<span class="pl-c2"></span>			/Encoding ct_cHexEncoding def<span class="pl-c2"></span>			/BuildChar /ct_BuildCharIncremental load def<span class="pl-c2"></span>			ct_Clone?<span class="pl-c2"></span>				{<span class="pl-c2"></span>				/FontType 3 def<span class="pl-c2"></span>				/ct_ShowCharString /ct_Type3ShowCharString load def<span class="pl-c2"></span>				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def<span class="pl-c2"></span>				/ct_SyntheticBold false def<span class="pl-c2"></span>				/ct_StrokeWidth 1 def<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{<span class="pl-c2"></span>				/FontType 4 def<span class="pl-c2"></span>				/Private 1 dict dup /lenIV 4 put def<span class="pl-c2"></span>				/CharStrings 1 dict dup /.notdef &lt;d841272cf18f54fc13&gt; put def<span class="pl-c2"></span>				/PaintType 0 def<span class="pl-c2"></span>				/ct_ShowCharString /ct_Type4ShowCharString load def<span class="pl-c2"></span>				}<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			/ct_str1 1 string def<span class="pl-c2"></span>			currentdict<span class="pl-c2"></span>			end def<span class="pl-c2"></span>		/BaseFontDictSize BaseFontTemplate length 5 add def<span class="pl-c2"></span>		/ct_matrixeq<span class="pl-c2"></span>			{<span class="pl-c2"></span>			true 0 1 5<span class="pl-c2"></span>				{<span class="pl-c2"></span>				dup 4 index exch get exch 3 index exch get eq and<span class="pl-c2"></span>				dup not<span class="pl-c2"></span>					{ exit }<span class="pl-c2"></span>				if<span class="pl-c2"></span>				}<span class="pl-c2"></span>			for<span class="pl-c2"></span>			exch pop exch pop<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		/ct_makeocf<span class="pl-c2"></span>			{<span class="pl-c2"></span>			15 dict<span class="pl-c2"></span>				begin<span class="pl-c2"></span>				exch /WMode exch def<span class="pl-c2"></span>				exch /FontName exch def<span class="pl-c2"></span>				/FontType 0 def<span class="pl-c2"></span>				/FMapType 2 def<span class="pl-c2"></span>			dup /FontMatrix known<span class="pl-c2"></span>				{ dup /FontMatrix get /FontMatrix exch def }<span class="pl-c2"></span>				{ /FontMatrix matrix def }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>				/bfCount 1 index /CIDCount get 256 idiv 1 add<span class="pl-c2"></span>					dup 256 gt { pop 256} if def<span class="pl-c2"></span>				/Encoding<span class="pl-c2"></span>					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for<span class="pl-c2"></span>					bfCount 1 255 { 2 copy bfCount put pop } for<span class="pl-c2"></span>					def<span class="pl-c2"></span>				/FDepVector bfCount dup 256 lt { 1 add } if array def<span class="pl-c2"></span>				BaseFontTemplate BaseFontDictSize dict copy<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					/CIDFont exch def<span class="pl-c2"></span>					CIDFont /FontBBox known<span class="pl-c2"></span>						{ CIDFont /FontBBox get /FontBBox exch def }<span class="pl-c2"></span>					if<span class="pl-c2"></span>					CIDFont /CDevProc known<span class="pl-c2"></span>						{ CIDFont /CDevProc get /CDevProc exch def }<span class="pl-c2"></span>					if<span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					end<span class="pl-c2"></span>				BaseFontNameStr 3 (0) putinterval<span class="pl-c2"></span>				0 1 bfCount dup 256 eq { 1 sub } if<span class="pl-c2"></span>					{<span class="pl-c2"></span>					FDepVector exch<span class="pl-c2"></span>					2 index BaseFontDictSize dict copy<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						dup /CIDFirstByte exch 256 mul def<span class="pl-c2"></span>						FontType 3 eq<span class="pl-c2"></span>							{ /ct_FDDict 2 dict def }<span class="pl-c2"></span>						if<span class="pl-c2"></span>						currentdict<span class="pl-c2"></span>						end<span class="pl-c2"></span>					1 index  16<span class="pl-c2"></span>					BaseFontNameStr  2 2 getinterval cvrs pop<span class="pl-c2"></span>					BaseFontNameStr exch definefont<span class="pl-c2"></span>					put<span class="pl-c2"></span>					}<span class="pl-c2"></span>				for<span class="pl-c2"></span>				ct_Clone?<span class="pl-c2"></span>					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }<span class="pl-c2"></span>				if<span class="pl-c2"></span>				FontName<span class="pl-c2"></span>				currentdict<span class="pl-c2"></span>				end<span class="pl-c2"></span>			definefont<span class="pl-c2"></span>			ct_Clone?<span class="pl-c2"></span>				{<span class="pl-c2"></span>				gsave<span class="pl-c2"></span>				dup 1000 scalefont setfont<span class="pl-c2"></span>				ct_BuildCharDict<span class="pl-c2"></span>					begin<span class="pl-c2"></span>					/usewidths? false def<span class="pl-c2"></span>					currentfont /Widths get<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						exch /CIDFont get /GlyphDirectory get<span class="pl-c2"></span>							{<span class="pl-c2"></span>							pop<span class="pl-c2"></span>							dup charcode exch 1 index 0 2 index 256 idiv put<span class="pl-c2"></span>							1 index exch 1 exch 256 mod put<span class="pl-c2"></span>							stringwidth 2 array astore def<span class="pl-c2"></span>							}<span class="pl-c2"></span>						forall<span class="pl-c2"></span>						end<span class="pl-c2"></span>					/usewidths? true def<span class="pl-c2"></span>					end<span class="pl-c2"></span>				grestore<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{ exch pop }<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		/ct_ComposeFont<span class="pl-c2"></span>			{<span class="pl-c2"></span>			ct_UseNativeCapability?<span class="pl-c2"></span>				{<span class="pl-c2"></span>				2 index /CMap ct_resourcestatus<span class="pl-c2"></span>					{ pop pop exch pop }<span class="pl-c2"></span>					{<span class="pl-c2"></span>					/CIDInit /ProcSet findresource<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						12 dict<span class="pl-c2"></span>							begin<span class="pl-c2"></span>							begincmap<span class="pl-c2"></span>							/CMapName 3 index def<span class="pl-c2"></span>							/CMapVersion 1.000 def<span class="pl-c2"></span>							/CMapType 1 def<span class="pl-c2"></span>							exch /WMode exch def<span class="pl-c2"></span>							/CIDSystemInfo 3 dict dup<span class="pl-c2"></span>								begin<span class="pl-c2"></span>								/Registry (Adobe) def<span class="pl-c2"></span>								/Ordering<span class="pl-c2"></span>								CMapName ct_mkocfStr100 cvs<span class="pl-c2"></span>								(Adobe-) search<span class="pl-c2"></span>									{<span class="pl-c2"></span>									pop pop<span class="pl-c2"></span>									(-) search<span class="pl-c2"></span>										{<span class="pl-c2"></span>										dup length string copy<span class="pl-c2"></span>										exch pop exch pop<span class="pl-c2"></span>										}<span class="pl-c2"></span>										{ pop (Identity)}<span class="pl-c2"></span>									ifelse<span class="pl-c2"></span>									}<span class="pl-c2"></span>									{ pop  (Identity)  }<span class="pl-c2"></span>								ifelse<span class="pl-c2"></span>								def<span class="pl-c2"></span>								/Supplement 0 def<span class="pl-c2"></span>								end def<span class="pl-c2"></span>							1 begincodespacerange<span class="pl-c2"></span>							&lt;0000&gt; &lt;FFFF&gt;<span class="pl-c2"></span>							endcodespacerange<span class="pl-c2"></span>							1 begincidrange<span class="pl-c2"></span>							&lt;0000&gt; &lt;FFFF&gt; 0<span class="pl-c2"></span>							endcidrange<span class="pl-c2"></span>							endcmap<span class="pl-c2"></span>							CMapName currentdict /CMap defineresource pop<span class="pl-c2"></span>							end<span class="pl-c2"></span>						end<span class="pl-c2"></span>					}<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				composefont<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{<span class="pl-c2"></span>				3 2 roll pop<span class="pl-c2"></span>				0 get /CIDFont findresource<span class="pl-c2"></span>				ct_makeocf<span class="pl-c2"></span>				}<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		/ct_MakeIdentity<span class="pl-c2"></span>			{<span class="pl-c2"></span>			ct_UseNativeCapability?<span class="pl-c2"></span>				{<span class="pl-c2"></span>				1 index /CMap ct_resourcestatus<span class="pl-c2"></span>					{ pop pop }<span class="pl-c2"></span>					{<span class="pl-c2"></span>					/CIDInit /ProcSet findresource begin<span class="pl-c2"></span>					12 dict begin<span class="pl-c2"></span>					begincmap<span class="pl-c2"></span>					/CMapName 2 index def<span class="pl-c2"></span>					/CMapVersion 1.000 def<span class="pl-c2"></span>					/CMapType 1 def<span class="pl-c2"></span>					/CIDSystemInfo 3 dict dup<span class="pl-c2"></span>						begin<span class="pl-c2"></span>						/Registry (Adobe) def<span class="pl-c2"></span>						/Ordering<span class="pl-c2"></span>						CMapName ct_mkocfStr100 cvs<span class="pl-c2"></span>						(Adobe-) search<span class="pl-c2"></span>							{<span class="pl-c2"></span>							pop pop<span class="pl-c2"></span>							(-) search<span class="pl-c2"></span>								{ dup length string copy exch pop exch pop }<span class="pl-c2"></span>								{ pop (Identity) }<span class="pl-c2"></span>							ifelse<span class="pl-c2"></span>							}<span class="pl-c2"></span>							{ pop (Identity) }<span class="pl-c2"></span>						ifelse<span class="pl-c2"></span>						def<span class="pl-c2"></span>						/Supplement 0 def<span class="pl-c2"></span>						end def<span class="pl-c2"></span>					1 begincodespacerange<span class="pl-c2"></span>					&lt;0000&gt; &lt;FFFF&gt;<span class="pl-c2"></span>					endcodespacerange<span class="pl-c2"></span>					1 begincidrange<span class="pl-c2"></span>					&lt;0000&gt; &lt;FFFF&gt; 0<span class="pl-c2"></span>					endcidrange<span class="pl-c2"></span>					endcmap<span class="pl-c2"></span>					CMapName currentdict /CMap defineresource pop<span class="pl-c2"></span>					end<span class="pl-c2"></span>					end<span class="pl-c2"></span>					}<span class="pl-c2"></span>				ifelse<span class="pl-c2"></span>				composefont<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{<span class="pl-c2"></span>				exch pop<span class="pl-c2"></span>				0 get /CIDFont findresource<span class="pl-c2"></span>				ct_makeocf<span class="pl-c2"></span>				}<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			} bind def<span class="pl-c2"></span>		currentdict readonly pop<span class="pl-c2"></span>		end<span class="pl-c2"></span>	end<span class="pl-c2"></span>%%EndResource<span class="pl-c2"></span>%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0<span class="pl-c2"></span>%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.<span class="pl-c2"></span>%%Version: 1.0 0<span class="pl-c2"></span>userdict /ct_T42Dict 15 dict put<span class="pl-c2"></span>ct_T42Dict begin<span class="pl-c2"></span>/Is2015?<span class="pl-c2"></span>{<span class="pl-c2"></span>  version<span class="pl-c2"></span>  cvi<span class="pl-c2"></span>  2015<span class="pl-c2"></span>  ge<span class="pl-c2"></span>} bind def<span class="pl-c2"></span>/AllocGlyphStorage<span class="pl-c2"></span>{<span class="pl-c2"></span>  Is2015?<span class="pl-c2"></span>  {	<span class="pl-c2"></span>		pop<span class="pl-c2"></span>  } <span class="pl-c2"></span>  { <span class="pl-c2"></span>		{string} forall<span class="pl-c2"></span>  } ifelse<span class="pl-c2"></span>} bind def<span class="pl-c2"></span>/Type42DictBegin<span class="pl-c2"></span>{<span class="pl-c2"></span>	25 dict begin<span class="pl-c2"></span>  /FontName exch def<span class="pl-c2"></span>  /CharStrings 256 dict <span class="pl-c2"></span>	begin<span class="pl-c2"></span>		  /.notdef 0 def<span class="pl-c2"></span>		  currentdict <span class="pl-c2"></span>	end def<span class="pl-c2"></span>  /Encoding exch def<span class="pl-c2"></span>  /PaintType 0 def<span class="pl-c2"></span>  /FontType 42 def<span class="pl-c2"></span>  /FontMatrix [1 0 0 1 0 0] def<span class="pl-c2"></span>  4 array  astore cvx /FontBBox exch def<span class="pl-c2"></span>  /sfnts<span class="pl-c2"></span>} bind def<span class="pl-c2"></span>/Type42DictEnd  <span class="pl-c2"></span>{<span class="pl-c2"></span>	 currentdict dup /FontName get exch definefont end<span class="pl-c2"></span>	ct_T42Dict exch<span class="pl-c2"></span>	dup /FontName get exch put<span class="pl-c2"></span>} bind def<span class="pl-c2"></span>/RD {string currentfile exch readstring pop} executeonly def<span class="pl-c2"></span>/PrepFor2015<span class="pl-c2"></span>{<span class="pl-c2"></span>	Is2015?<span class="pl-c2"></span>	{		  <span class="pl-c2"></span>		 /GlyphDirectory <span class="pl-c2"></span>		 16<span class="pl-c2"></span>		 dict def<span class="pl-c2"></span>		 sfnts 0 get<span class="pl-c2"></span>		 dup<span class="pl-c2"></span>		 2 index<span class="pl-c2"></span>		 (glyx)<span class="pl-c2"></span>		 putinterval<span class="pl-c2"></span>		 2 index  <span class="pl-c2"></span>		 (locx)<span class="pl-c2"></span>		 putinterval<span class="pl-c2"></span>		 pop<span class="pl-c2"></span>		 pop<span class="pl-c2"></span>	}<span class="pl-c2"></span>	{<span class="pl-c2"></span>		 pop<span class="pl-c2"></span>		 pop<span class="pl-c2"></span>	} ifelse			<span class="pl-c2"></span>} bind def<span class="pl-c2"></span>/AddT42Char<span class="pl-c2"></span>{<span class="pl-c2"></span>	Is2015?<span class="pl-c2"></span>	{<span class="pl-c2"></span>		/GlyphDirectory get <span class="pl-c2"></span>		begin<span class="pl-c2"></span>		def<span class="pl-c2"></span>		end<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		pop<span class="pl-c2"></span>	}<span class="pl-c2"></span>	{<span class="pl-c2"></span>		/sfnts get<span class="pl-c2"></span>		4 index<span class="pl-c2"></span>		get<span class="pl-c2"></span>		3 index<span class="pl-c2"></span>	  2 index<span class="pl-c2"></span>		putinterval<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		pop<span class="pl-c2"></span>	} ifelse<span class="pl-c2"></span>} bind def<span class="pl-c2"></span>/T0AddT42Mtx2<span class="pl-c2"></span>{<span class="pl-c2"></span>	/CIDFont findresource /Metrics2 get begin def end<span class="pl-c2"></span>}bind def<span class="pl-c2"></span>end<span class="pl-c2"></span>%%EndResource<span class="pl-c2"></span>Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end<span class="pl-c2"></span>%%BeginResource: procset Adobe_AGM_Image 1.0 0<span class="pl-c2"></span>%%Version: 1.0 0<span class="pl-c2"></span>%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.<span class="pl-c2"></span>systemdict /setpacking known<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentpacking<span class="pl-c2"></span>	true setpacking<span class="pl-c2"></span>} if<span class="pl-c2"></span>userdict /Adobe_AGM_Image 75 dict dup begin put<span class="pl-c2"></span>/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def<span class="pl-c2"></span>/nd{<span class="pl-c2"></span>	null def<span class="pl-c2"></span>}bind def<span class="pl-c2"></span>/AGMIMG_&amp;image nd<span class="pl-c2"></span>/AGMIMG_&amp;colorimage nd<span class="pl-c2"></span>/AGMIMG_&amp;imagemask nd<span class="pl-c2"></span>/AGMIMG_mbuf () def<span class="pl-c2"></span>/AGMIMG_ybuf () def<span class="pl-c2"></span>/AGMIMG_kbuf () def<span class="pl-c2"></span>/AGMIMG_c 0 def<span class="pl-c2"></span>/AGMIMG_m 0 def<span class="pl-c2"></span>/AGMIMG_y 0 def<span class="pl-c2"></span>/AGMIMG_k 0 def<span class="pl-c2"></span>/AGMIMG_tmp nd<span class="pl-c2"></span>/AGMIMG_imagestring0 nd<span class="pl-c2"></span>/AGMIMG_imagestring1 nd<span class="pl-c2"></span>/AGMIMG_imagestring2 nd<span class="pl-c2"></span>/AGMIMG_imagestring3 nd<span class="pl-c2"></span>/AGMIMG_imagestring4 nd<span class="pl-c2"></span>/AGMIMG_imagestring5 nd<span class="pl-c2"></span>/AGMIMG_cnt nd<span class="pl-c2"></span>/AGMIMG_fsave nd<span class="pl-c2"></span>/AGMIMG_colorAry nd<span class="pl-c2"></span>/AGMIMG_override nd<span class="pl-c2"></span>/AGMIMG_name nd<span class="pl-c2"></span>/AGMIMG_maskSource nd<span class="pl-c2"></span>/AGMIMG_flushfilters nd<span class="pl-c2"></span>/invert_image_samples nd<span class="pl-c2"></span>/knockout_image_samples	nd<span class="pl-c2"></span>/img nd<span class="pl-c2"></span>/sepimg nd<span class="pl-c2"></span>/devnimg nd<span class="pl-c2"></span>/idximg nd<span class="pl-c2"></span>/doc_setup<span class="pl-c2"></span>{ <span class="pl-c2"></span>	Adobe_AGM_Core begin<span class="pl-c2"></span>	Adobe_AGM_Image begin<span class="pl-c2"></span>	/AGMIMG_&amp;image systemdict/image get def<span class="pl-c2"></span>	/AGMIMG_&amp;imagemask systemdict/imagemask get def<span class="pl-c2"></span>	/colorimage where{<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		/AGMIMG_&amp;colorimage /colorimage ldf<span class="pl-c2"></span>	}if<span class="pl-c2"></span>	end<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/page_setup<span class="pl-c2"></span>{<span class="pl-c2"></span>	Adobe_AGM_Image begin<span class="pl-c2"></span>	/AGMIMG_ccimage_exists {/customcolorimage where <span class="pl-c2"></span>		{<span class="pl-c2"></span>			pop<span class="pl-c2"></span>			/Adobe_AGM_OnHost_Seps where<span class="pl-c2"></span>			{<span class="pl-c2"></span>			pop false<span class="pl-c2"></span>			}{<span class="pl-c2"></span>			/Adobe_AGM_InRip_Seps where<span class="pl-c2"></span>				{<span class="pl-c2"></span>				pop false<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					true<span class="pl-c2"></span>				 }ifelse<span class="pl-c2"></span>			 }ifelse<span class="pl-c2"></span>			}{<span class="pl-c2"></span>			false<span class="pl-c2"></span>		}ifelse <span class="pl-c2"></span>	}bdf<span class="pl-c2"></span>	level2{<span class="pl-c2"></span>		/invert_image_samples<span class="pl-c2"></span>		{<span class="pl-c2"></span>			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf<span class="pl-c2"></span>			/Decode [ Decode 1 get Decode 0 get] def<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/knockout_image_samples<span class="pl-c2"></span>		{<span class="pl-c2"></span>			Operator/imagemask ne{<span class="pl-c2"></span>				/Decode [1 1] def<span class="pl-c2"></span>			}if<span class="pl-c2"></span>		}def<span class="pl-c2"></span>	}{	<span class="pl-c2"></span>		/invert_image_samples<span class="pl-c2"></span>		{<span class="pl-c2"></span>			{1 exch sub} currenttransfer addprocs settransfer<span class="pl-c2"></span>		}def<span class="pl-c2"></span>		/knockout_image_samples<span class="pl-c2"></span>		{<span class="pl-c2"></span>			{ pop 1 } currenttransfer addprocs settransfer<span class="pl-c2"></span>		}def<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	/img /imageormask ldf<span class="pl-c2"></span>	/sepimg /sep_imageormask ldf<span class="pl-c2"></span>	/devnimg /devn_imageormask ldf<span class="pl-c2"></span>	/idximg /indexed_imageormask ldf<span class="pl-c2"></span>	/_ctype 7 def<span class="pl-c2"></span>	currentdict{<span class="pl-c2"></span>		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{<span class="pl-c2"></span>			bind<span class="pl-c2"></span>		}if<span class="pl-c2"></span>		def<span class="pl-c2"></span>	}forall<span class="pl-c2"></span>}def<span class="pl-c2"></span>/page_trailer<span class="pl-c2"></span>{<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/doc_trailer<span class="pl-c2"></span>{<span class="pl-c2"></span>}def<span class="pl-c2"></span>/AGMIMG_flushfilters<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup type /arraytype ne<span class="pl-c2"></span>		{1 array astore}if<span class="pl-c2"></span>	aload length<span class="pl-c2"></span>		{<span class="pl-c2"></span>		dup type /filetype eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>			dup status 1 index currentfile ne and<span class="pl-c2"></span>				{dup flushfile closefile}<span class="pl-c2"></span>				{pop}<span class="pl-c2"></span>			ifelse<span class="pl-c2"></span>			}{pop}ifelse<span class="pl-c2"></span>		} repeat<span class="pl-c2"></span>}def<span class="pl-c2"></span>/imageormask_sys<span class="pl-c2"></span>{<span class="pl-c2"></span>	begin<span class="pl-c2"></span>		save mark<span class="pl-c2"></span>		level2{<span class="pl-c2"></span>			currentdict<span class="pl-c2"></span>			Operator /imagemask eq{<span class="pl-c2"></span>				AGMIMG_&amp;imagemask<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				use_mask {<span class="pl-c2"></span>					level3 {process_mask_L3 AGMIMG_&amp;image}{masked_image_simulation}ifelse<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					AGMIMG_&amp;image<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			Width Height<span class="pl-c2"></span>			Operator /imagemask eq{<span class="pl-c2"></span>				Decode 0 get 1 eq Decode 1 get 0 eq	and<span class="pl-c2"></span>				ImageMatrix /DataSource load<span class="pl-c2"></span>				AGMIMG_&amp;imagemask<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				BitsPerComponent ImageMatrix /DataSource load<span class="pl-c2"></span>				AGMIMG_&amp;image<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if<span class="pl-c2"></span>		cleartomark restore<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/overprint_plate<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentoverprint {<span class="pl-c2"></span>		0 get dup type /nametype eq {<span class="pl-c2"></span>			dup /DeviceGray eq{<span class="pl-c2"></span>				pop AGMCORE_black_plate not<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				/DeviceCMYK eq{<span class="pl-c2"></span>					AGMCORE_is_cmyk_sep not<span class="pl-c2"></span>				}if<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			false exch<span class="pl-c2"></span>			{<span class="pl-c2"></span>				 AGMOHS_sepink eq or<span class="pl-c2"></span>			} forall<span class="pl-c2"></span>			not<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		pop false<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/process_mask_L3<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup begin<span class="pl-c2"></span>	/ImageType 1 def<span class="pl-c2"></span>	end<span class="pl-c2"></span>	4 dict begin<span class="pl-c2"></span>		/DataDict exch def<span class="pl-c2"></span>		/ImageType 3 def<span class="pl-c2"></span>		/InterleaveType 3 def<span class="pl-c2"></span>		/MaskDict 9 dict begin<span class="pl-c2"></span>			/ImageType 1 def<span class="pl-c2"></span>			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def<span class="pl-c2"></span>			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def<span class="pl-c2"></span>			/ImageMatrix [Width 0 0 Height neg 0 Height] def<span class="pl-c2"></span>			/NComponents 1 def<span class="pl-c2"></span>			/BitsPerComponent 1 def<span class="pl-c2"></span>			/Decode [0 1] def<span class="pl-c2"></span>			/DataSource AGMIMG_maskSource def<span class="pl-c2"></span>		currentdict end def<span class="pl-c2"></span>	currentdict end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/use_mask<span class="pl-c2"></span>{<span class="pl-c2"></span>	dup type /dicttype eq<span class="pl-c2"></span>	{<span class="pl-c2"></span>		dup /Mask known	{<span class="pl-c2"></span>			dup /Mask get {<span class="pl-c2"></span>				level3<span class="pl-c2"></span>				{true}<span class="pl-c2"></span>				{<span class="pl-c2"></span>					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch<span class="pl-c2"></span>					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse<span class="pl-c2"></span>					3 -1 roll and<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>			}<span class="pl-c2"></span>			{false} ifelse<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{false} ifelse<span class="pl-c2"></span>	}<span class="pl-c2"></span>	{false} ifelse<span class="pl-c2"></span>}def<span class="pl-c2"></span>/make_line_source<span class="pl-c2"></span>{<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	MultipleDataSources {<span class="pl-c2"></span>		[<span class="pl-c2"></span>		Decode length 2 div cvi {Width string} repeat<span class="pl-c2"></span>		]<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		Width Decode length 2 div mul cvi string<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/datasource_to_str<span class="pl-c2"></span>{<span class="pl-c2"></span>	exch dup type<span class="pl-c2"></span>	dup /filetype eq {<span class="pl-c2"></span>		pop exch readstring<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		/arraytype eq {<span class="pl-c2"></span>			exec exch copy<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			pop<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	pop<span class="pl-c2"></span>}def<span class="pl-c2"></span>/masked_image_simulation<span class="pl-c2"></span>{<span class="pl-c2"></span>	3 dict begin<span class="pl-c2"></span>	dup make_line_source /line_source xdf<span class="pl-c2"></span>	/mask_source AGMIMG_maskSource /LZWDecode filter def<span class="pl-c2"></span>	dup /Width get 8 div ceiling cvi string /mask_str xdf<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	gsave<span class="pl-c2"></span>	0 1 translate 1 -1 Height div scale<span class="pl-c2"></span>	1 1 Height {<span class="pl-c2"></span>		pop<span class="pl-c2"></span>		gsave<span class="pl-c2"></span>		MultipleDataSources {<span class="pl-c2"></span>			0 1 DataSource length 1 sub {<span class="pl-c2"></span>				dup DataSource exch get<span class="pl-c2"></span>				exch line_source exch get<span class="pl-c2"></span>				datasource_to_str<span class="pl-c2"></span>			} for<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			DataSource line_source datasource_to_str<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>		&lt;&lt;<span class="pl-c2"></span>			/PatternType 1<span class="pl-c2"></span>			/PaintProc [<span class="pl-c2"></span>				/pop cvx<span class="pl-c2"></span>				&lt;&lt;<span class="pl-c2"></span>					/ImageType 1<span class="pl-c2"></span>					/Width Width<span class="pl-c2"></span>					/Height 1<span class="pl-c2"></span>					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix<span class="pl-c2"></span>					/MultipleDataSources MultipleDataSources<span class="pl-c2"></span>					/DataSource line_source<span class="pl-c2"></span>					/BitsPerComponent BitsPerComponent<span class="pl-c2"></span>					/Decode Decode<span class="pl-c2"></span>				&gt;&gt;<span class="pl-c2"></span>				/image cvx<span class="pl-c2"></span>			] cvx<span class="pl-c2"></span>			/BBox [0 0 Width 1]<span class="pl-c2"></span>			/XStep Width<span class="pl-c2"></span>			/YStep 1<span class="pl-c2"></span>			/PaintType 1<span class="pl-c2"></span>			/TilingType 2<span class="pl-c2"></span>		&gt;&gt;<span class="pl-c2"></span>		matrix makepattern set_pattern<span class="pl-c2"></span>		&lt;&lt;<span class="pl-c2"></span>			/ImageType 1<span class="pl-c2"></span>			/Width Width<span class="pl-c2"></span>			/Height 1<span class="pl-c2"></span>			/ImageMatrix Width 1 matrix scale<span class="pl-c2"></span>			/MultipleDataSources false<span class="pl-c2"></span>			/DataSource mask_source mask_str readstring pop<span class="pl-c2"></span>			/BitsPerComponent 1<span class="pl-c2"></span>			/Decode [0 1]<span class="pl-c2"></span>		&gt;&gt;<span class="pl-c2"></span>		imagemask<span class="pl-c2"></span>		grestore<span class="pl-c2"></span>		0 1 translate<span class="pl-c2"></span>	} for<span class="pl-c2"></span>	grestore<span class="pl-c2"></span>	end<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/imageormask<span class="pl-c2"></span>{<span class="pl-c2"></span>	begin<span class="pl-c2"></span>		SkipImageProc {<span class="pl-c2"></span>			currentdict consumeimagedata<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			save mark<span class="pl-c2"></span>			level2 AGMCORE_host_sep not and{<span class="pl-c2"></span>				currentdict<span class="pl-c2"></span>				Operator /imagemask eq DeviceN_PS2 not and {<span class="pl-c2"></span>					imagemask<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{<span class="pl-c2"></span>						[/Separation /Black /DeviceGray {}] setcolorspace<span class="pl-c2"></span>						/Decode [ Decode 1 get Decode 0 get ] def<span class="pl-c2"></span>					}if<span class="pl-c2"></span>					use_mask {<span class="pl-c2"></span>						level3 {process_mask_L3 image}{masked_image_simulation}ifelse<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and <span class="pl-c2"></span>						{<span class="pl-c2"></span>							Names convert_to_process not {<span class="pl-c2"></span>								2 dict begin<span class="pl-c2"></span>								/imageDict xdf<span class="pl-c2"></span>								/names_index 0 def<span class="pl-c2"></span>								gsave<span class="pl-c2"></span>								imageDict write_image_file {<span class="pl-c2"></span>									Names {<span class="pl-c2"></span>										dup (None) ne {<span class="pl-c2"></span>											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace<span class="pl-c2"></span>											Operator imageDict read_image_file<span class="pl-c2"></span>											names_index 0 eq {true setoverprint} if<span class="pl-c2"></span>											/names_index names_index 1 add def<span class="pl-c2"></span>										}{<span class="pl-c2"></span>											pop<span class="pl-c2"></span>										} ifelse<span class="pl-c2"></span>									} forall<span class="pl-c2"></span>									close_image_file<span class="pl-c2"></span>								} if<span class="pl-c2"></span>								grestore<span class="pl-c2"></span>								end<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								Operator /imagemask eq {<span class="pl-c2"></span>									imagemask<span class="pl-c2"></span>								}{<span class="pl-c2"></span>									image<span class="pl-c2"></span>								} ifelse<span class="pl-c2"></span>							} ifelse<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							Operator /imagemask eq {<span class="pl-c2"></span>								imagemask<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								image<span class="pl-c2"></span>							} ifelse<span class="pl-c2"></span>						} ifelse<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				Width Height<span class="pl-c2"></span>				Operator /imagemask eq{<span class="pl-c2"></span>					Decode 0 get 1 eq Decode 1 get 0 eq	and<span class="pl-c2"></span>					ImageMatrix /DataSource load<span class="pl-c2"></span>					/Adobe_AGM_OnHost_Seps where {<span class="pl-c2"></span>						pop imagemask<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						currentgray 1 ne{<span class="pl-c2"></span>							currentdict imageormask_sys<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							currentoverprint not{<span class="pl-c2"></span>								1 AGMCORE_&amp;setgray<span class="pl-c2"></span>								currentdict imageormask_sys<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								currentdict ignoreimagedata<span class="pl-c2"></span>							}ifelse				 		<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					BitsPerComponent ImageMatrix <span class="pl-c2"></span>					MultipleDataSources{<span class="pl-c2"></span>						0 1 NComponents 1 sub{<span class="pl-c2"></span>							DataSource exch get<span class="pl-c2"></span>						}for<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						/DataSource load<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>					Operator /colorimage eq{<span class="pl-c2"></span>						AGMCORE_host_sep{<span class="pl-c2"></span>							MultipleDataSources level2 or NComponents 4 eq and{<span class="pl-c2"></span>								AGMCORE_is_cmyk_sep{<span class="pl-c2"></span>									MultipleDataSources{<span class="pl-c2"></span>										/DataSource [<span class="pl-c2"></span>											DataSource 0 get /exec cvx<span class="pl-c2"></span>											DataSource 1 get /exec cvx<span class="pl-c2"></span>											DataSource 2 get /exec cvx<span class="pl-c2"></span>											DataSource 3 get /exec cvx<span class="pl-c2"></span>											/AGMCORE_get_ink_data cvx<span class="pl-c2"></span>										] cvx def<span class="pl-c2"></span>									}{<span class="pl-c2"></span>										/DataSource <span class="pl-c2"></span>										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul <span class="pl-c2"></span>										/DataSource load<span class="pl-c2"></span>										filter_cmyk 0 () /SubFileDecode filter def<span class="pl-c2"></span>									}ifelse<span class="pl-c2"></span>									/Decode [ Decode 0 get Decode 1 get ] def<span class="pl-c2"></span>									/MultipleDataSources false def<span class="pl-c2"></span>									/NComponents 1 def<span class="pl-c2"></span>									/Operator /image def<span class="pl-c2"></span>									invert_image_samples<span class="pl-c2"></span>						 			1 AGMCORE_&amp;setgray<span class="pl-c2"></span>									currentdict imageormask_sys<span class="pl-c2"></span>								}{<span class="pl-c2"></span>									currentoverprint not Operator/imagemask eq and{<span class="pl-c2"></span>  			 							1 AGMCORE_&amp;setgray<span class="pl-c2"></span>  			 							currentdict imageormask_sys<span class="pl-c2"></span>  			 						}{<span class="pl-c2"></span>  			 							currentdict ignoreimagedata<span class="pl-c2"></span>  			 						}ifelse<span class="pl-c2"></span>								}ifelse<span class="pl-c2"></span>							}{	<span class="pl-c2"></span>								MultipleDataSources NComponents AGMIMG_&amp;colorimage						<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							true NComponents colorimage<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						Operator /image eq{<span class="pl-c2"></span>							AGMCORE_host_sep{<span class="pl-c2"></span>								/DoImage true def<span class="pl-c2"></span>								HostSepColorImage{<span class="pl-c2"></span>									invert_image_samples<span class="pl-c2"></span>								}{<span class="pl-c2"></span>									AGMCORE_black_plate not Operator/imagemask ne and{<span class="pl-c2"></span>										/DoImage false def<span class="pl-c2"></span>										currentdict ignoreimagedata<span class="pl-c2"></span>					 				}if<span class="pl-c2"></span>								}ifelse<span class="pl-c2"></span>						 		1 AGMCORE_&amp;setgray<span class="pl-c2"></span>								DoImage<span class="pl-c2"></span>									{currentdict imageormask_sys} if<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								use_mask {<span class="pl-c2"></span>									level3 {process_mask_L3 image}{masked_image_simulation}ifelse<span class="pl-c2"></span>								}{<span class="pl-c2"></span>									image<span class="pl-c2"></span>								}ifelse<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							Operator/knockout eq{<span class="pl-c2"></span>								pop pop pop pop pop<span class="pl-c2"></span>								currentcolorspace overprint_plate not{<span class="pl-c2"></span>									knockout_unitsq<span class="pl-c2"></span>								}if<span class="pl-c2"></span>							}if<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>			cleartomark restore<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/sep_imageormask<span class="pl-c2"></span>{<span class="pl-c2"></span> 	/sep_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>	CSA map_csa<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	SkipImageProc {<span class="pl-c2"></span>		currentdict consumeimagedata<span class="pl-c2"></span>	}<span class="pl-c2"></span>	{<span class="pl-c2"></span>		save mark <span class="pl-c2"></span>		AGMCORE_avoid_L2_sep_space{<span class="pl-c2"></span>			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def<span class="pl-c2"></span>		}if<span class="pl-c2"></span> 		AGMIMG_ccimage_exists <span class="pl-c2"></span>		MappedCSA 0 get /DeviceCMYK eq and<span class="pl-c2"></span>		currentdict/Components known and <span class="pl-c2"></span>		Name () ne and <span class="pl-c2"></span>		Name (All) ne and <span class="pl-c2"></span>		Operator /image eq and<span class="pl-c2"></span>		AGMCORE_producing_seps not and<span class="pl-c2"></span>		level2 not and<span class="pl-c2"></span>		{<span class="pl-c2"></span>			Width Height BitsPerComponent ImageMatrix <span class="pl-c2"></span>			[<span class="pl-c2"></span>			/DataSource load /exec cvx<span class="pl-c2"></span>			{<span class="pl-c2"></span>				0 1 2 index length 1 sub{<span class="pl-c2"></span>					1 index exch<span class="pl-c2"></span>					2 copy get 255 xor put<span class="pl-c2"></span>				}for<span class="pl-c2"></span>			} /exec cvx<span class="pl-c2"></span>			] cvx bind<span class="pl-c2"></span>			MappedCSA 0 get /DeviceCMYK eq{<span class="pl-c2"></span>				Components aload pop<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				0 0 0 Components aload pop 1 exch sub<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>			Name findcmykcustomcolor<span class="pl-c2"></span>			customcolorimage<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			AGMCORE_producing_seps not{<span class="pl-c2"></span>				level2{<span class="pl-c2"></span>					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{<span class="pl-c2"></span>						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt<span class="pl-c2"></span>						/sep_tint AGMCORE_gget setcolor<span class="pl-c2"></span>					}if<span class="pl-c2"></span>					currentdict imageormask<span class="pl-c2"></span>				}{ <span class="pl-c2"></span>					currentdict<span class="pl-c2"></span>					Operator /imagemask eq{<span class="pl-c2"></span>						imageormask<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						sep_imageormask_lev1<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span> 			}{<span class="pl-c2"></span>				AGMCORE_host_sep{<span class="pl-c2"></span>					Operator/knockout eq{<span class="pl-c2"></span>						currentdict/ImageMatrix get concat<span class="pl-c2"></span>						knockout_unitsq<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						currentgray 1 ne{<span class="pl-c2"></span> 							AGMCORE_is_cmyk_sep Name (All) ne and{<span class="pl-c2"></span> 								level2{<span class="pl-c2"></span> 									Name AGMCORE_IsSeparationAProcessColor <span class="pl-c2"></span> 									{<span class="pl-c2"></span> 										Operator /imagemask eq{<span class="pl-c2"></span> 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&amp;setcolor<span class="pl-c2"></span> 										}{<span class="pl-c2"></span>											invert_image_samples<span class="pl-c2"></span> 										}ifelse<span class="pl-c2"></span>	 								}{<span class="pl-c2"></span>	 									[ /Separation Name [/DeviceGray]<span class="pl-c2"></span>	 									{ <span class="pl-c2"></span>	 										sep_colorspace_proc AGMCORE_get_ink_data<span class="pl-c2"></span>											1 exch sub<span class="pl-c2"></span>	 									} bind<span class="pl-c2"></span>										] AGMCORE_&amp;setcolorspace<span class="pl-c2"></span>										/sep_tint AGMCORE_gget AGMCORE_&amp;setcolor<span class="pl-c2"></span> 									}ifelse<span class="pl-c2"></span> 									currentdict imageormask_sys<span class="pl-c2"></span>	 							}{<span class="pl-c2"></span>	 								currentdict<span class="pl-c2"></span>									Operator /imagemask eq{<span class="pl-c2"></span>										imageormask_sys<span class="pl-c2"></span>									}{<span class="pl-c2"></span>										sep_image_lev1_sep<span class="pl-c2"></span>									}ifelse<span class="pl-c2"></span>	 							}ifelse<span class="pl-c2"></span> 							}{<span class="pl-c2"></span> 								Operator/imagemask ne{<span class="pl-c2"></span>									invert_image_samples<span class="pl-c2"></span> 								}if<span class="pl-c2"></span>		 						currentdict imageormask_sys<span class="pl-c2"></span> 							}ifelse<span class="pl-c2"></span> 						}{<span class="pl-c2"></span> 							currentoverprint not Name (All) eq or Operator/imagemask eq and{<span class="pl-c2"></span>								currentdict imageormask_sys <span class="pl-c2"></span>								}{<span class="pl-c2"></span>								currentoverprint not<span class="pl-c2"></span>									{<span class="pl-c2"></span> 									gsave <span class="pl-c2"></span> 									knockout_unitsq<span class="pl-c2"></span> 									grestore<span class="pl-c2"></span>									}if<span class="pl-c2"></span>								currentdict consumeimagedata <span class="pl-c2"></span>		 					}ifelse<span class="pl-c2"></span> 						}ifelse<span class="pl-c2"></span>		 			}ifelse<span class="pl-c2"></span> 				}{<span class="pl-c2"></span>					currentcolorspace 0 get /Separation ne{<span class="pl-c2"></span>						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt<span class="pl-c2"></span>						/sep_tint AGMCORE_gget setcolor<span class="pl-c2"></span>					}if<span class="pl-c2"></span>					currentoverprint <span class="pl-c2"></span>					MappedCSA 0 get /DeviceCMYK eq and <span class="pl-c2"></span>					Name AGMCORE_IsSeparationAProcessColor not and<span class="pl-c2"></span>					Name inRip_spot_has_ink not and <span class="pl-c2"></span>					Name (All) ne and {<span class="pl-c2"></span>						imageormask_l2_overprint<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						currentdict imageormask<span class="pl-c2"></span> 					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>		cleartomark restore<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if<span class="pl-c2"></span>	end<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/decode_image_sample<span class="pl-c2"></span>{<span class="pl-c2"></span>	4 1 roll exch dup 5 1 roll<span class="pl-c2"></span>	sub 2 4 -1 roll exp 1 sub div mul add<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/colorSpaceElemCnt<span class="pl-c2"></span>{<span class="pl-c2"></span>	mark currentcolor counttomark dup 2 add 1 roll cleartomark<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/devn_sep_datasource<span class="pl-c2"></span>{<span class="pl-c2"></span>	1 dict begin<span class="pl-c2"></span>	/dataSource xdf<span class="pl-c2"></span>	[<span class="pl-c2"></span>		0 1 dataSource length 1 sub {<span class="pl-c2"></span>			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx<span class="pl-c2"></span>			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx<span class="pl-c2"></span>		} for<span class="pl-c2"></span>	] cvx bind<span class="pl-c2"></span>	end<span class="pl-c2"></span>} bdf		<span class="pl-c2"></span>/devn_alt_datasource<span class="pl-c2"></span>{<span class="pl-c2"></span>	11 dict begin<span class="pl-c2"></span>	/convProc xdf<span class="pl-c2"></span>	/origcolorSpaceElemCnt xdf<span class="pl-c2"></span>	/origMultipleDataSources xdf<span class="pl-c2"></span>	/origBitsPerComponent xdf<span class="pl-c2"></span>	/origDecode xdf<span class="pl-c2"></span>	/origDataSource xdf<span class="pl-c2"></span>	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def<span class="pl-c2"></span>	/DataSource origMultipleDataSources<span class="pl-c2"></span>		{<span class="pl-c2"></span>			[<span class="pl-c2"></span>			BitsPerComponent 8 idiv origDecode length 2 idiv mul string<span class="pl-c2"></span>			0 1 origDecode length 2 idiv 1 sub<span class="pl-c2"></span>				{<span class="pl-c2"></span>				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch<span class="pl-c2"></span>				origDataSource exch get 0 () /SubFileDecode filter<span class="pl-c2"></span>				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx<span class="pl-c2"></span>				}for <span class="pl-c2"></span>			]bind cvx<span class="pl-c2"></span>		}{origDataSource}ifelse 0 () /SubFileDecode filter def		<span class="pl-c2"></span>	[<span class="pl-c2"></span>		origcolorSpaceElemCnt string<span class="pl-c2"></span>		0 2 origDecode length 2 sub<span class="pl-c2"></span>			{<span class="pl-c2"></span>			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div<span class="pl-c2"></span>			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx<span class="pl-c2"></span>			}for<span class="pl-c2"></span>		/convProc load /exec cvx<span class="pl-c2"></span>		origcolorSpaceElemCnt 1 sub -1 0<span class="pl-c2"></span>			{<span class="pl-c2"></span>			/dup cvx 2 /add cvx /index cvx<span class="pl-c2"></span>			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx<span class="pl-c2"></span>			}for<span class="pl-c2"></span>	]bind cvx 0 () /SubFileDecode filter<span class="pl-c2"></span>	end<span class="pl-c2"></span>} bdf<span class="pl-c2"></span>/devn_imageormask<span class="pl-c2"></span>{<span class="pl-c2"></span> 	/devicen_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>	CSA map_csa<span class="pl-c2"></span>	2 dict begin<span class="pl-c2"></span>	dup<span class="pl-c2"></span>	/srcDataStrs [ 3 -1 roll begin<span class="pl-c2"></span>		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse<span class="pl-c2"></span>		{<span class="pl-c2"></span>			Width Decode length 2 div mul cvi<span class="pl-c2"></span>			{<span class="pl-c2"></span>				dup 65535 gt {1 add 2 div cvi}{exit}ifelse<span class="pl-c2"></span>			} loop<span class="pl-c2"></span>			string<span class="pl-c2"></span>		} repeat<span class="pl-c2"></span>		end ] def<span class="pl-c2"></span>	/dstDataStr srcDataStrs 0 get length string def<span class="pl-c2"></span>	begin<span class="pl-c2"></span>	SkipImageProc {<span class="pl-c2"></span>		currentdict consumeimagedata<span class="pl-c2"></span>	}<span class="pl-c2"></span>	{<span class="pl-c2"></span>		save mark <span class="pl-c2"></span>		AGMCORE_producing_seps not {<span class="pl-c2"></span>			level3 not {<span class="pl-c2"></span>				Operator /imagemask ne {<span class="pl-c2"></span>					/DataSource [ [<span class="pl-c2"></span>						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse<span class="pl-c2"></span>						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get <span class="pl-c2"></span>						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				<span class="pl-c2"></span>					/MultipleDataSources true def<span class="pl-c2"></span>					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def<span class="pl-c2"></span>				} if<span class="pl-c2"></span>			}if<span class="pl-c2"></span>			currentdict imageormask<span class="pl-c2"></span> 		}{<span class="pl-c2"></span>			AGMCORE_host_sep{<span class="pl-c2"></span>				Names convert_to_process {<span class="pl-c2"></span>					CSA get_csa_by_name 0 get /DeviceCMYK eq {<span class="pl-c2"></span>						/DataSource<span class="pl-c2"></span>							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul <span class="pl-c2"></span>							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse<span class="pl-c2"></span>							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get <span class="pl-c2"></span>							devn_alt_datasource<span class="pl-c2"></span>						filter_cmyk 0 () /SubFileDecode filter def<span class="pl-c2"></span>						/MultipleDataSources false def<span class="pl-c2"></span>						/Decode [1 0] def<span class="pl-c2"></span>						/DeviceGray setcolorspace<span class="pl-c2"></span>			 			currentdict imageormask_sys<span class="pl-c2"></span> 					}{<span class="pl-c2"></span>						AGMCORE_report_unsupported_color_space<span class="pl-c2"></span>						AGMCORE_black_plate {<span class="pl-c2"></span>							/DataSource<span class="pl-c2"></span>								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse<span class="pl-c2"></span>								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get<span class="pl-c2"></span>								devn_alt_datasource<span class="pl-c2"></span>							/MultipleDataSources false def<span class="pl-c2"></span>							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def<span class="pl-c2"></span>				 			currentdict imageormask_sys<span class="pl-c2"></span>				 		}<span class="pl-c2"></span>						{<span class="pl-c2"></span>	 						gsave <span class="pl-c2"></span>	 						knockout_unitsq<span class="pl-c2"></span>	 						grestore<span class="pl-c2"></span>							currentdict consumeimagedata <span class="pl-c2"></span>						} ifelse<span class="pl-c2"></span> 					} ifelse<span class="pl-c2"></span>				}<span class="pl-c2"></span>				{	<span class="pl-c2"></span>					/devicen_colorspace_dict AGMCORE_gget /names_index known {<span class="pl-c2"></span>	 					Operator/imagemask ne{<span class="pl-c2"></span>	 						MultipleDataSources {<span class="pl-c2"></span>		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def<span class="pl-c2"></span>								/MultipleDataSources false def<span class="pl-c2"></span>	 						}{<span class="pl-c2"></span>								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def<span class="pl-c2"></span>	 						} ifelse<span class="pl-c2"></span>							invert_image_samples<span class="pl-c2"></span>	 					} if<span class="pl-c2"></span>			 			currentdict imageormask_sys<span class="pl-c2"></span>	 				}{<span class="pl-c2"></span>	 					currentoverprint not Operator/imagemask eq and{<span class="pl-c2"></span>							currentdict imageormask_sys <span class="pl-c2"></span>							}{<span class="pl-c2"></span>							currentoverprint not<span class="pl-c2"></span>								{<span class="pl-c2"></span>	 							gsave <span class="pl-c2"></span>	 							knockout_unitsq<span class="pl-c2"></span>	 							grestore<span class="pl-c2"></span>								}if<span class="pl-c2"></span>							currentdict consumeimagedata <span class="pl-c2"></span>			 			}ifelse<span class="pl-c2"></span>	 				}ifelse<span class="pl-c2"></span>	 			}ifelse<span class="pl-c2"></span> 			}{<span class="pl-c2"></span>				currentdict imageormask<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>		cleartomark restore<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if<span class="pl-c2"></span>	end<span class="pl-c2"></span>	end<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/imageormask_l2_overprint<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentdict<span class="pl-c2"></span>	currentcmykcolor add add add 0 eq{<span class="pl-c2"></span>		currentdict consumeimagedata<span class="pl-c2"></span>	}{<span class="pl-c2"></span>		level3{ 			<span class="pl-c2"></span>			currentcmykcolor <span class="pl-c2"></span>			/AGMIMG_k xdf <span class="pl-c2"></span>			/AGMIMG_y xdf <span class="pl-c2"></span>			/AGMIMG_m xdf <span class="pl-c2"></span>			/AGMIMG_c xdf<span class="pl-c2"></span>			Operator/imagemask eq{<span class="pl-c2"></span>				[/DeviceN [<span class="pl-c2"></span>				AGMIMG_c 0 ne {/Cyan} if<span class="pl-c2"></span>				AGMIMG_m 0 ne {/Magenta} if<span class="pl-c2"></span>				AGMIMG_y 0 ne {/Yellow} if<span class="pl-c2"></span>				AGMIMG_k 0 ne {/Black} if<span class="pl-c2"></span>				] /DeviceCMYK {}] setcolorspace<span class="pl-c2"></span>				AGMIMG_c 0 ne {AGMIMG_c} if<span class="pl-c2"></span>				AGMIMG_m 0 ne {AGMIMG_m} if<span class="pl-c2"></span>				AGMIMG_y 0 ne {AGMIMG_y} if<span class="pl-c2"></span>				AGMIMG_k 0 ne {AGMIMG_k} if<span class="pl-c2"></span>				setcolor			<span class="pl-c2"></span>			}{	<span class="pl-c2"></span>				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def<span class="pl-c2"></span>				[/Indexed 				<span class="pl-c2"></span>					[<span class="pl-c2"></span>						/DeviceN [<span class="pl-c2"></span>							AGMIMG_c 0 ne {/Cyan} if<span class="pl-c2"></span>							AGMIMG_m 0 ne {/Magenta} if<span class="pl-c2"></span>							AGMIMG_y 0 ne {/Yellow} if<span class="pl-c2"></span>							AGMIMG_k 0 ne {/Black} if<span class="pl-c2"></span>						] <span class="pl-c2"></span>						/DeviceCMYK {<span class="pl-c2"></span>							AGMIMG_k 0 eq {0} if<span class="pl-c2"></span>							AGMIMG_y 0 eq {0 exch} if<span class="pl-c2"></span>							AGMIMG_m 0 eq {0 3 1 roll} if<span class="pl-c2"></span>							AGMIMG_c 0 eq {0 4 1 roll} if						<span class="pl-c2"></span>						}<span class="pl-c2"></span>					]<span class="pl-c2"></span>					255<span class="pl-c2"></span>					{<span class="pl-c2"></span>						255 div <span class="pl-c2"></span>						mark exch<span class="pl-c2"></span>						dup	dup dup<span class="pl-c2"></span>						AGMIMG_k 0 ne{<span class="pl-c2"></span>							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		<span class="pl-c2"></span>							counttomark 1 roll<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							pop<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>						AGMIMG_y 0 ne{<span class="pl-c2"></span>							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		<span class="pl-c2"></span>							counttomark 1 roll<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							pop<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>						AGMIMG_m 0 ne{<span class="pl-c2"></span>							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		<span class="pl-c2"></span>							counttomark 1 roll<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							pop<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>						AGMIMG_c 0 ne{<span class="pl-c2"></span>							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		<span class="pl-c2"></span>							counttomark 1 roll<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							pop<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>						counttomark 1 add -1 roll pop<span class="pl-c2"></span>					}<span class="pl-c2"></span>				] setcolorspace<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>			imageormask_sys<span class="pl-c2"></span>		}{<span class="pl-c2"></span>	write_image_file{<span class="pl-c2"></span>		currentcmykcolor<span class="pl-c2"></span>		0 ne{<span class="pl-c2"></span>			[/Separation /Black /DeviceGray {}] setcolorspace<span class="pl-c2"></span>			gsave<span class="pl-c2"></span>			/Black<span class="pl-c2"></span>			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]<span class="pl-c2"></span>			cvx modify_halftone_xfer<span class="pl-c2"></span>			Operator currentdict read_image_file<span class="pl-c2"></span>			grestore<span class="pl-c2"></span>		}if<span class="pl-c2"></span>		0 ne{<span class="pl-c2"></span>			[/Separation /Yellow /DeviceGray {}] setcolorspace<span class="pl-c2"></span>			gsave<span class="pl-c2"></span>			/Yellow<span class="pl-c2"></span>			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]<span class="pl-c2"></span>			cvx modify_halftone_xfer<span class="pl-c2"></span>			Operator currentdict read_image_file<span class="pl-c2"></span>			grestore<span class="pl-c2"></span>		}if<span class="pl-c2"></span>		0 ne{<span class="pl-c2"></span>			[/Separation /Magenta /DeviceGray {}] setcolorspace<span class="pl-c2"></span>			gsave<span class="pl-c2"></span>			/Magenta<span class="pl-c2"></span>			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]<span class="pl-c2"></span>			cvx modify_halftone_xfer<span class="pl-c2"></span>			Operator currentdict read_image_file<span class="pl-c2"></span>			grestore<span class="pl-c2"></span>		}if<span class="pl-c2"></span>		0 ne{<span class="pl-c2"></span>			[/Separation /Cyan /DeviceGray {}] setcolorspace<span class="pl-c2"></span>			gsave<span class="pl-c2"></span>			/Cyan <span class="pl-c2"></span>			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]<span class="pl-c2"></span>			cvx modify_halftone_xfer<span class="pl-c2"></span>			Operator currentdict read_image_file<span class="pl-c2"></span>			grestore<span class="pl-c2"></span>		} if<span class="pl-c2"></span>				close_image_file<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				imageormask<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>} def<span class="pl-c2"></span>/indexed_imageormask<span class="pl-c2"></span>{<span class="pl-c2"></span>	begin<span class="pl-c2"></span>		save mark <span class="pl-c2"></span> 		currentdict<span class="pl-c2"></span> 		AGMCORE_host_sep{<span class="pl-c2"></span>			Operator/knockout eq{<span class="pl-c2"></span>				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {<span class="pl-c2"></span>					/CSA get get_csa_by_name<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					/Names get<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>				overprint_plate not{<span class="pl-c2"></span>					knockout_unitsq<span class="pl-c2"></span>				}if<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				Indexed_DeviceN {<span class="pl-c2"></span>					/devicen_colorspace_dict AGMCORE_gget /names_index known {<span class="pl-c2"></span>			 			indexed_image_lev2_sep<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						currentoverprint not{<span class="pl-c2"></span>							knockout_unitsq<span class="pl-c2"></span>			 			}if<span class="pl-c2"></span>			 			currentdict consumeimagedata<span class="pl-c2"></span>					} ifelse<span class="pl-c2"></span>				}{<span class="pl-c2"></span>		 			AGMCORE_is_cmyk_sep{<span class="pl-c2"></span>						Operator /imagemask eq{<span class="pl-c2"></span>							imageormask_sys<span class="pl-c2"></span>						}{<span class="pl-c2"></span>							level2{<span class="pl-c2"></span>								indexed_image_lev2_sep<span class="pl-c2"></span>							}{<span class="pl-c2"></span>								indexed_image_lev1_sep<span class="pl-c2"></span>							}ifelse<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						currentoverprint not{<span class="pl-c2"></span>							knockout_unitsq<span class="pl-c2"></span>			 			}if<span class="pl-c2"></span>			 			currentdict consumeimagedata<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span> 		}{<span class="pl-c2"></span>			level2{<span class="pl-c2"></span>				Indexed_DeviceN {<span class="pl-c2"></span>					/indexed_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					/indexed_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {<span class="pl-c2"></span>						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]<span class="pl-c2"></span>						setcolorspace<span class="pl-c2"></span>					} if<span class="pl-c2"></span>					end<span class="pl-c2"></span>				} ifelse<span class="pl-c2"></span>				imageormask<span class="pl-c2"></span>				Indexed_DeviceN {<span class="pl-c2"></span>					end<span class="pl-c2"></span>				} if<span class="pl-c2"></span>			}{ <span class="pl-c2"></span>				Operator /imagemask eq{<span class="pl-c2"></span>					imageormask<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					indexed_imageormask_lev1<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span> 		}ifelse<span class="pl-c2"></span>		cleartomark restore<span class="pl-c2"></span>	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/indexed_image_lev2_sep<span class="pl-c2"></span>{<span class="pl-c2"></span>	/indexed_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>	begin<span class="pl-c2"></span>		Indexed_DeviceN not {<span class="pl-c2"></span>			currentcolorspace <span class="pl-c2"></span>			dup 1 /DeviceGray put<span class="pl-c2"></span>			dup 3<span class="pl-c2"></span>			currentcolorspace 2 get 1 add string<span class="pl-c2"></span>			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub<span class="pl-c2"></span>			{<span class="pl-c2"></span>			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put<span class="pl-c2"></span>			}for <span class="pl-c2"></span>			put	setcolorspace<span class="pl-c2"></span>		} if<span class="pl-c2"></span>		currentdict <span class="pl-c2"></span>		Operator /imagemask eq{<span class="pl-c2"></span>			AGMIMG_&amp;imagemask<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			use_mask {<span class="pl-c2"></span>				level3 {process_mask_L3 AGMIMG_&amp;image}{masked_image_simulation}ifelse<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				AGMIMG_&amp;image<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>	end end<span class="pl-c2"></span>}def<span class="pl-c2"></span>  /OPIimage<span class="pl-c2"></span>  {<span class="pl-c2"></span>  	dup type /dicttype ne{<span class="pl-c2"></span>  		10 dict begin<span class="pl-c2"></span>  			/DataSource xdf<span class="pl-c2"></span>  			/ImageMatrix xdf<span class="pl-c2"></span>  			/BitsPerComponent xdf<span class="pl-c2"></span>  			/Height xdf<span class="pl-c2"></span>  			/Width xdf<span class="pl-c2"></span>  			/ImageType 1 def<span class="pl-c2"></span>  			/Decode [0 1 def]<span class="pl-c2"></span>  			currentdict<span class="pl-c2"></span>  		end<span class="pl-c2"></span>  	}if<span class="pl-c2"></span>  	dup begin<span class="pl-c2"></span>  		/NComponents 1 cdndf<span class="pl-c2"></span>  		/MultipleDataSources false cdndf<span class="pl-c2"></span>  		/SkipImageProc {false} cdndf<span class="pl-c2"></span>  		/HostSepColorImage false cdndf<span class="pl-c2"></span>  		/Decode [<span class="pl-c2"></span>  				0 <span class="pl-c2"></span>  				currentcolorspace 0 get /Indexed eq{<span class="pl-c2"></span>  					2 BitsPerComponent exp 1 sub<span class="pl-c2"></span>  				}{<span class="pl-c2"></span>  					1<span class="pl-c2"></span>  				}ifelse<span class="pl-c2"></span>  		] cdndf<span class="pl-c2"></span>  		/Operator /image cdndf<span class="pl-c2"></span>  	end<span class="pl-c2"></span>  	/sep_colorspace_dict AGMCORE_gget null eq{<span class="pl-c2"></span>  		imageormask<span class="pl-c2"></span>  	}{<span class="pl-c2"></span>  		gsave<span class="pl-c2"></span>  		dup begin invert_image_samples end<span class="pl-c2"></span>  		sep_imageormask<span class="pl-c2"></span>  		grestore<span class="pl-c2"></span>  	}ifelse<span class="pl-c2"></span>  }def<span class="pl-c2"></span>/cachemask_level2<span class="pl-c2"></span>{<span class="pl-c2"></span>	3 dict begin<span class="pl-c2"></span>	/LZWEncode filter /WriteFilter xdf<span class="pl-c2"></span>	/readBuffer 256 string def<span class="pl-c2"></span>	/ReadFilter<span class="pl-c2"></span>		currentfile<span class="pl-c2"></span>		0 (%EndMask) /SubFileDecode filter<span class="pl-c2"></span>		/ASCII85Decode filter<span class="pl-c2"></span>		/RunLengthDecode filter<span class="pl-c2"></span>	def<span class="pl-c2"></span>	{<span class="pl-c2"></span>		ReadFilter readBuffer readstring exch<span class="pl-c2"></span>		WriteFilter exch writestring<span class="pl-c2"></span>		not {exit} if<span class="pl-c2"></span>	}loop<span class="pl-c2"></span>	WriteFilter closefile<span class="pl-c2"></span>	end<span class="pl-c2"></span>}def<span class="pl-c2"></span>/cachemask_level3<span class="pl-c2"></span>{<span class="pl-c2"></span>	currentfile<span class="pl-c2"></span>	&lt;&lt;<span class="pl-c2"></span>		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]<span class="pl-c2"></span>		/DecodeParms [ &lt;&lt; /EODCount 0 /EODString (%EndMask) &gt;&gt; null null ]<span class="pl-c2"></span>		/Intent 1<span class="pl-c2"></span>	&gt;&gt;<span class="pl-c2"></span>	/ReusableStreamDecode filter<span class="pl-c2"></span>}def<span class="pl-c2"></span>/spot_alias<span class="pl-c2"></span>{<span class="pl-c2"></span>	/mapto_sep_imageormask <span class="pl-c2"></span>	{<span class="pl-c2"></span>		dup type /dicttype ne{<span class="pl-c2"></span>			12 dict begin<span class="pl-c2"></span>				/ImageType 1 def<span class="pl-c2"></span>				/DataSource xdf<span class="pl-c2"></span>				/ImageMatrix xdf<span class="pl-c2"></span>				/BitsPerComponent xdf<span class="pl-c2"></span>				/Height xdf<span class="pl-c2"></span>				/Width xdf<span class="pl-c2"></span>				/MultipleDataSources false def<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			begin<span class="pl-c2"></span>		}ifelse<span class="pl-c2"></span>				/Decode [/customcolor_tint AGMCORE_gget 0] def<span class="pl-c2"></span>				/Operator /image def<span class="pl-c2"></span>				/HostSepColorImage false def<span class="pl-c2"></span>				/SkipImageProc {false} def<span class="pl-c2"></span>				currentdict <span class="pl-c2"></span>			end<span class="pl-c2"></span>		sep_imageormask<span class="pl-c2"></span>	}bdf<span class="pl-c2"></span>	/customcolorimage<span class="pl-c2"></span>	{<span class="pl-c2"></span>		Adobe_AGM_Image/AGMIMG_colorAry xddf<span class="pl-c2"></span>		/customcolor_tint AGMCORE_gget<span class="pl-c2"></span>		&lt;&lt;<span class="pl-c2"></span>			/Name AGMIMG_colorAry 4 get<span class="pl-c2"></span>			/CSA [ /DeviceCMYK ] <span class="pl-c2"></span>			/TintMethod /Subtractive<span class="pl-c2"></span>			/TintProc null<span class="pl-c2"></span>			/MappedCSA null<span class="pl-c2"></span>			/NComponents 4 <span class="pl-c2"></span>			/Components [ AGMIMG_colorAry aload pop pop ] <span class="pl-c2"></span>		&gt;&gt;<span class="pl-c2"></span>		setsepcolorspace<span class="pl-c2"></span>		mapto_sep_imageormask<span class="pl-c2"></span>	}ndf<span class="pl-c2"></span>	Adobe_AGM_Image/AGMIMG_&amp;customcolorimage /customcolorimage load put<span class="pl-c2"></span>	/customcolorimage<span class="pl-c2"></span>	{<span class="pl-c2"></span>		Adobe_AGM_Image/AGMIMG_override false put<span class="pl-c2"></span>		current_spot_alias{dup 4 get map_alias}{false}ifelse<span class="pl-c2"></span>		{<span class="pl-c2"></span>			false set_spot_alias<span class="pl-c2"></span>			/customcolor_tint AGMCORE_gget exch setsepcolorspace<span class="pl-c2"></span>			pop<span class="pl-c2"></span>			mapto_sep_imageormask<span class="pl-c2"></span>			true set_spot_alias<span class="pl-c2"></span>		}{<span class="pl-c2"></span>			AGMIMG_&amp;customcolorimage<span class="pl-c2"></span>		}ifelse			<span class="pl-c2"></span>	}bdf<span class="pl-c2"></span>}def<span class="pl-c2"></span>/snap_to_device<span class="pl-c2"></span>{<span class="pl-c2"></span>	6 dict begin<span class="pl-c2"></span>	matrix currentmatrix<span class="pl-c2"></span>	dup 0 get 0 eq 1 index 3 get 0 eq and<span class="pl-c2"></span>	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop<span class="pl-c2"></span>	{<span class="pl-c2"></span>		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def<span class="pl-c2"></span>		0 0 transform<span class="pl-c2"></span>		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch<span class="pl-c2"></span>		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch<span class="pl-c2"></span>		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def<span class="pl-c2"></span>		1 1 transform<span class="pl-c2"></span>		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch<span class="pl-c2"></span>		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch<span class="pl-c2"></span>		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			<span class="pl-c2"></span>		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat<span class="pl-c2"></span>	}{<span class="pl-c2"></span>	}ifelse<span class="pl-c2"></span>	end<span class="pl-c2"></span>} def<span class="pl-c2"></span>level2 not{<span class="pl-c2"></span>	/colorbuf<span class="pl-c2"></span>	{<span class="pl-c2"></span>		0 1 2 index length 1 sub{<span class="pl-c2"></span>			dup 2 index exch get <span class="pl-c2"></span>			255 exch sub <span class="pl-c2"></span>			2 index <span class="pl-c2"></span>			3 1 roll <span class="pl-c2"></span>			put<span class="pl-c2"></span>		}for<span class="pl-c2"></span>	}def<span class="pl-c2"></span>	/tint_image_to_color<span class="pl-c2"></span>	{<span class="pl-c2"></span>		begin<span class="pl-c2"></span>			Width Height BitsPerComponent ImageMatrix <span class="pl-c2"></span>			/DataSource load<span class="pl-c2"></span>		end<span class="pl-c2"></span>		Adobe_AGM_Image begin<span class="pl-c2"></span>			/AGMIMG_mbuf 0 string def<span class="pl-c2"></span>			/AGMIMG_ybuf 0 string def<span class="pl-c2"></span>			/AGMIMG_kbuf 0 string def<span class="pl-c2"></span>			{<span class="pl-c2"></span>				colorbuf dup length AGMIMG_mbuf length ne<span class="pl-c2"></span>					{<span class="pl-c2"></span>					dup length dup dup<span class="pl-c2"></span>					/AGMIMG_mbuf exch string def<span class="pl-c2"></span>					/AGMIMG_ybuf exch string def<span class="pl-c2"></span>					/AGMIMG_kbuf exch string def<span class="pl-c2"></span>					} if<span class="pl-c2"></span>				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop<span class="pl-c2"></span>			}<span class="pl-c2"></span>			addprocs<span class="pl-c2"></span>			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	<span class="pl-c2"></span>		end<span class="pl-c2"></span>	} def			<span class="pl-c2"></span>	/sep_imageormask_lev1<span class="pl-c2"></span>	{<span class="pl-c2"></span>		begin<span class="pl-c2"></span>			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{<span class="pl-c2"></span>				{<span class="pl-c2"></span>					255 mul round cvi GrayLookup exch get<span class="pl-c2"></span>				} currenttransfer addprocs settransfer<span class="pl-c2"></span>				currentdict imageormask<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				/sep_colorspace_dict AGMCORE_gget/Components known{<span class="pl-c2"></span>					MappedCSA 0 get /DeviceCMYK eq{<span class="pl-c2"></span>						Components aload pop<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						0 0 0 Components aload pop 1 exch sub<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>					Adobe_AGM_Image/AGMIMG_k xddf <span class="pl-c2"></span>					Adobe_AGM_Image/AGMIMG_y xddf <span class="pl-c2"></span>					Adobe_AGM_Image/AGMIMG_m xddf <span class="pl-c2"></span>					Adobe_AGM_Image/AGMIMG_c xddf <span class="pl-c2"></span>					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{<span class="pl-c2"></span>						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer<span class="pl-c2"></span>						currentdict imageormask<span class="pl-c2"></span>					}{ <span class="pl-c2"></span>						currentcolortransfer<span class="pl-c2"></span>						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>						setcolortransfer<span class="pl-c2"></span>						currentdict tint_image_to_color<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					MappedCSA 0 get /DeviceGray eq {<span class="pl-c2"></span>						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer<span class="pl-c2"></span>						currentdict imageormask<span class="pl-c2"></span>					}{<span class="pl-c2"></span>						MappedCSA 0 get /DeviceCMYK eq {<span class="pl-c2"></span>							currentcolortransfer<span class="pl-c2"></span>							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>							setcolortransfer <span class="pl-c2"></span>							currentdict tint_image_to_color<span class="pl-c2"></span>						}{ <span class="pl-c2"></span>							currentcolortransfer<span class="pl-c2"></span>							{pop 1} exch addprocs 4 1 roll<span class="pl-c2"></span>							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll<span class="pl-c2"></span>							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll<span class="pl-c2"></span>							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll<span class="pl-c2"></span>							setcolortransfer <span class="pl-c2"></span>							currentdict tint_image_to_color<span class="pl-c2"></span>						}ifelse<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		end<span class="pl-c2"></span>	}def<span class="pl-c2"></span>	/sep_image_lev1_sep<span class="pl-c2"></span>	{<span class="pl-c2"></span>		begin<span class="pl-c2"></span>			/sep_colorspace_dict AGMCORE_gget/Components known{<span class="pl-c2"></span>				Components aload pop<span class="pl-c2"></span>				Adobe_AGM_Image/AGMIMG_k xddf <span class="pl-c2"></span>				Adobe_AGM_Image/AGMIMG_y xddf <span class="pl-c2"></span>				Adobe_AGM_Image/AGMIMG_m xddf <span class="pl-c2"></span>				Adobe_AGM_Image/AGMIMG_c xddf <span class="pl-c2"></span>				{AGMIMG_c mul 1 exch sub}<span class="pl-c2"></span>				{AGMIMG_m mul 1 exch sub}<span class="pl-c2"></span>				{AGMIMG_y mul 1 exch sub}<span class="pl-c2"></span>				{AGMIMG_k mul 1 exch sub}<span class="pl-c2"></span>			}{ <span class="pl-c2"></span>				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}<span class="pl-c2"></span>				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}<span class="pl-c2"></span>				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}<span class="pl-c2"></span>				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>			AGMCORE_get_ink_data currenttransfer addprocs settransfer<span class="pl-c2"></span>			currentdict imageormask_sys<span class="pl-c2"></span>		end<span class="pl-c2"></span>	}def<span class="pl-c2"></span>	/indexed_imageormask_lev1<span class="pl-c2"></span>	{<span class="pl-c2"></span>		/indexed_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>		begin<span class="pl-c2"></span>			currentdict<span class="pl-c2"></span>			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{<span class="pl-c2"></span>				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer<span class="pl-c2"></span>				imageormask<span class="pl-c2"></span>			}{<span class="pl-c2"></span>				MappedCSA 0 get /DeviceGray eq {<span class="pl-c2"></span>					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer<span class="pl-c2"></span>					imageormask<span class="pl-c2"></span>				}{<span class="pl-c2"></span>					MappedCSA 0 get /DeviceCMYK eq {<span class="pl-c2"></span>						currentcolortransfer<span class="pl-c2"></span>						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll<span class="pl-c2"></span>						setcolortransfer <span class="pl-c2"></span>						tint_image_to_color<span class="pl-c2"></span>					}{ <span class="pl-c2"></span>						currentcolortransfer<span class="pl-c2"></span>						{pop 1} exch addprocs 4 1 roll<span class="pl-c2"></span>						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll<span class="pl-c2"></span>						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll<span class="pl-c2"></span>						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll<span class="pl-c2"></span>						setcolortransfer <span class="pl-c2"></span>						tint_image_to_color<span class="pl-c2"></span>					}ifelse<span class="pl-c2"></span>				}ifelse<span class="pl-c2"></span>			}ifelse<span class="pl-c2"></span>		end end<span class="pl-c2"></span>	}def<span class="pl-c2"></span>	/indexed_image_lev1_sep<span class="pl-c2"></span>	{<span class="pl-c2"></span>		/indexed_colorspace_dict AGMCORE_gget begin<span class="pl-c2"></span>		begin<span class="pl-c2"></span>			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}<span class="pl-c2"></span>			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}<span class="pl-c2"></span>			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}<span class="pl-c2"></span>			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}<span class="pl-c2"></span>			AGMCORE_get_ink_data currenttransfer addprocs settransfer<span class="pl-c2"></span>			currentdict imageormask_sys<span class="pl-c2"></span>		end end<span class="pl-c2"></span>	}def<span class="pl-c2"></span>}if<span class="pl-c2"></span>end<span class="pl-c2"></span>systemdict /setpacking known<span class="pl-c2"></span>{<span class="pl-c2"></span>	setpacking<span class="pl-c2"></span>} if<span class="pl-c2"></span>%%EndResource<span class="pl-c2"></span>currentdict Adobe_AGM_Utils eq {end} if<span class="pl-c2"></span>%%EndProlog<span class="pl-c2"></span>%%BeginSetup<span class="pl-c2"></span>Adobe_AGM_Utils begin<span class="pl-c2"></span>2 2010 Adobe_AGM_Core/doc_setup get exec<span class="pl-c2"></span>Adobe_CoolType_Core/doc_setup get exec<span class="pl-c2"></span>Adobe_AGM_Image/doc_setup get exec<span class="pl-c2"></span>currentdict Adobe_AGM_Utils eq {end} if<span class="pl-c2"></span>%%EndSetup<span class="pl-c2"></span>%%Page: (Page 1) 1<span class="pl-c2"></span>%%EndPageComments<span class="pl-c2"></span>%%BeginPageSetup<span class="pl-c2"></span>/currentdistillerparams where<span class="pl-c2"></span>{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse<span class="pl-c2"></span>{ userdict /AI11_PDFMark5 /cleartomark load put<span class="pl-c2"></span>userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}<span class="pl-c2"></span>{ userdict /AI11_PDFMark5 /pdfmark load put<span class="pl-c2"></span>userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse<span class="pl-c2"></span>[/NamespacePush AI11_PDFMark5<span class="pl-c2"></span>[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5<span class="pl-c2"></span>[{ai_metadata_stream_123}<span class="pl-c2"></span>currentfile 0 (%  &amp;&amp;end XMP packet marker&amp;&amp;)<span class="pl-c2"></span>/SubFileDecode filter AI11_ReadMetadata_PDFMark5<span class="pl-c2"></span>&lt;?xpacket begin=&quot;﻿&quot; id=&quot;W5M0MpCehiHzreSzNTczkc9d&quot;?&gt;</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x:xmpm</span>e<span class="pl-ii">t</span>a <span class="pl-ii">xmlns:x=&quot;</span>ad<span class="pl-ii">o</span>be<span class="pl-ii">:ns:m</span>e<span class="pl-ii">t</span>a<span class="pl-ii">/&quot;</span> <span class="pl-ii">x:xmptk=&quot;</span>3<span class="pl-ii">.</span>1<span class="pl-ii">.</span>1<span class="pl-ii">-</span>111<span class="pl-ii">&quot;</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">   <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">r</span>df<span class="pl-ii">:R</span>DF <span class="pl-ii">xmlns:r</span>df<span class="pl-ii">=&quot;http://www.w</span>3<span class="pl-ii">.org/</span>1999<span class="pl-ii">/</span>02<span class="pl-ii">/</span>22<span class="pl-ii">-r</span>df<span class="pl-ii">-synt</span>a<span class="pl-ii">x-ns#&quot;</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line">      <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">r</span>df<span class="pl-ii">:</span>De<span class="pl-ii">s</span>c<span class="pl-ii">ription</span> <span class="pl-ii">r</span>df<span class="pl-ii">:</span>ab<span class="pl-ii">out=&quot;&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-s">            <span class="pl-ii">xmlns:</span>dc<span class="pl-ii">=&quot;http://purl.org/</span>dc<span class="pl-ii">/</span>e<span class="pl-ii">l</span>e<span class="pl-ii">m</span>e<span class="pl-ii">nts/</span>1<span class="pl-ii">.</span>1<span class="pl-ii">/&quot;</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span>dc<span class="pl-ii">:</span>f<span class="pl-ii">orm</span>a<span class="pl-ii">t</span><span class="pl-pds">&gt;</span></span><span class="pl-smi">application</span><span class="pl-smi">/postscript</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/</span>dc<span class="pl-ii">:</span>f<span class="pl-ii">orm</span>a<span class="pl-ii">t</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span>dc<span class="pl-ii">:titl</span>e<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">r</span>df<span class="pl-ii">:</span>A<span class="pl-ii">lt</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line">               <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">r</span>df<span class="pl-ii">:li</span> <span class="pl-ii">xml:l</span>a<span class="pl-ii">ng=&quot;x-</span>defa<span class="pl-ii">ult&quot;</span><span class="pl-pds">&gt;</span></span><span class="pl-smi">TUeLOG_P_CMYK</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/r</span>df<span class="pl-ii">:li</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/r</span>df<span class="pl-ii">:</span>A<span class="pl-ii">lt</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/</span>dc<span class="pl-ii">:titl</span>e<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">      <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/r</span>df<span class="pl-ii">:</span>De<span class="pl-ii">s</span>c<span class="pl-ii">ription</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line">      <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">r</span>df<span class="pl-ii">:</span>De<span class="pl-ii">s</span>c<span class="pl-ii">ription</span> <span class="pl-ii">r</span>df<span class="pl-ii">:</span>ab<span class="pl-ii">out=&quot;&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-s">            <span class="pl-ii">xmlns:x</span>a<span class="pl-ii">p=&quot;http://ns.</span>ad<span class="pl-ii">o</span>be<span class="pl-ii">.</span>c<span class="pl-ii">om/x</span>a<span class="pl-ii">p/</span>1<span class="pl-ii">.</span>0<span class="pl-ii">/&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-s">            <span class="pl-ii">xmlns:x</span>a<span class="pl-ii">pGImg=&quot;http://ns.</span>ad<span class="pl-ii">o</span>be<span class="pl-ii">.</span>c<span class="pl-ii">om/x</span>a<span class="pl-ii">p/</span>1<span class="pl-ii">.</span>0<span class="pl-ii">/g/img/&quot;</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">p:</span>C<span class="pl-ii">r</span>ea<span class="pl-ii">torTool</span><span class="pl-pds">&gt;</span></span><span class="pl-smi">Adobe</span> <span class="pl-smi">Illustrator</span> <span class="pl-smi">CS2</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">p:</span>C<span class="pl-ii">r</span>ea<span class="pl-ii">torTool</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">p:</span>C<span class="pl-ii">r</span>ea<span class="pl-ii">t</span>eDa<span class="pl-ii">t</span>e<span class="pl-pds">&gt;</span></span><span class="pl-c1">2007-03-05</span><span class="pl-smi">T13:36:45+01:00</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">p:</span>C<span class="pl-ii">r</span>ea<span class="pl-ii">t</span>eDa<span class="pl-ii">t</span>e<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">p:Mo</span>d<span class="pl-ii">i</span>f<span class="pl-ii">y</span>Da<span class="pl-ii">t</span>e<span class="pl-pds">&gt;</span></span><span class="pl-c1">2007-03-05</span><span class="pl-smi">T13:36:45+01:00</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">p:Mo</span>d<span class="pl-ii">i</span>f<span class="pl-ii">y</span>Da<span class="pl-ii">t</span>e<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">p:M</span>e<span class="pl-ii">t</span>ada<span class="pl-ii">t</span>aDa<span class="pl-ii">t</span>e<span class="pl-pds">&gt;</span></span><span class="pl-c1">2007-03-05</span><span class="pl-smi">T13:36:45+01:00</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">p:M</span>e<span class="pl-ii">t</span>ada<span class="pl-ii">t</span>aDa<span class="pl-ii">t</span>e<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">p:Thum</span>b<span class="pl-ii">n</span>a<span class="pl-ii">ils</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">r</span>df<span class="pl-ii">:</span>A<span class="pl-ii">lt</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">               <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">r</span>df<span class="pl-ii">:li</span> <span class="pl-ii">r</span>df<span class="pl-ii">:p</span>a<span class="pl-ii">rs</span>e<span class="pl-ii">Typ</span>e<span class="pl-ii">=&quot;R</span>e<span class="pl-ii">sour</span>ce<span class="pl-ii">&quot;</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line">                  <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">pGImg:wi</span>d<span class="pl-ii">th</span><span class="pl-pds">&gt;</span></span><span class="pl-c1">256</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">pGImg:wi</span>d<span class="pl-ii">th</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line">                  <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">pGImg:h</span>e<span class="pl-ii">ight</span><span class="pl-pds">&gt;</span></span><span class="pl-c1">56</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">pGImg:h</span>e<span class="pl-ii">ight</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line">                  <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">pGImg:</span>f<span class="pl-ii">orm</span>a<span class="pl-ii">t</span><span class="pl-pds">&gt;</span></span><span class="pl-smi">JPEG</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">pGImg:</span>f<span class="pl-ii">orm</span>a<span class="pl-ii">t</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line">                  &lt;xapGImg:image&gt;/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&amp;#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&amp;#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&amp;#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAOAEAAwER&amp;#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&amp;#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&amp;#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&amp;#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&amp;#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&amp;#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&amp;#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&amp;#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&amp;#xA;FXYq80/P/XP0f5FNijUm1WdIKDr6aH1XP/CKv05GT0fsxpvE1XF0gL+PIJL/AM426GItJ1TW3X47&amp;#xA;qZbWFj14Qjk9PZmkH/A4IuZ7W6m8kMY/hF/P+z7XsuTeQdirsVdirsVdirsVdirsVdirsVdirsVd&amp;#xA;irsVdirsVdirsVdirsVfAH+P/wA2P+pk17/pNvP+a86/wMP82PyDHdQP5m/mWpIPmvWQRsQdQuq1&amp;#xA;/wCRmH8ti/mx+QQrL+YP5rOoZfMuusp3DC9vCCP+Dwfl8P8ANj8gnd9Mf84vt5svfKup615i1O/1&amp;#xA;B7u6EFml/PNPwjt0+JoxKzcebyEGnXjmj7T4BMRiAKHRkHzv5v8AzH/MO38263BB5o1eKCK/ukii&amp;#xA;S/uVRUWZgqqokoAB0GbnDpsZhEmMeQ6Bieb7P/Lu6ubv8v8AyxdXUz3F1caTYyzzysXkkke2Rmd2&amp;#xA;apZmJqSc5nUADJID+cfvZPnL/nJnzp5x0f8AMlbPSNd1HTrT6hA/1e0u54I+bNJVuEbqtTTrm67M&amp;#xA;wwliuUQd+5Bemf8AOLWu65rX5f6hdazqNzqV0mrTRJPeTSTyCMW1uwQNIWIUFiae+YPamOMcgEQB&amp;#xA;6f0lQ9izWpfOf/OReufW/NdppKNWPTLcM48Jbg8j/wAk1TK5c30H2U03DglkPOcvsH7be0flxof6&amp;#xA;E8kaPp7LxlW3WWcd/Vm/euD8memTjyeP7W1Hjamc+l0PcNgyTC652KuxVg35x27jybPqMF3e2d5Z&amp;#xA;yW6wS2V5dWm1xdQxyc1t5IlkqhIHMHj2pmVoz66oEHvAPQ96QEkvfzB1bQ/Mt15Y0PSbrU7LQ57O&amp;#xA;G8Drqeo3cy39JpJFuytwkfoJLypPJ8QBClaAZaNOJx45EAyv+aBt5efkqJ1LzV5o1vQvO08Vva2m&amp;#xA;gaXDq2nRyc5frzz2UToZloojCFxsOopWuRjijGUBzkeE+W6pbZ/mR5t0XytfpqdhZm903y5Bremt&amp;#xA;FLLKjR7xCO5LCNi9UDEpQb07VMzp4SmKJoz4T+xSivMHnTzF+hPNNhrVnbRX2iy6U6mwublUaO+u&amp;#xA;EKp6q+hLyj4kFlIDeAG2Rx4Y8UTE7Hi5gdEgJjD+YetR/mTceW9Vht9L0/m66VHNDdNcX6Jb+qZb&amp;#xA;adR9Waj7GP7X05E6ePhcQ3PXlt7+qEi17zX5w1z8pr3zNNb2tla3jafd6HBbzS/WVU38JRbiQrw+&amp;#xA;IBSSg70I8bYYoRzCO5q7+XRQmOpfmnr+j6fqFvqenWz67Z6vaaMhszc3FsWv4EuY5fTSM3D+nHLQ&amp;#xA;oi8nYbUrtCOljIij6TEneum3uVkPljzJreteUdQvdUsJdMv7ZrqAcobi2EqxLWO5ijukimRHBBAY&amp;#xA;VBynLjjGYANjbu+Wysd0DWdUmh/KUvfTyHUtOd9RLSu31h10oPymqf3jCT4qtX4t+uXZIAHLtyO3&amp;#xA;+mUckPoX5m+adQ023l1nT7OGDWNH1G/sHsppxIr6dwSUSEhSvqesCvBqrTqexyaaAPpJ2kBv5rSH&amp;#xA;078ztX0ry7pliLOKW/1DQdHu/LMbvLIbi5vWS2limeRy7+lLLGxPKvA7nJS0wlIm9hKXF8N1TXT/&amp;#xA;AM0NevvOT6Va6O9xpdtqkmjXk8Vtes0bQpVrtrgRm0SP1PhMRk5gUau9MrlpYiFk71fT5Vz+KpXN&amp;#xA;+aP5gJ5RtPMb6ZYx2N3eywS3ccd5dpZ2ts80clzcxQ/vKO0S04VC9WO9BMaXHxmNm68hZ22C0u80&amp;#xA;+b9WktdZ1DQ7qA3o8mDVYNQikuDb1EshkeGEsEDcQxjZk5A0DbVGOLCLAkNvEql6N6v+aXnLSZbb&amp;#xA;SINLTV9ZtNLg1K/W1tb+cXJnkZUghFvHP6LcI6mSY8S21PBhpYS9V1G65j8fJSp+a/MfmePUPMEH&amp;#xA;l+VbK8l1ry9aerdvO4WO+SEFVi58IvjKrJwUVUt+1Qg4scajxbjhl9lq9bthci2iF0Ua5CL67RAq&amp;#xA;henxFAxJC16VOa81eyFTAr87fO3/ACmev/8AbRu/+T752WD+7j7gxPN9w/k7/wCSs8rf9s6D/iGc&amp;#xA;trP72XvLJmOYyvzt87f8pnr/AP20bv8A5PvnZYP7uPuDE833b+WP/ktfKf8A2xtP/wCoWPOU1X97&amp;#xA;L+sfvZB8u/8AOV//AJNNf+2db/8AE5M3vZP918USer/84hf+S11L/tsz/wDULbZgdr/3o/q/pKh7&amp;#xA;gzBQWY0UbknoBmqS+T7UN54/NdSQZIdS1Euw/wCXWNuVPogTKub6jP8AwLQecIf7I/8AHi+pdW1b&amp;#xA;TdI0241PU7lLSwtEMlxcSmiqo/zoANydhl8IGRoc3y54lqv/ADl55Jt7ww6dpN9f26kg3LenAG90&amp;#xA;VizEf63HNpDsjIRuQFsM/wDy4/OTyX5+EkOkSyW+owLzm027UJME6c04s6Otf5W27gVzD1Ojnh+r&amp;#xA;l3qznMVUk86yeVovLV3J5qkSLQkMLXckjOigiZDFVoyH/veHT9WW4RPiHB9SsRXVfyZ1/XLLzJb6&amp;#xA;ik2pXd3DpkM9tPdQrcXUY9WCKaOIokhQCqmRSOgr0zI4c0ImJGwF9OSWUTeQPKs17fXj2snPUUmS&amp;#xA;8iW4uEgf6zH6U7+gsgiEkifCzheW3XKBnnQF8ltKfMFr+WFveyaLrIEd1daJJbPblrr4tItOTuvJ&amp;#xA;DQcNzWvPLMZykcUf53l9RVMbXRvJPmnTbjV7eIXtj5jS1luLhXnQTpZtytzx5IU4N4AV71yBnPGe&amp;#xA;E7GN/bzVV/wF5ZPmKLzC8M0upQSSTwerdXMkEc0qem8sdu8jQo5T4aqmDx5cPD09w+9ClF+W3k2K&amp;#xA;1urNLKT6nd8PUtTc3JhURzC4RYYzJxhUSjnxjCiuE6idg3uPIJtEap5F8q6rBqcN9YiZNYmhub8+&amp;#xA;pKrNNbxpFDIjKwaJkSFQDHx6e5yMc841R5ITDRtE0/R7BbGyEnoAliZ5ZbiRmb7TPJM0jsT7nIzm&amp;#xA;ZGyqSaF+WXk3QtTh1LTrSVbi0R4rBZrm4nitY5f7xLaKWR0iDb14jvTptlmTUzkKJ+wb+9UXB5E8&amp;#xA;qwW1nbRWPGDT7a6sbRPVmPC3vipuEqXqefpruakdiMic8ySb5kH5LbY8j+VQ2gP9QUt5Xj9LQizy&amp;#xA;N9XQxLDQVY8/gRR8fLpXrvj48/Vv9XNVsXkTyzD5gl1+G3li1GeQTz+nc3CQPMF4CV7dZBAz8duR&amp;#xA;SuJzyMeHp8Pv5rald/l55XudFg0YRXFtYWxmMCWt5dQMPrLM0wLxyqzhy7VDEjemEaiYlxdfcE2q&amp;#xA;p5C8pR2zWqaeq276Z+hGiDyBTp/xfuKcv8s/F9r3x8ed3fW/ihBT/ld5OnGnGa3uHl0y3+pwXP1y&amp;#xA;7WZ7ckt6M0qyq8sfI1CuSB0FBtkhqZi/PyCbR2reRfLGqxapHeWhY6y0El/IksqOZLQKLeRGVh6b&amp;#xA;R8FoUp71yEM8o1R5fpRadwQpDDHChYpGoRS7NI5Cig5O5ZmPiWNTlZNqvwK/O3zt/wApnr//AG0b&amp;#xA;v/k++dlg/u4+4MTzfcP5O/8AkrPK3/bOg/4hnLaz+9l7yyZjmMr87fO3/KZ6/wD9tG7/AOT752WD&amp;#xA;+7j7gxPN92/lj/5LXyn/ANsbT/8AqFjzlNV/ey/rH72QfLv/ADlf/wCTTX/tnW//ABOTN72T/dfF&amp;#xA;Enq//OIX/ktdS/7bM/8A1C22YHa/96P6v6Soejfmlrn6F8h6vdq3GaSE20B7+pcfuwR7qGLfRmol&amp;#xA;ydr2NpvG1UI9Ls/Dd5J/zjhof1jzBqOsutY7CAQxE/78uD1HySMj6cjHm9T7WanhxRxj+I38B+0/&amp;#xA;YgP+cwPNN0n6E8rwyMlvKr396gO0lG9OAH2Uhz93hm/7IxDefweBLFvyYX8gbXytPL57uLebW7yV&amp;#xA;19CeO5b0bdaKgT0l4hmNW5A16ZfrfzBn+7+ke5Q8/wBE1mz8q/mjb6l5fumuNM0/VD9TuByUzWfq&amp;#xA;laNUK37yE0bbvmZOByYakNzH7VHN9+5yKXm3/ORsckn5M+YUjUu5+p0VRUn/AE6DsMzezj+/j8fu&amp;#xA;KCwybzVFqC+SYtG8wS60Y/NFsmp3cFhLpStHIjFY5IeESuoA67++ZIxcPHxRr0bb2ySvybe+dLbz&amp;#xA;7ok66zql/wDpLUPM1pJp97cSSWpTT4OdoODCi8pG3b2FNhlmYQOM7RFCHLnvzU82OeSdQvdU80Wl&amp;#xA;1qOo6jqOvnQ9bj1uK/MpFrdATcYIlkUKg9Pi3BDt7dMuzxEYEAAR4o1XUKEz8gHznoeiPFoV9qFx&amp;#xA;LeeSbnUrewmkeSOG9jvRCptY6URliqVUdW+eQ1HBKXqA2yV8K6qh9B1Lz1qega4/lnzBrF9Z6Ppd&amp;#xA;jrElxcyzchq8RWW9tBI3FnQr63KKpUsB12JOSOOMhxxiLJH+b0P7VX+Ztb/MuTyhonmCbWL3SrDz&amp;#xA;Xq17d3sr3F1HDY29UWwtvUhWWWGJgJD8C/FtXHFDFxmNAmER3b95V2vX3n64s9LM/mXU/rVn5Tut&amp;#xA;RN1p013bR3E9veyCBpEmjgkJaIJyLRqzU6kdRjGME1EbzA3ruWn0f5Qu7u88paJeXjF7u5sLWa5d&amp;#xA;hQtJJCrOSNurHNNlAEyBysoKbZWrsVdirsVdirsVdirsVdirsVfnb52/5TPX/wDto3f/ACffOywf&amp;#xA;3cfcGJ5vuH8nf/JWeVv+2dB/xDOW1n97L3lkzHMZX58/mdp0mnfmL5ms5FZfT1O6MYf7RjeZnjY9&amp;#xA;PtIwOdhpZXiifIMS+mvyf/PX8vx+X+ladrWrRaZqej2sdnPBcBl5JbqI43iYAh+SKNh8Va7dzotZ&amp;#xA;ocniExFglkHz7+ePnjTvOf5hXmraWWbTIo47WzldeBkSIGr8TuAzsxWu9KVp0zcaHAcWMA82JL6I&amp;#xA;/wCcTtPntfyukmkUql9qVxcQk9GQRxQVHtyhYZp+1ZXl9wSFD/nJTXONrpGho28jvezr4BB6cX3l&amp;#xA;n+7NTJ7P2R03qnlPT0j7z+hlP5EaH+jfIFvcOtJtTlku3r1419OMfLjHyHzwxdZ7S6nxNUR0gAP0&amp;#xA;n73jn/OYmlXKeYvL+rEVtp7OS1VvCSCUyGvzE4pnQdjzHDIebz5Qn5I/kd+Xvn/yk+pX+o6jFq1t&amp;#xA;cPBe21rLboiD7UTBZIZGoyHrXqD4ZPW67JhnQAr8ea0zOf8A5xg/Jy21W10mfzDqUWqXgZ7Sya6s&amp;#xA;xNIsY5Myp9W5EADMUdqZiCeEUPI/rWnv+ahKSebvNEHlvTIb+aBrhJru1swiEKQ13MsIap7KXrlu&amp;#xA;LFxmvIn5Ksk85aTb6zrGn38iWMGjQWVxcX9xIscJF+80ca1anEhoKbncsMRhJiCN7v7Fam86aNLp&amp;#xA;kOo6Pd2mq28t9Bp5khuoRGJJ5lhID1Ks686hBu3briMMgakCNr5KmFvr+h3EVtLDqFu8d7LJb2bC&amp;#xA;VKTTRFxJHFv8bL6T1C+B8Micch05KhYfOnlCe2vbmDWrGa307/e+WO4idYa7D1CrHjU7CvXCcMwQ&amp;#xA;KO60pDz95INzZWw16wM+okrYRi4iJmIkMP7v4virKpRfFthvh8DJRPCdlS28/M7y/pjRrrMkNibn&amp;#xA;VptItW+tW7qTApZp5GLoI1FKOp+JWKqRUjJjTSl9O/pvkU0yG21/Q7pbRrfULaZb9pI7EpMjeu8H&amp;#xA;L1Vhof3hTg3LjWlDlRxyF2OSFC/82+V9O1a10i/1a0tdUvafVbKWZEmk5HivFCa/Edl8TsMMcUyD&amp;#xA;IA0FSnRfP8Gseeda8sWkds0WiKouLoXkbTvKVRnVLRVLcIzJwdy2z/DSuWTwGOMTP8Xl+lUFof5i&amp;#xA;6xe65fabqflxtHttJ4/pfUJ761aK2EkBmiLcT8QYUFV6V3yU9PERBErvlsU0yJPOPlN9Gk1tNZsm&amp;#xA;0eIlZdQW4jMCsOqmQNxDb9OuU+DPi4aNoSeX8z/LEHmKLTbi/sodMuNPi1C01h7uJYZmluHgESVo&amp;#xA;rfYryD/Rtlg00jGwDd1VJpOL7zf5UsL9NOvtYsrW/cxhLWa4iSUmavp0RmB+PiaZXHDMiwDSG7rz&amp;#xA;d5WtNag0O61a0g1i5p6GnyTIsz8vs0QmvxdvHtiMUzHiAPCqXWXn/RvqWtX2sSQ6PZ6NqU2mSXFx&amp;#xA;MojdoghVwzBKFxIPh3+nJnBKwI7ki00jbvzt5Ps9MtdUu9bsbfTb4hbO9kuIlhlJ/kctxanenTvk&amp;#xA;RhmSQAbCF1t5y8o3Vpc3ttrdjNZWaLLdXcdzE0MUbsyqzyBuCgtGwBJ7YDhmDRBsqnGVq+QPM3/O&amp;#xA;NX5p6h5k1W/trS1a3u7y4nhJuYwSkkrOtQemxzo8XaWKMQDew7kEPp38u9Ev9C8i6Fo+oKq3thZx&amp;#xA;QXCowZQ6LQ0Ydc0WomJZJSHIlLIspV5H+cv/ADj/AKf58uRrOnXS6b5hVFjeR1LQXCpsvq8fiVlG&amp;#xA;wcV22p4bHR684hwkXFaeFXn/ADi5+bcExjis7S7StPWhuowtPH976TU/2ObUdqYT1PyRwsj8o/8A&amp;#xA;OI/mi5vI5fNF/b6fYKwMsFoxnuXUdQCVESV/mq3yynN2vAD0CytPqHRdG03RNJtNJ0yEW9hZRrDb&amp;#xA;wr0Cr4+JPUnuc0M5mRJPMpfMv5r6hP5k/M+6tLX94Y5o9LtF6/Eh4MP+RzNlBfTexMQ0+iEpdxmf&amp;#xA;v+6n09pmnwadptpp9vtBZwxwRf6sahB+Ay0Pm2bKckzM85En5pH+YXkHRfPPlubQ9VDIrES2t1HT&amp;#xA;1IJlBCyLXY9SCO4Jy/T55YpcQa3zRff84zfm9oGoSSeXLyK7Q1WO7tLo2cxQno6uY+PuA7D3zdjt&amp;#xA;PDMeofZaKZN+XP8AzjN5wt/Mtn5j81awLWaznS5SO0kae6kkjaoDzOOCqab05VG22UantOBgYwHP&amp;#xA;5Jp9LZpFYt+Zfl7Ute8qva6WqSajbXVpfWsEr+mkrWlwk5jL0bjzVCAadaV2y/TZBGdnlRHzChiG&amp;#xA;peT/ADr5ks/N15qOlwadPri6RbWWmPcRzsIdNuWlleaRB6fxiVqKK9MyI5oQMQDfDxb+8JTHUPIm&amp;#xA;sPqWry2kEMdrdeYtD1S2RWVR9V09LQTniOhBt3ovfIRzxoX/ADJD53+tUJF+VurP5s155Jkh8vyR&amp;#xA;ahN5fZTWWG91qFI7tyvYRsjlP+MhyR1Q4I/ztr90eX48ltItN/KnzMfJ2tWN3p7R62+hDQ7SebUV&amp;#xA;uYZfTNV9GIRRiGLkvJebclrSnfLpaqPGCD6eLi5Kn3m/yZ5pHnOw1PydY/o2VRaWtxqUd1CtmbKG&amp;#xA;QySRT2DxkniDSP0j37UynDmhwETN89q3v3qvn8n+arOOC6tbJLye2833OuC1EyRl7O4inhDB3+EM&amp;#xA;vrhuJ8MRmgdia9AHx2VC+RPLsn/K0vMUqSJPoHl6a4/Q4T7MV5rAinvYgV+HlC0ZBXt6mHPk/dR/&amp;#xA;nS5+6PL8eSqfnryF5u1LWvMdrp2n21zp/mz9G11iSZY3082JAcmIqXlqF5JwPU74cGeEYxJO8L27&amp;#xA;7W2deXdEv7HzL5rv7hVFtq15bT2ZDAkpFYQW7ch2/eRNmLkmDGIHQfpJQxTzh+XvmDWbTz7BamON&amp;#xA;tefTZdNLScef1BImkRyA3Dm0RSpHfL8OojEwv+G7+KUDb/l3rh0yHU/0Wy6tFrdtrd1pt9qK3T3X&amp;#xA;1a2aDeZYUiST46qNwSqlmFdpnURur24asCq3TaY6z5I1rW7/AFLUrrSrS3muvK8+k2tuJEmEN1K8&amp;#xA;3wLIUjopjkUMwUDtvkIZoxAAJ+u0IfzJ+XOtajD5o9K3gkuNS0nSLHT5HZaiSzlme4XkRVR8SH3p&amp;#xA;7YceojHh8pSPzpb3QvmbyF5wvNe1yytbGGfTPMGqaZqi6+9wqzWK2Po+ogiKmRnAtysfA0o/Ub5L&amp;#xA;FngIgk7xiRXfd/rVVvvJfnC3vZtUs9Phv5bDzTLrlrYPOka3VtcWQt6q7ArHLE7EjmB02OCOaBFE&amp;#xA;1cK929qwPz95YOi+WtDttca20m8uLvXNSmT1mSG2tL4fvtNtrn6vdR+o6zKF/cGpU8SO+Xgy8UiY&amp;#xA;2RUR8R1IsfeqfX+jx6/q/kK20m3ex03X9Ltk13R5zWaLTtJliu7YybcirNyh5mnLkMqjPgEydzEm&amp;#xA;j5nY/rV7rmqQ7FXYq7FXYq7FXYqh9RuZbXT7q5hha4mghkkjt0BLSMilgigdSxFBgLZigJTESaBI&amp;#xA;37nz1+Vn5f8AmqT8wbTU9d0y5tre2aS8lmuI2RWmAPChIHxeowb6MgA972z2pgGkMMU4kmo7Hp/Z&amp;#xA;s+jcsfPnYq7FXYq7FXYq7FXYq7FXYq7FXYq4KAKAUG528TucVdirsVdirsVdirsVdirsVdiruIqW&amp;#xA;p8R2J70H+3ir/9k=&lt;/xapGImg:image&gt;</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">               <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/r</span>df<span class="pl-ii">:li</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/r</span>df<span class="pl-ii">:</span>A<span class="pl-ii">lt</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">p:Thum</span>b<span class="pl-ii">n</span>a<span class="pl-ii">ils</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line">      <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/r</span>df<span class="pl-ii">:</span>De<span class="pl-ii">s</span>c<span class="pl-ii">ription</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">      <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">r</span>df<span class="pl-ii">:</span>De<span class="pl-ii">s</span>c<span class="pl-ii">ription</span> <span class="pl-ii">r</span>df<span class="pl-ii">:</span>ab<span class="pl-ii">out=&quot;&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-s">            <span class="pl-ii">xmlns:x</span>a<span class="pl-ii">pMM=&quot;http://ns.</span>ad<span class="pl-ii">o</span>be<span class="pl-ii">.</span>c<span class="pl-ii">om/x</span>a<span class="pl-ii">p/</span>1<span class="pl-ii">.</span>0<span class="pl-ii">/mm/&quot;</span></span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-s">            <span class="pl-ii">xmlns:stR</span>ef<span class="pl-ii">=&quot;http://ns.</span>ad<span class="pl-ii">o</span>be<span class="pl-ii">.</span>c<span class="pl-ii">om/x</span>a<span class="pl-ii">p/</span>1<span class="pl-ii">.</span>0<span class="pl-ii">/sTyp</span>e<span class="pl-ii">/R</span>e<span class="pl-ii">sour</span>ce<span class="pl-ii">R</span>ef<span class="pl-ii">#&quot;</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">pMM:</span>D<span class="pl-ii">o</span>c<span class="pl-ii">um</span>e<span class="pl-ii">ntI</span>D<span class="pl-pds">&gt;</span></span><span class="pl-smi">uuid:9F8073C9CCAC11DB87329D181CF5A742</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">pMM:</span>D<span class="pl-ii">o</span>c<span class="pl-ii">um</span>e<span class="pl-ii">ntI</span>D<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">pMM:Inst</span>a<span class="pl-ii">n</span>ce<span class="pl-ii">I</span>D<span class="pl-pds">&gt;</span></span><span class="pl-smi">uuid:9F8073CACCAC11DB87329D181CF5A742</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">pMM:Inst</span>a<span class="pl-ii">n</span>ce<span class="pl-ii">I</span>D<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">x</span>a<span class="pl-ii">pMM:</span>De<span class="pl-ii">riv</span>edF<span class="pl-ii">rom</span> <span class="pl-ii">r</span>df<span class="pl-ii">:p</span>a<span class="pl-ii">rs</span>e<span class="pl-ii">Typ</span>e<span class="pl-ii">=&quot;R</span>e<span class="pl-ii">sour</span>ce<span class="pl-ii">&quot;</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">stR</span>ef<span class="pl-ii">:inst</span>a<span class="pl-ii">n</span>ce<span class="pl-ii">I</span>D<span class="pl-pds">&gt;</span></span><span class="pl-smi">uuid:64064939B1E911DBA958CD389CFB0E44</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/stR</span>ef<span class="pl-ii">:inst</span>a<span class="pl-ii">n</span>ce<span class="pl-ii">I</span>D<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line">            <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">stR</span>ef<span class="pl-ii">:</span>d<span class="pl-ii">o</span>c<span class="pl-ii">um</span>e<span class="pl-ii">ntI</span>D<span class="pl-pds">&gt;</span></span><span class="pl-smi">uuid:64064938B1E911DBA958CD389CFB0E44</span><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/stR</span>ef<span class="pl-ii">:</span>d<span class="pl-ii">o</span>c<span class="pl-ii">um</span>e<span class="pl-ii">ntI</span>D<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">         <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x</span>a<span class="pl-ii">pMM:</span>De<span class="pl-ii">riv</span>edF<span class="pl-ii">rom</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">      <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/r</span>df<span class="pl-ii">:</span>De<span class="pl-ii">s</span>c<span class="pl-ii">ription</span><span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line">   <span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/r</span>df<span class="pl-ii">:R</span>DF<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&lt;</span><span class="pl-ii">/x:xmpm</span>e<span class="pl-ii">t</span>a<span class="pl-pds">&gt;</span></span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">                                                                                                    </td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">                           </td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line">&lt;?xpacket end=&quot;w&quot;?&gt;<span class="pl-c2"></span>%  &amp;&amp;end XMP packet marker&amp;&amp;<span class="pl-c2"></span>[{ai_metadata_stream_123}<span class="pl-c2"></span>&lt;&lt;/Type /Metadata /Subtype /XML&gt;&gt;<span class="pl-c2"></span>/PUT AI11_PDFMark5<span class="pl-c2"></span>[/Document<span class="pl-c2"></span>1 dict begin /Metadata {ai_metadata_stream_123} def<span class="pl-c2"></span>currentdict end /BDC AI11_PDFMark5<span class="pl-c2"></span>%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0<span class="pl-c2"></span>Adobe_AGM_Utils begin<span class="pl-c2"></span>Adobe_AGM_Core/page_setup get exec<span class="pl-c2"></span>Adobe_AGM_Core/capture_currentpagedevice get exec<span class="pl-c2"></span>Adobe_CoolType_Core/page_setup get exec<span class="pl-c2"></span>Adobe_AGM_Image/page_setup get exec<span class="pl-c2"></span>%%EndPageSetup<span class="pl-c2"></span>Adobe_AGM_Core/AGMCORE_save save ddf<span class="pl-c2"></span>1 -1 scale 0 -425.193 translate<span class="pl-c2"></span>[1 0 0 1 0 0 ]  concat<span class="pl-c2"></span>% page clip<span class="pl-c2"></span>gsave<span class="pl-c2"></span>newpath<span class="pl-c2"></span>gsave % PSGState<span class="pl-c2"></span>0 0 mo<span class="pl-c2"></span>0 425.193 li<span class="pl-c2"></span>1996.8 425.193 li<span class="pl-c2"></span>1996.8 0 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>clp<span class="pl-c2"></span>[1 0 0 1 0 0 ] concat<span class="pl-c2"></span>218.466 70.8657 mo<span class="pl-c2"></span>0 70.8657 li<span class="pl-c2"></span>0 121.774 li<span class="pl-c2"></span>68.2822 121.774 li<span class="pl-c2"></span>68.2822 354.331 li<span class="pl-c2"></span>133.948 354.331 li<span class="pl-c2"></span>133.948 121.774 li<span class="pl-c2"></span>203.869 121.774 li<span class="pl-c2"></span>218.466 70.8657 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>false sop<span class="pl-c2"></span>/0 <span class="pl-c2"></span>[/DeviceCMYK] /CSA add_res<span class="pl-c2"></span>0.952941 0.913725 0.101961 0.0235294 cmyk<span class="pl-c2"></span>f<span class="pl-c2"></span>357.855 355.225 mo<span class="pl-c2"></span>436.404 355.225 458.344 314.097 458.344 269.605 cv<span class="pl-c2"></span>458.344 70.8657 li<span class="pl-c2"></span>396.545 70.8657 li<span class="pl-c2"></span>396.545 255.432 li<span class="pl-c2"></span>396.545 286.733 385.024 302.739 357.855 302.739 cv<span class="pl-c2"></span>330.691 302.739 319.167 286.733 319.167 255.432 cv<span class="pl-c2"></span>319.167 70.8657 li<span class="pl-c2"></span>257.37 70.8657 li<span class="pl-c2"></span>257.37 269.605 li<span class="pl-c2"></span>257.37 314.097 279.308 355.225 357.855 355.225 cv<span class="pl-c2"></span>f<span class="pl-c2"></span>809.355 259.25 mo<span class="pl-c2"></span>809.355 200.338 787.386 161.122 731.132 161.122 cv<span class="pl-c2"></span>678.128 161.122 649.947 202.007 649.947 259.25 cv<span class="pl-c2"></span>649.947 294.417 664.667 355.251 740.631 355.251 cv<span class="pl-c2"></span>771.438 355.251 795.653 338.976 807.209 329.583 cv<span class="pl-c2"></span>788.362 300.501 li<span class="pl-c2"></span>788.362 300.501 769.57 319.097 740.82 319.097 cv<span class="pl-c2"></span>713.858 319.097 702.378 299.558 702.378 272.537 cv<span class="pl-c2"></span>809.355 272.537 li<span class="pl-c2"></span>809.355 259.25 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>759.122 237.404 mo<span class="pl-c2"></span>703.1 237.404 li<span class="pl-c2"></span>703.1 236.68 li<span class="pl-c2"></span>703.1 224.601 706.279 196.575 731.132 196.575 cv<span class="pl-c2"></span>737.678 196.575 759.122 196.275 759.122 233.349 cv<span class="pl-c2"></span>759.122 237.404 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>f<span class="pl-c2"></span>537.362 425.193 mo<span class="pl-c2"></span>659.29 0 li<span class="pl-c2"></span>613.935 0 li<span class="pl-c2"></span>492.011 425.193 li<span class="pl-c2"></span>537.362 425.193 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>0.121569 0.929412 0.435294 0.0235294 cmyk<span class="pl-c2"></span>f<span class="pl-c2"></span>951.066 70.8628 mo<span class="pl-c2"></span>905.666 70.8628 li<span class="pl-c2"></span>905.666 77.7627 li<span class="pl-c2"></span>924.066 77.7627 li<span class="pl-c2"></span>924.066 139.463 li<span class="pl-c2"></span>931.966 139.463 li<span class="pl-c2"></span>931.966 77.7627 li<span class="pl-c2"></span>950.566 77.7627 li<span class="pl-c2"></span>951.066 70.8628 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>993.167 115.863 mo<span class="pl-c2"></span>993.167 114.763 li<span class="pl-c2"></span>993.167 102.863 991.767 98.1626 987.467 93.7627 cv<span class="pl-c2"></span>984.068 90.2627 979.367 88.3628 973.967 88.3628 cv<span class="pl-c2"></span>967.966 88.3628 963.068 90.563 959.066 95.2627 cv<span class="pl-c2"></span>954.866 100.263 953.066 105.663 953.066 114.063 cv<span class="pl-c2"></span>953.066 130.563 961.366 140.563 975.166 140.563 cv<span class="pl-c2"></span>981.568 140.563 987.568 138.363 991.967 134.363 cv<span class="pl-c2"></span>988.967 129.363 li<span class="pl-c2"></span>985.467 132.563 981.568 134.063 976.767 134.063 cv<span class="pl-c2"></span>971.766 134.063 967.166 132.263 964.366 127.963 cv<span class="pl-c2"></span>962.666 125.363 962.066 121.763 962.066 117.063 cv<span class="pl-c2"></span>962.066 115.863 li<span class="pl-c2"></span>993.167 115.863 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>984.867 109.963 mo<span class="pl-c2"></span>962.066 109.963 li<span class="pl-c2"></span>962.466 99.6626 966.466 94.4629 973.568 94.4629 cv<span class="pl-c2"></span>977.367 94.4629 980.867 96.1626 982.568 98.8628 cv<span class="pl-c2"></span>984.068 101.263 984.767 104.563 984.867 109.963 cv<span class="pl-c2"></span>1043.07 133.963 mo<span class="pl-c2"></span>1038.77 128.963 li<span class="pl-c2"></span>1035.87 132.463 1032.07 134.363 1028.07 134.363 cv<span class="pl-c2"></span>1020.07 134.363 1015.77 128.263 1015.77 117.063 cv<span class="pl-c2"></span>1015.77 109.763 1016.67 104.263 1018.57 100.763 cv<span class="pl-c2"></span>1020.37 97.3628 1024.07 95.1626 1027.97 95.1626 cv<span class="pl-c2"></span>1031.77 95.1626 1033.97 96.2627 1037.47 99.1626 cv<span class="pl-c2"></span>1041.77 93.7627 li<span class="pl-c2"></span>1038.17 90.7627 1034.47 88.3628 1028.17 88.3628 cv<span class="pl-c2"></span>1022.87 88.3628 1018.57 90.2627 1014.67 94.1626 cv<span class="pl-c2"></span>1010.37 98.4629 1007.17 104.463 1007.17 115.363 cv<span class="pl-c2"></span>1007.17 122.763 1008.67 128.263 1011.97 133.063 cv<span class="pl-c2"></span>1015.47 138.063 1020.77 140.563 1027.87 140.563 cv<span class="pl-c2"></span>1034.07 140.563 1038.47 138.663 1043.07 133.963 cv<span class="pl-c2"></span>1094.27 139.463 mo<span class="pl-c2"></span>1094.27 103.763 li<span class="pl-c2"></span>1094.27 100.163 1094.07 98.563 1093.47 96.563 cv<span class="pl-c2"></span>1092.07 91.9629 1086.67 88.6626 1080.67 88.6626 cv<span class="pl-c2"></span>1074.27 88.6626 1068.57 92.3628 1064.07 96.563 cv<span class="pl-c2"></span>1064.07 96.563 1064.37 92.9629 1064.37 89.7627 cv<span class="pl-c2"></span>1064.37 78.1626 li<span class="pl-c2"></span>1064.37 70.563 1063.07 66.3628 1063.07 66.3628 cv<span class="pl-c2"></span>1055.27 67.8628 li<span class="pl-c2"></span>1055.27 67.8628 1056.57 71.563 1056.57 78.063 cv<span class="pl-c2"></span>1056.57 139.463 li<span class="pl-c2"></span>1064.37 139.463 li<span class="pl-c2"></span>1064.37 104.063 li<span class="pl-c2"></span>1068.67 98.7627 1074.07 95.6626 1078.87 95.6626 cv<span class="pl-c2"></span>1081.37 95.6626 1083.47 96.4629 1084.67 97.6626 cv<span class="pl-c2"></span>1086.07 99.063 1086.57 101.363 1086.57 105.063 cv<span class="pl-c2"></span>1086.57 139.463 li<span class="pl-c2"></span>1094.27 139.463 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1151.87 139.463 mo<span class="pl-c2"></span>1151.87 101.663 li<span class="pl-c2"></span>1151.87 99.6626 1151.47 97.6626 1150.67 95.8628 cv<span class="pl-c2"></span>1148.67 91.4629 1143.87 88.563 1138.47 88.563 cv<span class="pl-c2"></span>1133.17 88.563 1127.97 91.063 1122.77 96.2627 cv<span class="pl-c2"></span>1122.77 92.1626 1120.97 88.4629 1120.97 88.4629 cv<span class="pl-c2"></span>1113.37 90.563 li<span class="pl-c2"></span>1113.37 90.563 1115.27 93.9629 1115.27 101.063 cv<span class="pl-c2"></span>1115.27 139.463 li<span class="pl-c2"></span>1122.87 139.463 li<span class="pl-c2"></span>1122.87 102.363 li<span class="pl-c2"></span>1126.47 98.563 1132.67 95.3628 1136.67 95.3628 cv<span class="pl-c2"></span>1138.97 95.3628 1141.06 96.1626 1142.17 97.4629 cv<span class="pl-c2"></span>1143.56 99.1626 1143.97 100.463 1143.97 105.763 cv<span class="pl-c2"></span>1143.97 139.463 li<span class="pl-c2"></span>1151.87 139.463 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1180.97 139.463 mo<span class="pl-c2"></span>1180.97 88.563 li<span class="pl-c2"></span>1172.87 89.8628 li<span class="pl-c2"></span>1172.87 139.463 li<span class="pl-c2"></span>1180.97 139.463 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1183.17 74.2627 mo<span class="pl-c2"></span>1183.17 70.8628 1180.47 68.1626 1177.06 68.1626 cv<span class="pl-c2"></span>1173.67 68.1626 1170.97 70.9629 1170.97 74.3628 cv<span class="pl-c2"></span>1170.97 77.6626 1173.67 80.3628 1177.06 80.3628 cv<span class="pl-c2"></span>1180.47 80.3628 1183.17 77.6626 1183.17 74.2627 cv<span class="pl-c2"></span>1234.06 124.663 mo<span class="pl-c2"></span>1234.06 117.263 1229.77 112.663 1220.77 110.763 cv<span class="pl-c2"></span>1214.17 109.363 li<span class="pl-c2"></span>1208.87 108.263 1206.97 105.963 1206.97 102.163 cv<span class="pl-c2"></span>1206.97 97.2627 1210.67 93.9629 1216.37 93.9629 cv<span class="pl-c2"></span>1220.77 93.9629 1224.47 95.4629 1228.87 97.563 cv<span class="pl-c2"></span>1231.77 91.7627 li<span class="pl-c2"></span>1227.56 89.3628 1221.77 87.7627 1216.56 87.7627 cv<span class="pl-c2"></span>1206.17 87.7627 1198.87 94.063 1198.87 103.063 cv<span class="pl-c2"></span>1198.87 109.963 1203.27 115.063 1211.47 116.763 cv<span class="pl-c2"></span>1217.67 118.063 li<span class="pl-c2"></span>1223.37 119.263 1225.87 121.763 1225.87 126.263 cv<span class="pl-c2"></span>1225.87 131.563 1221.87 134.863 1215.77 134.863 cv<span class="pl-c2"></span>1210.27 134.863 1205.06 133.263 1199.97 130.163 cv<span class="pl-c2"></span>1196.97 135.963 li<span class="pl-c2"></span>1202.06 139.063 1208.97 140.963 1215.27 140.963 cv<span class="pl-c2"></span>1226.47 140.963 1234.06 134.363 1234.06 124.663 cv<span class="pl-c2"></span>1283.47 133.963 mo<span class="pl-c2"></span>1279.17 128.963 li<span class="pl-c2"></span>1276.27 132.463 1272.47 134.363 1268.47 134.363 cv<span class="pl-c2"></span>1260.47 134.363 1256.17 128.263 1256.17 117.063 cv<span class="pl-c2"></span>1256.17 109.763 1257.06 104.263 1258.97 100.763 cv<span class="pl-c2"></span>1260.77 97.3628 1264.47 95.1626 1268.37 95.1626 cv<span class="pl-c2"></span>1272.17 95.1626 1274.37 96.2627 1277.87 99.1626 cv<span class="pl-c2"></span>1282.17 93.7627 li<span class="pl-c2"></span>1278.56 90.7627 1274.87 88.3628 1268.56 88.3628 cv<span class="pl-c2"></span>1263.27 88.3628 1258.97 90.2627 1255.06 94.1626 cv<span class="pl-c2"></span>1250.77 98.4629 1247.56 104.463 1247.56 115.363 cv<span class="pl-c2"></span>1247.56 122.763 1249.06 128.263 1252.37 133.063 cv<span class="pl-c2"></span>1255.87 138.063 1261.17 140.563 1268.27 140.563 cv<span class="pl-c2"></span>1274.47 140.563 1278.87 138.663 1283.47 133.963 cv<span class="pl-c2"></span>1334.67 139.463 mo<span class="pl-c2"></span>1334.67 103.763 li<span class="pl-c2"></span>1334.67 100.163 1334.47 98.563 1333.87 96.563 cv<span class="pl-c2"></span>1332.47 91.9629 1327.06 88.6626 1321.06 88.6626 cv<span class="pl-c2"></span>1314.67 88.6626 1308.97 92.3628 1304.47 96.563 cv<span class="pl-c2"></span>1304.47 96.563 1304.77 92.9629 1304.77 89.7627 cv<span class="pl-c2"></span>1304.77 78.1626 li<span class="pl-c2"></span>1304.77 70.563 1303.47 66.3628 1303.47 66.3628 cv<span class="pl-c2"></span>1295.67 67.8628 li<span class="pl-c2"></span>1295.67 67.8628 1296.97 71.563 1296.97 78.063 cv<span class="pl-c2"></span>1296.97 139.463 li<span class="pl-c2"></span>1304.77 139.463 li<span class="pl-c2"></span>1304.77 104.063 li<span class="pl-c2"></span>1309.06 98.7627 1314.47 95.6626 1319.27 95.6626 cv<span class="pl-c2"></span>1321.77 95.6626 1323.87 96.4629 1325.06 97.6626 cv<span class="pl-c2"></span>1326.47 99.063 1326.97 101.363 1326.97 105.063 cv<span class="pl-c2"></span>1326.97 139.463 li<span class="pl-c2"></span>1334.67 139.463 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1392.76 115.863 mo<span class="pl-c2"></span>1392.76 114.763 li<span class="pl-c2"></span>1392.76 102.863 1391.36 98.1626 1387.06 93.7627 cv<span class="pl-c2"></span>1383.66 90.2627 1378.96 88.3628 1373.56 88.3628 cv<span class="pl-c2"></span>1367.56 88.3628 1362.66 90.563 1358.66 95.2627 cv<span class="pl-c2"></span>1354.46 100.263 1352.66 105.663 1352.66 114.063 cv<span class="pl-c2"></span>1352.66 130.563 1360.96 140.563 1374.76 140.563 cv<span class="pl-c2"></span>1381.16 140.563 1387.16 138.363 1391.56 134.363 cv<span class="pl-c2"></span>1388.56 129.363 li<span class="pl-c2"></span>1385.06 132.563 1381.16 134.063 1376.36 134.063 cv<span class="pl-c2"></span>1371.36 134.063 1366.76 132.263 1363.96 127.963 cv<span class="pl-c2"></span>1362.26 125.363 1361.66 121.763 1361.66 117.063 cv<span class="pl-c2"></span>1361.66 115.863 li<span class="pl-c2"></span>1392.76 115.863 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1384.46 109.963 mo<span class="pl-c2"></span>1361.66 109.963 li<span class="pl-c2"></span>1362.06 99.6626 1366.06 94.4629 1373.16 94.4629 cv<span class="pl-c2"></span>1376.96 94.4629 1380.46 96.1626 1382.16 98.8628 cv<span class="pl-c2"></span>1383.66 101.263 1384.36 104.563 1384.46 109.963 cv<span class="pl-c2"></span>1479.76 119.663 mo<span class="pl-c2"></span>1479.76 70.8628 li<span class="pl-c2"></span>1471.66 70.8628 li<span class="pl-c2"></span>1471.66 118.663 li<span class="pl-c2"></span>1471.66 123.263 1471.36 126.263 1469.06 129.363 cv<span class="pl-c2"></span>1466.96 132.163 1462.66 133.663 1456.96 133.663 cv<span class="pl-c2"></span>1448.56 133.663 1444.86 129.963 1443.56 126.963 cv<span class="pl-c2"></span>1442.66 124.863 1442.36 120.463 1442.36 117.063 cv<span class="pl-c2"></span>1442.36 70.8628 li<span class="pl-c2"></span>1434.26 70.8628 li<span class="pl-c2"></span>1434.26 120.063 li<span class="pl-c2"></span>1434.26 123.063 1434.46 127.463 1436.26 130.763 cv<span class="pl-c2"></span>1439.96 137.563 1445.96 140.663 1456.56 140.663 cv<span class="pl-c2"></span>1464.86 140.663 1470.36 138.963 1474.56 135.363 cv<span class="pl-c2"></span>1478.66 131.863 1479.76 127.963 1479.76 119.663 cv<span class="pl-c2"></span>1536.86 139.463 mo<span class="pl-c2"></span>1536.86 101.663 li<span class="pl-c2"></span>1536.86 99.6626 1536.46 97.6626 1535.66 95.8628 cv<span class="pl-c2"></span>1533.66 91.4629 1528.86 88.563 1523.46 88.563 cv<span class="pl-c2"></span>1518.16 88.563 1512.96 91.063 1507.76 96.2627 cv<span class="pl-c2"></span>1507.76 92.1626 1505.96 88.4629 1505.96 88.4629 cv<span class="pl-c2"></span>1498.36 90.563 li<span class="pl-c2"></span>1498.36 90.563 1500.26 93.9629 1500.26 101.063 cv<span class="pl-c2"></span>1500.26 139.463 li<span class="pl-c2"></span>1507.86 139.463 li<span class="pl-c2"></span>1507.86 102.363 li<span class="pl-c2"></span>1511.46 98.563 1517.66 95.3628 1521.66 95.3628 cv<span class="pl-c2"></span>1523.96 95.3628 1526.06 96.1626 1527.16 97.4629 cv<span class="pl-c2"></span>1528.56 99.1626 1528.96 100.463 1528.96 105.763 cv<span class="pl-c2"></span>1528.96 139.463 li<span class="pl-c2"></span>1536.86 139.463 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1565.96 139.463 mo<span class="pl-c2"></span>1565.96 88.563 li<span class="pl-c2"></span>1557.86 89.8628 li<span class="pl-c2"></span>1557.86 139.463 li<span class="pl-c2"></span>1565.96 139.463 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1568.16 74.2627 mo<span class="pl-c2"></span>1568.16 70.8628 1565.46 68.1626 1562.06 68.1626 cv<span class="pl-c2"></span>1558.66 68.1626 1555.96 70.9629 1555.96 74.3628 cv<span class="pl-c2"></span>1555.96 77.6626 1558.66 80.3628 1562.06 80.3628 cv<span class="pl-c2"></span>1565.46 80.3628 1568.16 77.6626 1568.16 74.2627 cv<span class="pl-c2"></span>1623.26 89.6626 mo<span class="pl-c2"></span>1614.96 89.6626 li<span class="pl-c2"></span>1603.56 122.763 li<span class="pl-c2"></span>1601.96 127.263 1601.16 131.163 1601.16 131.163 cv<span class="pl-c2"></span>1600.96 131.163 li<span class="pl-c2"></span>1600.96 131.163 1599.96 126.763 1598.56 122.663 cv<span class="pl-c2"></span>1586.96 88.3628 li<span class="pl-c2"></span>1578.96 90.063 li<span class="pl-c2"></span>1596.86 139.963 li<span class="pl-c2"></span>1604.56 139.963 li<span class="pl-c2"></span>1623.26 89.6626 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1672.86 115.863 mo<span class="pl-c2"></span>1672.86 114.763 li<span class="pl-c2"></span>1672.86 102.863 1671.46 98.1626 1667.16 93.7627 cv<span class="pl-c2"></span>1663.76 90.2627 1659.06 88.3628 1653.66 88.3628 cv<span class="pl-c2"></span>1647.66 88.3628 1642.76 90.563 1638.76 95.2627 cv<span class="pl-c2"></span>1634.56 100.263 1632.76 105.663 1632.76 114.063 cv<span class="pl-c2"></span>1632.76 130.563 1641.06 140.563 1654.86 140.563 cv<span class="pl-c2"></span>1661.26 140.563 1667.26 138.363 1671.66 134.363 cv<span class="pl-c2"></span>1668.66 129.363 li<span class="pl-c2"></span>1665.16 132.563 1661.26 134.063 1656.46 134.063 cv<span class="pl-c2"></span>1651.46 134.063 1646.86 132.263 1644.06 127.963 cv<span class="pl-c2"></span>1642.36 125.363 1641.76 121.763 1641.76 117.063 cv<span class="pl-c2"></span>1641.76 115.863 li<span class="pl-c2"></span>1672.86 115.863 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1664.56 109.963 mo<span class="pl-c2"></span>1641.76 109.963 li<span class="pl-c2"></span>1642.16 99.6626 1646.16 94.4629 1653.26 94.4629 cv<span class="pl-c2"></span>1657.06 94.4629 1660.56 96.1626 1662.26 98.8628 cv<span class="pl-c2"></span>1663.76 101.263 1664.46 104.563 1664.56 109.963 cv<span class="pl-c2"></span>1714.26 88.6626 mo<span class="pl-c2"></span>1714.26 88.6626 1712.86 88.1626 1711.56 88.1626 cv<span class="pl-c2"></span>1706.46 88.1626 1701.16 91.3628 1697.56 96.4629 cv<span class="pl-c2"></span>1697.86 92.2627 1695.96 88.3628 1695.96 88.3628 cv<span class="pl-c2"></span>1688.16 90.4629 li<span class="pl-c2"></span>1688.16 90.4629 1689.86 93.7627 1689.86 101.063 cv<span class="pl-c2"></span>1689.86 139.463 li<span class="pl-c2"></span>1697.66 139.463 li<span class="pl-c2"></span>1697.66 108.263 li<span class="pl-c2"></span>1697.66 104.163 1698.26 102.663 1700.56 100.363 cv<span class="pl-c2"></span>1702.86 98.063 1705.86 96.7627 1708.86 96.7627 cv<span class="pl-c2"></span>1709.66 96.7627 1710.56 96.9629 1711.06 97.1626 cv<span class="pl-c2"></span>1714.26 88.6626 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1756.86 124.663 mo<span class="pl-c2"></span>1756.86 117.263 1752.56 112.663 1743.56 110.763 cv<span class="pl-c2"></span>1736.96 109.363 li<span class="pl-c2"></span>1731.66 108.263 1729.76 105.963 1729.76 102.163 cv<span class="pl-c2"></span>1729.76 97.2627 1733.46 93.9629 1739.16 93.9629 cv<span class="pl-c2"></span>1743.56 93.9629 1747.26 95.4629 1751.66 97.563 cv<span class="pl-c2"></span>1754.56 91.7627 li<span class="pl-c2"></span>1750.36 89.3628 1744.56 87.7627 1739.36 87.7627 cv<span class="pl-c2"></span>1728.96 87.7627 1721.66 94.063 1721.66 103.063 cv<span class="pl-c2"></span>1721.66 109.963 1726.06 115.063 1734.26 116.763 cv<span class="pl-c2"></span>1740.46 118.063 li<span class="pl-c2"></span>1746.16 119.263 1748.66 121.763 1748.66 126.263 cv<span class="pl-c2"></span>1748.66 131.563 1744.66 134.863 1738.56 134.863 cv<span class="pl-c2"></span>1733.06 134.863 1727.86 133.263 1722.76 130.163 cv<span class="pl-c2"></span>1719.76 135.963 li<span class="pl-c2"></span>1724.86 139.063 1731.76 140.963 1738.06 140.963 cv<span class="pl-c2"></span>1749.26 140.963 1756.86 134.363 1756.86 124.663 cv<span class="pl-c2"></span>1780.96 139.463 mo<span class="pl-c2"></span>1780.96 88.563 li<span class="pl-c2"></span>1772.86 89.8628 li<span class="pl-c2"></span>1772.86 139.463 li<span class="pl-c2"></span>1780.96 139.463 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1783.16 74.2627 mo<span class="pl-c2"></span>1783.16 70.8628 1780.46 68.1626 1777.06 68.1626 cv<span class="pl-c2"></span>1773.66 68.1626 1770.96 70.9629 1770.96 74.3628 cv<span class="pl-c2"></span>1770.96 77.6626 1773.66 80.3628 1777.06 80.3628 cv<span class="pl-c2"></span>1780.46 80.3628 1783.16 77.6626 1783.16 74.2627 cv<span class="pl-c2"></span>1822.46 89.6626 mo<span class="pl-c2"></span>1809.96 89.6626 li<span class="pl-c2"></span>1809.96 83.063 1810.96 75.2627 1810.96 75.2627 cv<span class="pl-c2"></span>1802.76 77.063 li<span class="pl-c2"></span>1802.76 77.063 1801.96 84.8628 1801.96 89.6626 cv<span class="pl-c2"></span>1795.46 89.6626 li<span class="pl-c2"></span>1795.46 95.563 li<span class="pl-c2"></span>1801.96 95.563 li<span class="pl-c2"></span>1801.96 129.763 li<span class="pl-c2"></span>1801.96 134.763 1803.26 137.963 1806.76 139.663 cv<span class="pl-c2"></span>1808.66 140.563 1810.66 141.063 1813.26 141.063 cv<span class="pl-c2"></span>1816.76 141.063 1819.56 140.363 1822.06 139.063 cv<span class="pl-c2"></span>1820.96 134.063 li<span class="pl-c2"></span>1819.56 134.763 1818.26 135.063 1816.06 135.063 cv<span class="pl-c2"></span>1811.16 135.063 1809.66 133.163 1809.66 127.663 cv<span class="pl-c2"></span>1809.66 95.563 li<span class="pl-c2"></span>1820.06 95.563 li<span class="pl-c2"></span>1822.46 89.6626 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1872.56 115.863 mo<span class="pl-c2"></span>1872.56 114.763 li<span class="pl-c2"></span>1872.56 102.863 1871.16 98.1626 1866.86 93.7627 cv<span class="pl-c2"></span>1863.46 90.2627 1858.76 88.3628 1853.36 88.3628 cv<span class="pl-c2"></span>1847.36 88.3628 1842.46 90.563 1838.46 95.2627 cv<span class="pl-c2"></span>1834.26 100.263 1832.46 105.663 1832.46 114.063 cv<span class="pl-c2"></span>1832.46 130.563 1840.76 140.563 1854.56 140.563 cv<span class="pl-c2"></span>1860.96 140.563 1866.96 138.363 1871.36 134.363 cv<span class="pl-c2"></span>1868.36 129.363 li<span class="pl-c2"></span>1864.86 132.563 1860.96 134.063 1856.16 134.063 cv<span class="pl-c2"></span>1851.16 134.063 1846.56 132.263 1843.76 127.963 cv<span class="pl-c2"></span>1842.06 125.363 1841.46 121.763 1841.46 117.063 cv<span class="pl-c2"></span>1841.46 115.863 li<span class="pl-c2"></span>1872.56 115.863 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1864.26 109.963 mo<span class="pl-c2"></span>1841.46 109.963 li<span class="pl-c2"></span>1841.86 99.6626 1845.86 94.4629 1852.96 94.4629 cv<span class="pl-c2"></span>1856.76 94.4629 1860.26 96.1626 1861.96 98.8628 cv<span class="pl-c2"></span>1863.46 101.263 1864.16 104.563 1864.26 109.963 cv<span class="pl-c2"></span>1897.66 139.463 mo<span class="pl-c2"></span>1897.66 88.563 li<span class="pl-c2"></span>1889.56 89.8628 li<span class="pl-c2"></span>1889.56 139.463 li<span class="pl-c2"></span>1897.66 139.463 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1899.86 74.2627 mo<span class="pl-c2"></span>1899.86 70.8628 1897.16 68.1626 1893.76 68.1626 cv<span class="pl-c2"></span>1890.36 68.1626 1887.66 70.9629 1887.66 74.3628 cv<span class="pl-c2"></span>1887.66 77.6626 1890.36 80.3628 1893.76 80.3628 cv<span class="pl-c2"></span>1897.16 80.3628 1899.86 77.6626 1899.86 74.2627 cv<span class="pl-c2"></span>1939.16 89.6626 mo<span class="pl-c2"></span>1926.66 89.6626 li<span class="pl-c2"></span>1926.66 83.063 1927.66 75.2627 1927.66 75.2627 cv<span class="pl-c2"></span>1919.46 77.063 li<span class="pl-c2"></span>1919.46 77.063 1918.66 84.8628 1918.66 89.6626 cv<span class="pl-c2"></span>1912.16 89.6626 li<span class="pl-c2"></span>1912.16 95.563 li<span class="pl-c2"></span>1918.66 95.563 li<span class="pl-c2"></span>1918.66 129.763 li<span class="pl-c2"></span>1918.66 134.763 1919.96 137.963 1923.46 139.663 cv<span class="pl-c2"></span>1925.36 140.563 1927.36 141.063 1929.96 141.063 cv<span class="pl-c2"></span>1933.46 141.063 1936.26 140.363 1938.76 139.063 cv<span class="pl-c2"></span>1937.66 134.063 li<span class="pl-c2"></span>1936.26 134.763 1934.96 135.063 1932.76 135.063 cv<span class="pl-c2"></span>1927.86 135.063 1926.36 133.163 1926.36 127.663 cv<span class="pl-c2"></span>1926.36 95.563 li<span class="pl-c2"></span>1936.76 95.563 li<span class="pl-c2"></span>1939.16 89.6626 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>0.952941 0.913725 0.101961 0.0235294 cmyk<span class="pl-c2"></span>f<span class="pl-c2"></span>961.896 246.903 mo<span class="pl-c2"></span>961.896 234.903 li<span class="pl-c2"></span>935.596 234.903 li<span class="pl-c2"></span>935.596 216.302 li<span class="pl-c2"></span>955.296 216.302 li<span class="pl-c2"></span>955.296 204.903 li<span class="pl-c2"></span>935.396 204.903 li<span class="pl-c2"></span>935.396 188.803 li<span class="pl-c2"></span>959.196 188.803 li<span class="pl-c2"></span>960.996 177.403 li<span class="pl-c2"></span>921.396 177.403 li<span class="pl-c2"></span>921.396 246.903 li<span class="pl-c2"></span>961.896 246.903 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>987.295 246.903 mo<span class="pl-c2"></span>987.295 194.503 li<span class="pl-c2"></span>973.895 196.603 li<span class="pl-c2"></span>973.895 246.903 li<span class="pl-c2"></span>987.295 246.903 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>988.895 181.603 mo<span class="pl-c2"></span>988.895 177.003 985.295 173.303 980.795 173.303 cv<span class="pl-c2"></span>976.195 173.303 972.395 177.003 972.395 181.603 cv<span class="pl-c2"></span>972.395 186.203 976.095 189.903 980.595 189.903 cv<span class="pl-c2"></span>985.195 189.903 988.895 186.203 988.895 181.603 cv<span class="pl-c2"></span>1044.7 246.903 mo<span class="pl-c2"></span>1044.7 209.503 li<span class="pl-c2"></span>1044.7 206.303 1044.39 204.103 1043.7 202.203 cv<span class="pl-c2"></span>1042.09 197.803 1037.09 194.803 1031.39 194.803 cv<span class="pl-c2"></span>1028.39 194.803 1024.9 195.603 1022.2 197.003 cv<span class="pl-c2"></span>1020 198.203 1018.3 199.403 1016.3 200.803 cv<span class="pl-c2"></span>1016.3 198.703 1015.6 196.503 1014.4 194.403 cv<span class="pl-c2"></span>1002.5 197.803 li<span class="pl-c2"></span>1003.7 201.203 1004.3 205.403 1004.3 209.803 cv<span class="pl-c2"></span>1004.3 246.903 li<span class="pl-c2"></span>1017.7 246.903 li<span class="pl-c2"></span>1017.7 210.703 li<span class="pl-c2"></span>1020.8 207.903 1024.3 206.103 1027 206.103 cv<span class="pl-c2"></span>1030.5 206.103 1031.5 207.803 1031.5 213.603 cv<span class="pl-c2"></span>1031.5 246.903 li<span class="pl-c2"></span>1044.7 246.903 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1104.5 246.903 mo<span class="pl-c2"></span>1103.59 244.903 1102.59 240.802 1102.59 228.203 cv<span class="pl-c2"></span>1102.59 175.003 li<span class="pl-c2"></span>1089.29 172.903 li<span class="pl-c2"></span>1089.29 190.503 li<span class="pl-c2"></span>1089.29 193.503 1089.5 197.003 1089.7 198.103 cv<span class="pl-c2"></span>1087.2 196.103 1084.29 195.203 1080.59 195.203 cv<span class="pl-c2"></span>1067.59 195.203 1058.69 206.203 1058.69 222.203 cv<span class="pl-c2"></span>1058.69 238.103 1066.89 248.201 1079.89 248.201 cv<span class="pl-c2"></span>1084.5 248.201 1088.39 246.801 1091.7 243.903 cv<span class="pl-c2"></span>1091.89 245.301 1092.09 246.101 1092.5 246.903 cv<span class="pl-c2"></span>1104.5 246.903 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1089.5 233.603 mo<span class="pl-c2"></span>1088.2 235.203 1085.39 236.903 1082.89 236.903 cv<span class="pl-c2"></span>1075.89 236.903 1073.59 233.302 1073.59 222.302 cv<span class="pl-c2"></span>1073.59 210.903 1076.19 205.903 1082.2 205.903 cv<span class="pl-c2"></span>1084.59 205.903 1087 207.003 1089.5 209.203 cv<span class="pl-c2"></span>1089.5 233.603 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1162.09 246.903 mo<span class="pl-c2"></span>1162.09 211.103 li<span class="pl-c2"></span>1162.09 206.203 1161.79 204.503 1160.79 201.603 cv<span class="pl-c2"></span>1159.19 197.103 1153.99 194.303 1147.49 194.303 cv<span class="pl-c2"></span>1142.29 194.303 1136.49 196.503 1132.99 199.803 cv<span class="pl-c2"></span>1132.99 199.203 1133.19 197.103 1133.19 195.503 cv<span class="pl-c2"></span>1133.19 185.303 li<span class="pl-c2"></span>1133.19 180.403 1132.89 175.603 1132.29 172.803 cv<span class="pl-c2"></span>1118.59 176.003 li<span class="pl-c2"></span>1119.19 178.103 1119.59 182.903 1119.59 187.703 cv<span class="pl-c2"></span>1119.59 246.903 li<span class="pl-c2"></span>1133.19 246.903 li<span class="pl-c2"></span>1133.19 210.203 li<span class="pl-c2"></span>1136.19 207.503 1140.49 205.503 1143.79 205.503 cv<span class="pl-c2"></span>1147.59 205.503 1148.99 207.403 1148.99 212.503 cv<span class="pl-c2"></span>1148.99 246.903 li<span class="pl-c2"></span>1162.09 246.903 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1221.89 221.103 mo<span class="pl-c2"></span>1221.89 212.803 1220.09 207.203 1215.99 202.403 cv<span class="pl-c2"></span>1211.59 197.203 1205.89 194.703 1198.59 194.703 cv<span class="pl-c2"></span>1184.79 194.703 1175.59 205.403 1175.59 221.502 cv<span class="pl-c2"></span>1175.59 237.603 1184.69 248.001 1198.59 248.001 cv<span class="pl-c2"></span>1206.49 248.001 1211.59 245.301 1215.49 240.903 cv<span class="pl-c2"></span>1219.89 235.903 1221.89 229.903 1221.89 221.103 cv<span class="pl-c2"></span>1207.29 221.002 mo<span class="pl-c2"></span>1207.29 233.103 1204.79 238.302 1198.99 238.302 cv<span class="pl-c2"></span>1196.39 238.302 1193.39 236.903 1192.19 234.103 cv<span class="pl-c2"></span>1191.09 231.502 1190.49 227.103 1190.49 221.203 cv<span class="pl-c2"></span>1190.49 216.103 1190.99 212.503 1191.89 209.803 cv<span class="pl-c2"></span>1192.99 206.603 1195.59 204.603 1198.79 204.603 cv<span class="pl-c2"></span>1201.19 204.603 1203.29 205.603 1204.59 207.303 cv<span class="pl-c2"></span>1206.39 209.603 1207.29 214.103 1207.29 221.002 cv<span class="pl-c2"></span>1274.79 195.703 mo<span class="pl-c2"></span>1260.79 195.703 li<span class="pl-c2"></span>1253.89 217.203 li<span class="pl-c2"></span>1252.29 222.302 1251.19 227.203 1250.79 230.203 cv<span class="pl-c2"></span>1250.09 226.903 1248.59 221.302 1247.49 217.903 cv<span class="pl-c2"></span>1240.09 194.803 li<span class="pl-c2"></span>1226.39 196.503 li<span class="pl-c2"></span>1244.99 246.903 li<span class="pl-c2"></span>1256.09 246.903 li<span class="pl-c2"></span>1274.79 195.703 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1324.39 225.502 mo<span class="pl-c2"></span>1324.39 222.403 li<span class="pl-c2"></span>1324.39 211.703 1322.29 204.803 1317.59 200.003 cv<span class="pl-c2"></span>1314.29 196.603 1308.7 194.603 1302.79 194.603 cv<span class="pl-c2"></span>1296 194.603 1290.89 196.803 1286.7 201.503 cv<span class="pl-c2"></span>1282.2 206.503 1280.29 212.603 1280.29 221.802 cv<span class="pl-c2"></span>1280.29 237.903 1289.79 248.301 1304.5 248.301 cv<span class="pl-c2"></span>1311.7 248.301 1317.89 246.001 1323.79 241.201 cv<span class="pl-c2"></span>1318.59 233.203 li<span class="pl-c2"></span>1314.5 236.603 1310.2 238.302 1305.59 238.302 cv<span class="pl-c2"></span>1298.7 238.302 1294.79 233.802 1294.79 225.903 cv<span class="pl-c2"></span>1294.79 225.502 li<span class="pl-c2"></span>1324.39 225.502 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1310.5 215.703 mo<span class="pl-c2"></span>1295 215.703 li<span class="pl-c2"></span>1295 215.502 li<span class="pl-c2"></span>1295 208.403 1297.89 204.403 1303 204.403 cv<span class="pl-c2"></span>1305.7 204.403 1307.59 205.403 1308.89 207.403 cv<span class="pl-c2"></span>1310.09 209.303 1310.5 211.303 1310.5 215.103 cv<span class="pl-c2"></span>1310.5 215.703 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1377.29 246.903 mo<span class="pl-c2"></span>1377.29 209.503 li<span class="pl-c2"></span>1377.29 206.303 1376.99 204.103 1376.29 202.203 cv<span class="pl-c2"></span>1374.69 197.803 1369.69 194.803 1363.99 194.803 cv<span class="pl-c2"></span>1360.99 194.803 1357.49 195.603 1354.79 197.003 cv<span class="pl-c2"></span>1352.59 198.203 1350.89 199.403 1348.89 200.803 cv<span class="pl-c2"></span>1348.89 198.703 1348.19 196.503 1346.99 194.403 cv<span class="pl-c2"></span>1335.09 197.803 li<span class="pl-c2"></span>1336.29 201.203 1336.89 205.403 1336.89 209.803 cv<span class="pl-c2"></span>1336.89 246.903 li<span class="pl-c2"></span>1350.29 246.903 li<span class="pl-c2"></span>1350.29 210.703 li<span class="pl-c2"></span>1353.39 207.903 1356.89 206.103 1359.59 206.103 cv<span class="pl-c2"></span>1363.09 206.103 1364.09 207.803 1364.09 213.603 cv<span class="pl-c2"></span>1364.09 246.903 li<span class="pl-c2"></span>1377.29 246.903 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>f<span class="pl-c2"></span>965.808 334.542 mo<span class="pl-c2"></span>965.808 285.743 li<span class="pl-c2"></span>957.707 285.743 li<span class="pl-c2"></span>957.707 333.542 li<span class="pl-c2"></span>957.707 338.142 957.407 341.142 955.107 344.243 cv<span class="pl-c2"></span>953.007 347.042 948.707 348.542 943.007 348.542 cv<span class="pl-c2"></span>934.607 348.542 930.907 344.842 929.607 341.842 cv<span class="pl-c2"></span>928.707 339.743 928.407 335.342 928.407 331.943 cv<span class="pl-c2"></span>928.407 285.743 li<span class="pl-c2"></span>920.307 285.743 li<span class="pl-c2"></span>920.307 334.943 li<span class="pl-c2"></span>920.307 337.943 920.507 342.342 922.307 345.642 cv<span class="pl-c2"></span>926.007 352.443 932.007 355.542 942.607 355.542 cv<span class="pl-c2"></span>950.907 355.542 956.407 353.842 960.607 350.243 cv<span class="pl-c2"></span>964.707 346.743 965.808 342.842 965.808 334.542 cv<span class="pl-c2"></span>1022.91 354.342 mo<span class="pl-c2"></span>1022.91 316.542 li<span class="pl-c2"></span>1022.91 314.542 1022.51 312.542 1021.71 310.743 cv<span class="pl-c2"></span>1019.71 306.342 1014.91 303.443 1009.51 303.443 cv<span class="pl-c2"></span>1004.21 303.443 999.007 305.943 993.807 311.142 cv<span class="pl-c2"></span>993.807 307.042 992.007 303.342 992.007 303.342 cv<span class="pl-c2"></span>984.407 305.443 li<span class="pl-c2"></span>984.407 305.443 986.307 308.842 986.307 315.943 cv<span class="pl-c2"></span>986.307 354.342 li<span class="pl-c2"></span>993.907 354.342 li<span class="pl-c2"></span>993.907 317.243 li<span class="pl-c2"></span>997.507 313.443 1003.71 310.243 1007.71 310.243 cv<span class="pl-c2"></span>1010.01 310.243 1012.11 311.042 1013.21 312.342 cv<span class="pl-c2"></span>1014.61 314.042 1015.01 315.342 1015.01 320.642 cv<span class="pl-c2"></span>1015.01 354.342 li<span class="pl-c2"></span>1022.91 354.342 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1052 354.342 mo<span class="pl-c2"></span>1052 303.443 li<span class="pl-c2"></span>1043.91 304.743 li<span class="pl-c2"></span>1043.91 354.342 li<span class="pl-c2"></span>1052 354.342 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1054.21 289.142 mo<span class="pl-c2"></span>1054.21 285.743 1051.5 283.042 1048.1 283.042 cv<span class="pl-c2"></span>1044.71 283.042 1042 285.842 1042 289.243 cv<span class="pl-c2"></span>1042 292.542 1044.71 295.243 1048.1 295.243 cv<span class="pl-c2"></span>1051.5 295.243 1054.21 292.542 1054.21 289.142 cv<span class="pl-c2"></span>1109.3 304.542 mo<span class="pl-c2"></span>1101 304.542 li<span class="pl-c2"></span>1089.6 337.642 li<span class="pl-c2"></span>1088 342.142 1087.2 346.042 1087.2 346.042 cv<span class="pl-c2"></span>1087 346.042 li<span class="pl-c2"></span>1087 346.042 1086 341.642 1084.6 337.542 cv<span class="pl-c2"></span>1073 303.243 li<span class="pl-c2"></span>1065 304.943 li<span class="pl-c2"></span>1082.9 354.842 li<span class="pl-c2"></span>1090.6 354.842 li<span class="pl-c2"></span>1109.3 304.542 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1158.91 330.743 mo<span class="pl-c2"></span>1158.91 329.642 li<span class="pl-c2"></span>1158.91 317.743 1157.5 313.042 1153.21 308.642 cv<span class="pl-c2"></span>1149.8 305.142 1145.1 303.243 1139.71 303.243 cv<span class="pl-c2"></span>1133.71 303.243 1128.8 305.443 1124.8 310.142 cv<span class="pl-c2"></span>1120.6 315.142 1118.8 320.542 1118.8 328.943 cv<span class="pl-c2"></span>1118.8 345.443 1127.1 355.443 1140.91 355.443 cv<span class="pl-c2"></span>1147.3 355.443 1153.3 353.243 1157.71 349.243 cv<span class="pl-c2"></span>1154.71 344.243 li<span class="pl-c2"></span>1151.21 347.443 1147.3 348.943 1142.5 348.943 cv<span class="pl-c2"></span>1137.5 348.943 1132.91 347.142 1130.1 342.842 cv<span class="pl-c2"></span>1128.41 340.243 1127.8 336.642 1127.8 331.943 cv<span class="pl-c2"></span>1127.8 330.743 li<span class="pl-c2"></span>1158.91 330.743 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1150.6 324.842 mo<span class="pl-c2"></span>1127.8 324.842 li<span class="pl-c2"></span>1128.21 314.542 1132.21 309.342 1139.3 309.342 cv<span class="pl-c2"></span>1143.1 309.342 1146.6 311.042 1148.3 313.743 cv<span class="pl-c2"></span>1149.8 316.142 1150.5 319.443 1150.6 324.842 cv<span class="pl-c2"></span>1200.3 303.542 mo<span class="pl-c2"></span>1200.3 303.542 1198.9 303.042 1197.6 303.042 cv<span class="pl-c2"></span>1192.5 303.042 1187.2 306.243 1183.6 311.342 cv<span class="pl-c2"></span>1183.9 307.142 1182 303.243 1182 303.243 cv<span class="pl-c2"></span>1174.2 305.342 li<span class="pl-c2"></span>1174.2 305.342 1175.9 308.642 1175.9 315.943 cv<span class="pl-c2"></span>1175.9 354.342 li<span class="pl-c2"></span>1183.7 354.342 li<span class="pl-c2"></span>1183.7 323.142 li<span class="pl-c2"></span>1183.7 319.042 1184.3 317.542 1186.6 315.243 cv<span class="pl-c2"></span>1188.9 312.943 1191.9 311.642 1194.9 311.642 cv<span class="pl-c2"></span>1195.7 311.642 1196.6 311.842 1197.1 312.042 cv<span class="pl-c2"></span>1200.3 303.542 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1242.9 339.542 mo<span class="pl-c2"></span>1242.9 332.142 1238.6 327.542 1229.6 325.642 cv<span class="pl-c2"></span>1223 324.243 li<span class="pl-c2"></span>1217.7 323.142 1215.8 320.842 1215.8 317.042 cv<span class="pl-c2"></span>1215.8 312.142 1219.5 308.842 1225.2 308.842 cv<span class="pl-c2"></span>1229.6 308.842 1233.3 310.342 1237.7 312.443 cv<span class="pl-c2"></span>1240.6 306.642 li<span class="pl-c2"></span>1236.4 304.243 1230.6 302.642 1225.4 302.642 cv<span class="pl-c2"></span>1215 302.642 1207.7 308.943 1207.7 317.943 cv<span class="pl-c2"></span>1207.7 324.842 1212.1 329.943 1220.3 331.642 cv<span class="pl-c2"></span>1226.5 332.943 li<span class="pl-c2"></span>1232.2 334.142 1234.7 336.642 1234.7 341.142 cv<span class="pl-c2"></span>1234.7 346.443 1230.7 349.743 1224.6 349.743 cv<span class="pl-c2"></span>1219.1 349.743 1213.9 348.142 1208.8 345.042 cv<span class="pl-c2"></span>1205.8 350.842 li<span class="pl-c2"></span>1210.9 353.943 1217.8 355.842 1224.1 355.842 cv<span class="pl-c2"></span>1235.3 355.842 1242.9 349.243 1242.9 339.542 cv<span class="pl-c2"></span>1267 354.342 mo<span class="pl-c2"></span>1267 303.443 li<span class="pl-c2"></span>1258.9 304.743 li<span class="pl-c2"></span>1258.9 354.342 li<span class="pl-c2"></span>1267 354.342 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1269.2 289.142 mo<span class="pl-c2"></span>1269.2 285.743 1266.5 283.042 1263.1 283.042 cv<span class="pl-c2"></span>1259.7 283.042 1257 285.842 1257 289.243 cv<span class="pl-c2"></span>1257 292.542 1259.7 295.243 1263.1 295.243 cv<span class="pl-c2"></span>1266.5 295.243 1269.2 292.542 1269.2 289.142 cv<span class="pl-c2"></span>1308.5 304.542 mo<span class="pl-c2"></span>1296 304.542 li<span class="pl-c2"></span>1296 297.943 1297 290.142 1297 290.142 cv<span class="pl-c2"></span>1288.8 291.943 li<span class="pl-c2"></span>1288.8 291.943 1288 299.743 1288 304.542 cv<span class="pl-c2"></span>1281.5 304.542 li<span class="pl-c2"></span>1281.5 310.443 li<span class="pl-c2"></span>1288 310.443 li<span class="pl-c2"></span>1288 344.642 li<span class="pl-c2"></span>1288 349.642 1289.3 352.842 1292.8 354.542 cv<span class="pl-c2"></span>1294.7 355.443 1296.7 355.943 1299.3 355.943 cv<span class="pl-c2"></span>1302.8 355.943 1305.6 355.243 1308.1 353.943 cv<span class="pl-c2"></span>1307 348.943 li<span class="pl-c2"></span>1305.6 349.642 1304.3 349.943 1302.1 349.943 cv<span class="pl-c2"></span>1297.2 349.943 1295.7 348.042 1295.7 342.542 cv<span class="pl-c2"></span>1295.7 310.443 li<span class="pl-c2"></span>1306.1 310.443 li<span class="pl-c2"></span>1308.5 304.542 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1356.9 304.542 mo<span class="pl-c2"></span>1348 304.542 li<span class="pl-c2"></span>1338.2 337.243 li<span class="pl-c2"></span>1337 341.342 1335.1 347.743 1335.1 347.743 cv<span class="pl-c2"></span>1334.9 347.743 li<span class="pl-c2"></span>1334.9 347.743 1333.4 340.042 1331.9 335.342 cv<span class="pl-c2"></span>1321.7 303.042 li<span class="pl-c2"></span>1314 305.642 li<span class="pl-c2"></span>1324.7 336.842 li<span class="pl-c2"></span>1326.4 341.842 1329.1 351.542 1329.7 354.743 cv<span class="pl-c2"></span>1332.9 354.243 li<span class="pl-c2"></span>1330.2 364.342 1327.8 367.542 1321.4 369.542 cv<span class="pl-c2"></span>1323.7 374.842 li<span class="pl-c2"></span>1332.4 372.743 1336.5 366.142 1339.8 356.142 cv<span class="pl-c2"></span>1356.9 304.542 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1433.3 330.243 mo<span class="pl-c2"></span>1433.3 322.142 1431.8 316.243 1428.7 311.743 cv<span class="pl-c2"></span>1425.3 306.842 1419.9 303.042 1411.6 303.042 cv<span class="pl-c2"></span>1398.5 303.042 1390.4 312.943 1390.4 329.142 cv<span class="pl-c2"></span>1390.4 345.542 1398.2 355.642 1411.9 355.642 cv<span class="pl-c2"></span>1424.4 355.642 1433.3 346.842 1433.3 330.243 cv<span class="pl-c2"></span>1424.4 330.842 mo<span class="pl-c2"></span>1424.4 335.743 1424 338.542 1422.9 341.642 cv<span class="pl-c2"></span>1421.2 346.443 1417.3 349.142 1412.1 349.142 cv<span class="pl-c2"></span>1407.8 349.142 1403.8 347.142 1402 344.142 cv<span class="pl-c2"></span>1400.1 341.042 1398.9 334.842 1398.9 327.842 cv<span class="pl-c2"></span>1398.9 321.943 1399.7 317.943 1401.3 314.842 cv<span class="pl-c2"></span>1403 311.542 1407.1 309.443 1411.5 309.443 cv<span class="pl-c2"></span>1415.6 309.443 1420 311.443 1422.1 315.842 cv<span class="pl-c2"></span>1423.7 319.142 1424.4 323.842 1424.4 330.842 cv<span class="pl-c2"></span>1476.1 284.842 mo<span class="pl-c2"></span>1473.2 282.943 1469.4 281.943 1465.1 281.943 cv<span class="pl-c2"></span>1461.4 281.943 1458.7 282.743 1456.3 284.542 cv<span class="pl-c2"></span>1454.2 286.142 1450.8 289.342 1450.8 296.743 cv<span class="pl-c2"></span>1450.8 304.542 li<span class="pl-c2"></span>1446 304.542 li<span class="pl-c2"></span>1446 310.443 li<span class="pl-c2"></span>1450.8 310.443 li<span class="pl-c2"></span>1450.8 354.342 li<span class="pl-c2"></span>1459 354.342 li<span class="pl-c2"></span>1459 310.443 li<span class="pl-c2"></span>1470.4 310.443 li<span class="pl-c2"></span>1472.8 304.542 li<span class="pl-c2"></span>1459 304.542 li<span class="pl-c2"></span>1459 296.842 li<span class="pl-c2"></span>1459 291.142 1461.4 288.042 1465.8 288.042 cv<span class="pl-c2"></span>1468.5 288.042 1471.3 289.243 1473.2 290.342 cv<span class="pl-c2"></span>1476.1 284.842 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1543.5 285.743 mo<span class="pl-c2"></span>1498.1 285.743 li<span class="pl-c2"></span>1498.1 292.642 li<span class="pl-c2"></span>1516.5 292.642 li<span class="pl-c2"></span>1516.5 354.342 li<span class="pl-c2"></span>1524.4 354.342 li<span class="pl-c2"></span>1524.4 292.642 li<span class="pl-c2"></span>1543 292.642 li<span class="pl-c2"></span>1543.5 285.743 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1585.6 330.743 mo<span class="pl-c2"></span>1585.6 329.642 li<span class="pl-c2"></span>1585.6 317.743 1584.2 313.042 1579.9 308.642 cv<span class="pl-c2"></span>1576.5 305.142 1571.8 303.243 1566.4 303.243 cv<span class="pl-c2"></span>1560.4 303.243 1555.5 305.443 1551.5 310.142 cv<span class="pl-c2"></span>1547.3 315.142 1545.5 320.542 1545.5 328.943 cv<span class="pl-c2"></span>1545.5 345.443 1553.8 355.443 1567.6 355.443 cv<span class="pl-c2"></span>1574 355.443 1580 353.243 1584.4 349.243 cv<span class="pl-c2"></span>1581.4 344.243 li<span class="pl-c2"></span>1577.9 347.443 1574 348.943 1569.2 348.943 cv<span class="pl-c2"></span>1564.2 348.943 1559.6 347.142 1556.8 342.842 cv<span class="pl-c2"></span>1555.1 340.243 1554.5 336.642 1554.5 331.943 cv<span class="pl-c2"></span>1554.5 330.743 li<span class="pl-c2"></span>1585.6 330.743 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1577.3 324.842 mo<span class="pl-c2"></span>1554.5 324.842 li<span class="pl-c2"></span>1554.9 314.542 1558.9 309.342 1566 309.342 cv<span class="pl-c2"></span>1569.8 309.342 1573.3 311.042 1575 313.743 cv<span class="pl-c2"></span>1576.5 316.142 1577.2 319.443 1577.3 324.842 cv<span class="pl-c2"></span>1635.5 348.842 mo<span class="pl-c2"></span>1631.2 343.842 li<span class="pl-c2"></span>1628.3 347.342 1624.5 349.243 1620.5 349.243 cv<span class="pl-c2"></span>1612.5 349.243 1608.2 343.142 1608.2 331.943 cv<span class="pl-c2"></span>1608.2 324.642 1609.1 319.142 1611 315.642 cv<span class="pl-c2"></span>1612.8 312.243 1616.5 310.042 1620.4 310.042 cv<span class="pl-c2"></span>1624.2 310.042 1626.4 311.142 1629.9 314.042 cv<span class="pl-c2"></span>1634.2 308.642 li<span class="pl-c2"></span>1630.6 305.642 1626.9 303.243 1620.6 303.243 cv<span class="pl-c2"></span>1615.3 303.243 1611 305.142 1607.1 309.042 cv<span class="pl-c2"></span>1602.8 313.342 1599.6 319.342 1599.6 330.243 cv<span class="pl-c2"></span>1599.6 337.642 1601.1 343.142 1604.4 347.943 cv<span class="pl-c2"></span>1607.9 352.943 1613.2 355.443 1620.3 355.443 cv<span class="pl-c2"></span>1626.5 355.443 1630.9 353.542 1635.5 348.842 cv<span class="pl-c2"></span>1686.7 354.342 mo<span class="pl-c2"></span>1686.7 318.642 li<span class="pl-c2"></span>1686.7 315.042 1686.5 313.443 1685.9 311.443 cv<span class="pl-c2"></span>1684.5 306.842 1679.1 303.542 1673.1 303.542 cv<span class="pl-c2"></span>1666.7 303.542 1661 307.243 1656.5 311.443 cv<span class="pl-c2"></span>1656.5 311.443 1656.8 307.842 1656.8 304.642 cv<span class="pl-c2"></span>1656.8 293.042 li<span class="pl-c2"></span>1656.8 285.443 1655.5 281.243 1655.5 281.243 cv<span class="pl-c2"></span>1647.7 282.743 li<span class="pl-c2"></span>1647.7 282.743 1649 286.443 1649 292.943 cv<span class="pl-c2"></span>1649 354.342 li<span class="pl-c2"></span>1656.8 354.342 li<span class="pl-c2"></span>1656.8 318.943 li<span class="pl-c2"></span>1661.1 313.642 1666.5 310.542 1671.3 310.542 cv<span class="pl-c2"></span>1673.8 310.542 1675.9 311.342 1677.1 312.542 cv<span class="pl-c2"></span>1678.5 313.943 1679 316.243 1679 319.943 cv<span class="pl-c2"></span>1679 354.342 li<span class="pl-c2"></span>1686.7 354.342 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1744.3 354.342 mo<span class="pl-c2"></span>1744.3 316.542 li<span class="pl-c2"></span>1744.3 314.542 1743.9 312.542 1743.1 310.743 cv<span class="pl-c2"></span>1741.1 306.342 1736.3 303.443 1730.9 303.443 cv<span class="pl-c2"></span>1725.6 303.443 1720.4 305.943 1715.2 311.142 cv<span class="pl-c2"></span>1715.2 307.042 1713.4 303.342 1713.4 303.342 cv<span class="pl-c2"></span>1705.8 305.443 li<span class="pl-c2"></span>1705.8 305.443 1707.7 308.842 1707.7 315.943 cv<span class="pl-c2"></span>1707.7 354.342 li<span class="pl-c2"></span>1715.3 354.342 li<span class="pl-c2"></span>1715.3 317.243 li<span class="pl-c2"></span>1718.9 313.443 1725.1 310.243 1729.1 310.243 cv<span class="pl-c2"></span>1731.4 310.243 1733.5 311.042 1734.6 312.342 cv<span class="pl-c2"></span>1736 314.042 1736.4 315.342 1736.4 320.642 cv<span class="pl-c2"></span>1736.4 354.342 li<span class="pl-c2"></span>1744.3 354.342 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>1804.7 330.243 mo<span class="pl-c2"></span>1804.7 322.142 1803.2 316.243 1800.1 311.743 cv<span class="pl-c2"></span>1796.7 306.842 1791.3 303.042 1783 303.042 cv<span class="pl-c2"></span>1769.9 303.042 1761.8 312.943 1761.8 329.142 cv<span class="pl-c2"></span>1761.8 345.542 1769.6 355.642 1783.3 355.642 cv<span class="pl-c2"></span>1795.8 355.642 1804.7 346.842 1804.7 330.243 cv<span class="pl-c2"></span>1795.8 330.842 mo<span class="pl-c2"></span>1795.8 335.743 1795.4 338.542 1794.3 341.642 cv<span class="pl-c2"></span>1792.6 346.443 1788.7 349.142 1783.5 349.142 cv<span class="pl-c2"></span>1779.2 349.142 1775.2 347.142 1773.4 344.142 cv<span class="pl-c2"></span>1771.5 341.042 1770.3 334.842 1770.3 327.842 cv<span class="pl-c2"></span>1770.3 321.943 1771.1 317.943 1772.7 314.842 cv<span class="pl-c2"></span>1774.4 311.542 1778.5 309.443 1782.9 309.443 cv<span class="pl-c2"></span>1787 309.443 1791.4 311.443 1793.5 315.842 cv<span class="pl-c2"></span>1795.1 319.142 1795.8 323.842 1795.8 330.842 cv<span class="pl-c2"></span>1835 354.243 mo<span class="pl-c2"></span>1833.4 349.142 li<span class="pl-c2"></span>1833.4 349.142 1832.7 349.342 1832.4 349.342 cv<span class="pl-c2"></span>1830.2 349.342 1829.6 348.243 1829.6 344.342 cv<span class="pl-c2"></span>1829.6 293.443 li<span class="pl-c2"></span>1829.6 285.842 1828.3 281.642 1828.3 281.642 cv<span class="pl-c2"></span>1820.5 283.142 li<span class="pl-c2"></span>1820.5 283.142 1821.7 286.842 1821.7 293.342 cv<span class="pl-c2"></span>1821.7 346.142 li<span class="pl-c2"></span>1821.7 349.743 1822.5 351.842 1824.1 353.243 cv<span class="pl-c2"></span>1825.6 354.642 1827.6 355.342 1830 355.342 cv<span class="pl-c2"></span>1832.1 355.342 1833 355.142 1835 354.243 cv<span class="pl-c2"></span>1890 330.243 mo<span class="pl-c2"></span>1890 322.142 1888.5 316.243 1885.4 311.743 cv<span class="pl-c2"></span>1882 306.842 1876.6 303.042 1868.3 303.042 cv<span class="pl-c2"></span>1855.2 303.042 1847.1 312.943 1847.1 329.142 cv<span class="pl-c2"></span>1847.1 345.542 1854.9 355.642 1868.6 355.642 cv<span class="pl-c2"></span>1881.1 355.642 1890 346.842 1890 330.243 cv<span class="pl-c2"></span>1881.1 330.842 mo<span class="pl-c2"></span>1881.1 335.743 1880.7 338.542 1879.6 341.642 cv<span class="pl-c2"></span>1877.9 346.443 1874 349.142 1868.8 349.142 cv<span class="pl-c2"></span>1864.5 349.142 1860.5 347.142 1858.7 344.142 cv<span class="pl-c2"></span>1856.8 341.042 1855.6 334.842 1855.6 327.842 cv<span class="pl-c2"></span>1855.6 321.943 1856.4 317.943 1858 314.842 cv<span class="pl-c2"></span>1859.7 311.542 1863.8 309.443 1868.2 309.443 cv<span class="pl-c2"></span>1872.3 309.443 1876.7 311.443 1878.8 315.842 cv<span class="pl-c2"></span>1880.4 319.142 1881.1 323.842 1881.1 330.842 cv<span class="pl-c2"></span>1949.4 308.943 mo<span class="pl-c2"></span>1944.6 304.142 li<span class="pl-c2"></span>1942.2 305.743 1940.3 306.342 1937.7 306.342 cv<span class="pl-c2"></span>1931.6 306.342 1930.1 303.542 1922.5 303.542 cv<span class="pl-c2"></span>1911.6 303.542 1904.1 310.342 1904.1 320.342 cv<span class="pl-c2"></span>1904.1 326.943 1908.6 332.642 1915.3 334.743 cv<span class="pl-c2"></span>1908.5 336.842 1906.3 339.243 1906.3 343.243 cv<span class="pl-c2"></span>1906.3 347.743 1909.8 350.443 1915.7 350.443 cv<span class="pl-c2"></span>1917.3 350.443 1921.4 350.342 1923.4 350.342 cv<span class="pl-c2"></span>1928.3 350.342 1931.3 350.842 1933.2 352.142 cv<span class="pl-c2"></span>1935 353.342 1935.9 355.443 1935.9 358.142 cv<span class="pl-c2"></span>1935.9 364.342 1931.5 366.842 1923.8 366.842 cv<span class="pl-c2"></span>1919.8 366.842 1916.1 365.943 1913.7 364.542 cv<span class="pl-c2"></span>1911.9 363.443 1910.8 361.342 1910.8 358.743 cv<span class="pl-c2"></span>1910.8 357.142 1911.5 355.342 1912.2 354.243 cv<span class="pl-c2"></span>1904 354.943 li<span class="pl-c2"></span>1903.3 356.943 1903 358.443 1903 360.243 cv<span class="pl-c2"></span>1903 367.342 1909 372.943 1924.6 372.943 cv<span class="pl-c2"></span>1936.7 372.943 1944.4 368.042 1944.4 357.243 cv<span class="pl-c2"></span>1944.4 352.943 1942.8 349.443 1938.9 346.743 cv<span class="pl-c2"></span>1935.9 344.642 1932.7 343.943 1926.9 343.943 cv<span class="pl-c2"></span>1918.9 343.943 li<span class="pl-c2"></span>1916.4 343.943 1914.9 343.042 1914.9 341.542 cv<span class="pl-c2"></span>1914.9 339.842 1917.2 338.142 1923.9 335.743 cv<span class="pl-c2"></span>1927.5 335.743 1930.7 335.142 1933.2 333.542 cv<span class="pl-c2"></span>1937.8 330.642 1940.6 325.443 1940.6 319.842 cv<span class="pl-c2"></span>1940.6 316.642 1939.6 313.842 1937.6 311.342 cv<span class="pl-c2"></span>1938.5 311.743 1939.7 311.943 1941 311.943 cv<span class="pl-c2"></span>1944 311.943 1946.3 311.142 1949.4 308.943 cv<span class="pl-c2"></span>1931.5 319.943 mo<span class="pl-c2"></span>1931.5 326.642 1928.5 330.142 1922.5 330.142 cv<span class="pl-c2"></span>1916.2 330.142 1912.9 326.642 1912.9 320.243 cv<span class="pl-c2"></span>1912.9 313.342 1916.1 309.943 1922.3 309.943 cv<span class="pl-c2"></span>1928.9 309.943 1931.5 313.142 1931.5 319.943 cv<span class="pl-c2"></span>1996.8 304.542 mo<span class="pl-c2"></span>1987.9 304.542 li<span class="pl-c2"></span>1978.1 337.243 li<span class="pl-c2"></span>1976.9 341.342 1975 347.743 1975 347.743 cv<span class="pl-c2"></span>1974.8 347.743 li<span class="pl-c2"></span>1974.8 347.743 1973.3 340.042 1971.8 335.342 cv<span class="pl-c2"></span>1961.6 303.042 li<span class="pl-c2"></span>1953.9 305.642 li<span class="pl-c2"></span>1964.6 336.842 li<span class="pl-c2"></span>1966.3 341.842 1969 351.542 1969.6 354.743 cv<span class="pl-c2"></span>1972.8 354.243 li<span class="pl-c2"></span>1970.1 364.342 1967.7 367.542 1961.3 369.542 cv<span class="pl-c2"></span>1963.6 374.842 li<span class="pl-c2"></span>1972.3 372.743 1976.4 366.142 1979.7 356.142 cv<span class="pl-c2"></span>1996.8 304.542 li<span class="pl-c2"></span>cp<span class="pl-c2"></span>f<span class="pl-c2"></span>%ADOBeginClientInjection: EndPageContent &quot;AI11EPS&quot;<span class="pl-c2"></span>userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse<span class="pl-c2"></span><span class="pl-c2"></span>%ADOEndClientInjection: EndPageContent &quot;AI11EPS&quot;<span class="pl-c2"></span>% page clip<span class="pl-c2"></span>grestore<span class="pl-c2"></span>grestore % PSGState<span class="pl-c2"></span>Adobe_AGM_Core/AGMCORE_save get restore<span class="pl-c2"></span>%%PageTrailer<span class="pl-c2"></span>[/EMC AI11_PDFMark5<span class="pl-c2"></span>[/NamespacePop AI11_PDFMark5<span class="pl-c2"></span>[<span class="pl-c2"></span>[/CSA [/0 ]]<span class="pl-c2"></span>] del_res<span class="pl-c2"></span>Adobe_AGM_Image/page_trailer get exec<span class="pl-c2"></span>Adobe_CoolType_Core/page_trailer get exec<span class="pl-c2"></span>Adobe_AGM_Core/page_trailer get exec<span class="pl-c2"></span>currentdict Adobe_AGM_Utils eq {end} if<span class="pl-c2"></span>%%Trailer<span class="pl-c2"></span>Adobe_AGM_Image/doc_trailer get exec<span class="pl-c2"></span>Adobe_CoolType_Core/doc_trailer get exec<span class="pl-c2"></span>Adobe_AGM_Core/doc_trailer get exec<span class="pl-c2"></span>%%EOF<span class="pl-c2"></span>%AI9_PrintingDataEnd<span class="pl-c2"></span><span class="pl-c2"></span>userdict /AI9_read_buffer 256 string put<span class="pl-c2"></span>userdict begin<span class="pl-c2"></span>/ai9_skip_data<span class="pl-c2"></span>{<span class="pl-c2"></span>	mark<span class="pl-c2"></span>	{<span class="pl-c2"></span>		currentfile AI9_read_buffer { readline } stopped<span class="pl-c2"></span>		{<span class="pl-c2"></span>		}<span class="pl-c2"></span>		{<span class="pl-c2"></span>			not<span class="pl-c2"></span>			{<span class="pl-c2"></span>				exit<span class="pl-c2"></span>			} if<span class="pl-c2"></span>			(%AI9_PrivateDataEnd) eq<span class="pl-c2"></span>			{<span class="pl-c2"></span>				exit<span class="pl-c2"></span>			} if<span class="pl-c2"></span>		} ifelse<span class="pl-c2"></span>	} loop<span class="pl-c2"></span>	cleartomark<span class="pl-c2"></span>} def<span class="pl-c2"></span>end<span class="pl-c2"></span>userdict /ai9_skip_data get exec<span class="pl-c2"></span>%AI9_PrivateDataBegin<span class="pl-c2"></span>%!PS-Adobe-3.0 EPSF-3.0<span class="pl-c2"></span>%%Creator: Adobe Illustrator(R) 9.0<span class="pl-c2"></span>%%AI8_CreatorVersion: 12.0.1<span class="pl-c2"></span>%%For: (Systeembeheer) (Eden)<span class="pl-c2"></span>%%Title: (TUeLOG_P_RGB.eps)<span class="pl-c2"></span>%%CreationDate: 05-03-2007 13:37<span class="pl-c2"></span>%AI9_DataStream<span class="pl-c2"></span>%Gb&quot;-6H]MaKE@:MfniPWV&quot;A#koSAR:b*=S&amp;&amp;BWoE-92JhK2N32`WihY&amp;&lt;*@aU?#?e=dr50D_8F1.bf\/th/-QTf2h!mbJSQY(lS_)<span class="pl-c2"></span>%H%,InB-4j;s7P.@It%+Ms8(7lj@aJ/^P-ohX^:tmBE-$,hnSu)C2t&gt;I6bDZQ)`J8Y4ubZ%Y.*c^W&gt;?X_It.@XrMSP$r:&#39;R-GMbR`<span class="pl-c2"></span>%nF&quot;37ms]D)rjPtt0&gt;Df*BDU`?je(GCHhZLV0$iCfHMuISOfuM!p=je0hgA.35CEKnT)R:%&gt;O(=^2kM]]?[qk&quot;Rm4W6o&lt;3)hq*3a6<span class="pl-c2"></span>%3aLOK^MNQ/s0al^]ANPVmlnJ^qCVA.5B$/&gt;g]Nc3lW^*9HHFYf/=ZV7h7N-jqt0F/V[jjagUc4MY&lt;IA\oC9N&amp;=egBCh-Yt&gt;:VYK&quot;<span class="pl-c2"></span>%YM]&lt;?&#39;uWa.&lt;9o)rqr8K2hnAjF_oLM5T.]As@6nT,_fnL1M%b@Hpt+tA^\e#r2npSG^A44#q[PiT5P!]=^%q;WqBo-$_Z&#39;Hls8;W;<span class="pl-c2"></span>%M6d`%g]7HKoCIJ-rL6$dAX;5&amp;GlL!WTl%h9Pf?,Mjl_-fm_bZ&#39;]t:q%oB+fN=)VEm5^raq(X1ZX?)`Ao)ZAL42fIQrO7MrBe*k$N<span class="pl-c2"></span>%pkBMNT:MS7T1)b]JNG^`rL:&quot;fPLo&#39;gdoZS4pTM=.$\&quot;p\(&lt;M!tk1`tS*m$g;q)NQT`LCdPIK/`!M&quot;J!^U-Cm@ikkZop0.O2j+jq&#39;<span class="pl-c2"></span>%@Ed@_=$+2]^NB7c]p\ha;[R)L7hb,&quot;/s0$0mWU=7`_5X1?&quot;0O8]ftiO_!uIW$&gt;&#39;&quot;Q2n.\YHhHV4:KP$e5]ZBP?:UXQr*&gt;p;:#jg8<span class="pl-c2"></span>%q!6L9U&amp;NJ_$C+_NM*_-(n47_&quot;*ndIdRt#k`k21VVoD8.7pRaWspD8tan(tbo/\_&amp;Ul)V;n2lWj%5$bW9g*Pj.h0a:li:l-DHh6b&lt;<span class="pl-c2"></span>%n)&amp;R,rOhrKP9,2EiTiGkkcs!h([kZrLIXr,s%7onI.d$UDa)!R]_``porCaAoV[36rq=N:Is^d,8+&gt;8Ohn9!0&amp;-%Uqs(-?&amp;;.r?;<span class="pl-c2"></span>%&quot;N4JC9=m1H[u8RkL[8FU_a&amp;&quot;XkQ[S[mtHMbG;S9-qsj&#39;GhnK,UdT4F7^&amp;&lt;8LKZ.;ur&quot;#!Pg!]o8g&amp;DGN`%i3spI_pdIsh6b]q9/R<span class="pl-c2"></span>%c@k]KqlcWA\A_RsSH%7uR_nN-b.dcBBDJ\0c+hWShg[/poCkKK_ZspN&quot;%QX&#39;r&lt;*&#39;ts7j3MhpYANp[Q/qhu&lt;KN2]o2Oc=ZA4]2tX(<span class="pl-c2"></span>%6IYkWqldd3`C45+ocd0CoZO`DqF4lEYMOa*MgP?ua,a&amp;b5@8m:VuQST2,1EL.q&amp;DCX7+qpHLprm^3\$Nq&quot;!e3pYYr2nrFkV]^,21<span class="pl-c2"></span>%J*LPoR%\3ne%kK8=\4)&gt;?6js=U^^p01cKl(=K(oK)!K#4Epq=]]mKMIcQ?MBqj4dq&lt;sTSVG&gt;.S^,EU:eV^8K1cX6(s#H6bADZB@f<span class="pl-c2"></span>%h:qC9GAS&lt;B^O,YDe(`LChL,&quot;*mlnFqrHrOj%$J@[LlJ)]hil+RiS/q)%XIaHlcXd-p$pf6]#HFPoCi.71dcLOmpc36q^jqRb?&#39;1=<span class="pl-c2"></span>%p$E\FpX&lt;K`i0I_55`O[7HN39jL#K^&lt;Qlja`Z=c[k,d?-&gt;qBHltdIdD.QhT.NG^9&quot;3pt&gt;Sg?X8-+QL&lt;#LQeta1ItEGrJrkO:QY0Z4<span class="pl-c2"></span>%rQE`@^A?iI04+54&quot;auukk8A\ckgS`oku6f0l&#39;(&lt;EknE:@l/V!6iPU`:^DHNfIeE:-b@ga`ThhFZV,-&amp;GVGEp^jA2G0ViTlap2YMr<span class="pl-c2"></span>%1n^0Oq!U4mSmB$S7\:Xr2#^JN&#39;`MYB,l0q.&quot;TEZF3&lt;!_I[cblao9]C6*j=dWjM,@*\`$?5:ZYC&quot;:Y&amp;=i:Xi1eO2pF@s)Gqh)aDZ_<span class="pl-c2"></span>%OO)I,+`Z,9]&#39;AMnC94Ds&gt;&amp;(1AhUH1kp&#39;$&lt;&lt;MmbK5IRn.WV3Y&gt;&quot;[C(2,Se5u#s(2)eB&quot;N%Ar[-F=Rrie:DorMPJ(&amp;:QDOqFf01bM&lt;<span class="pl-c2"></span>%4PT)[T)!$X=aZO,AbqX(oiZWbo*kX^-]u,jp&#39;&amp;q.M&quot;X(bJ\Cuo&gt;VZ8&lt;,k?n*oRb&quot;N![LW((2P*Z6faX&gt;!(5.YBV)J&gt;?dQmA#guga<span class="pl-c2"></span>%6p6TM]V;)p4S4&gt;-!@i*,$A&#39;FH_4!_0`4?)BJo3lpTPMn7kT4gW\d4jC=0.u;;]/k&lt;S&lt;s*&quot;s%(oaIGEpsIsgt[b)u&amp;&quot;D0$XbL0NH]<span class="pl-c2"></span>%QFF0MX_g!BWTU&#39;)0+%O&lt;aLuU.27hkS/$?JGDVR#hdhfsN(OdTYdJMkD9D/,&#39;(E1EXDu;ChJ/&gt;$)?NfXW\DT^[0r0mu$05&lt;FS+)C0<span class="pl-c2"></span>%jTS6:Mmu1lI1.jM&#39;Jk/0XKfa6q!&lt;l;lNL(E0@H.kngPi!P&gt;]Q&amp;UmbJuU!GM5W&gt;@CN+IaspluPEFR2jja19&quot;5jq$&amp;(8T3otKH-$-C<span class="pl-c2"></span>%MCV)4$&amp;-`k&lt;-#g)jAF@gVN&gt;i&amp;^;&amp;TOb2PUBNtlkKjYc^b!^h[8`)&#39;ql1/o.6%!@$=1[,&amp;noh-@=NE$q?:$R/G)@ddCQ:&amp;ull-OQd<span class="pl-c2"></span>%47rIh:Irn/QPb&quot;rHY&gt;Tb+5.8(Nt;Rk!La-mI3)cC?nOS%RJh_M`(SZ!R2))*Ql281QlS(L0LINa0M?)N&gt;k(4u&lt;-c:am&gt;F/:*)H@F<span class="pl-c2"></span>%e&amp;E_0ApY\BVm/[9en&lt;&gt;;2EkJQnMJtP1&lt;EK&amp;Cq!q9A[Z;.V/0&amp;_[!KPX;5TXR/t-*JQsVthCk@XFCn,#HS7Yj?4L7Uk&#39;9&amp;PqXjBMs<span class="pl-c2"></span>%&quot;YUWM]M&#39;#G+&lt;iHJNgBl&quot;#L@Z1BPd])g\nq]IUal=$ic11HG*d&#39;T%Je8G&amp;M3%?a,C$@A@)[#Y-e`Nc&quot;&amp;S&#39;$kV;U)P#S8n43%*$^HB<span class="pl-c2"></span>%Vt&amp;TGM#*G`_rik&gt;2l%&quot;MPTuBh7+)uL)RL*301jI8Bs_eLj!nbM-;BGpPnX&gt;/NMQ&#39;,`o9!m`!r\W]d!F#V!F08hU&lt;IsBTBa$!IIRV<span class="pl-c2"></span>%F$mNCBf9Ok=-7*^Vn&#39;6u4C?O04t&quot;ml+oSQ#2)@tS8&lt;_TQUtr1EkV$Z2T9K91cm5PH_^YM\fcFh`]&lt;ou$]Hllh:-*\g&#39;;a-ic&quot;%5,<span class="pl-c2"></span>%)%KFHA&gt;?tf8K.5ko_=/79YDWSPKDrTZ9=dqcpf8XP18hY.JjQK\Ot=8PM(h(^-%ggNO7UiWT%uf&amp;2uEt.iGunL+e\joOJ5Ap4%W^<span class="pl-c2"></span>%)(QOu4;%s&#39;bY4=d:m2W:&#39;Z^3&gt;d6MLegK.KZfN;6YfNGJdKrkT]Xk6j_\7Tg$lC-O/bBqd!mu)(28+T@X=RGQjJ].h_&quot;[:Ss/&#39;RdP<span class="pl-c2"></span>%&amp;N2H#NA0,F(R#;7&gt;2ZH6!B0O&quot;`qR#G?F@D=gYAh&amp;&lt;c&quot;njg&amp;HF&#39;;2$[qo27g4c^:cLp+!&lt;&quot;,A-Fr%5.S#r(6ee9Aq?&#39;ecP%95!0mR<span class="pl-c2"></span>%nLPi&#39;Oe/mk4Cdcg@4=N5TI%sKbdmjmJ\Hdf0E4$\%]dkkijSC84D,sl)F9K(.hgF3n7X.LW[O+)!t=r&gt;1e$1i&lt;jEP$.^?!&gt;fbuA7<span class="pl-c2"></span>%@?o$;7P#cb4jRlOYl_LB&quot;ZKba*\]631Gd(.H1dDiGp_iup@:t:3SR68RTErVfb;Zrs/P0#Co:E3Z_(hqK6jS-7G3]-W@8Ql.cs\=<span class="pl-c2"></span>%WgHc3bN=O:JaM_1?&lt;Wu#F`&quot;e\(:LJWA`FM@Wb5i-GY#SWPP^LZo]L%8TCG6t_b5Gi&#39;3s/uB6FV+Imhm[26TEQRcjsZ;X@MuA/F9[<span class="pl-c2"></span>%\F&amp;X+4C\WWL@$l_p0[&amp;+G*9#\T%bXd:Dc9EqRG!egHSd&quot;Qb,FOh&gt;!&gt;;mCK*b2GDl%[Hk,8)*`Unos6m&gt;p%,NYW!ajSjd4&gt;ua,qus<span class="pl-c2"></span>%6[lDqe+Y_^*q[L?0%jU\//]Nms$k=*LX,+?jZ7=bmc6!M`H+G):\I`$VJ-YriCNCMD7#B&#39;Zb%PG&amp;2,YCa&#39;@EP`Ec3J#H&#39;e4&amp;dN+`<span class="pl-c2"></span>%rS=).s$TXFHdP3%$aJ;\pK+!D]Qn^HrjR*A.\NG]!`4+.&amp;9Il`qt0@Fdq6l=46mLgJ&amp;)W+B@e,@H&quot;C@\)11?-J_O*fh#G`CKI.qH<span class="pl-c2"></span>%*gr&quot;TEY4h!32@_#VC]ZWK@hskHi&gt;10!+i,7:-&lt;4D6&#39;;]l+^Jg%iL+6r3#qK/#:3)!;!]tF8Mhb7&quot;F!hjHZepGRX$3Z3MJLSp6=\W<span class="pl-c2"></span>%&gt;&lt;XG9Yt.)1ZOc-m?7h?OX45&amp;7kIo@)^&quot;QBp5?-N0^Am!rri]l:pTa`7/ELg^a9iD-[mAM$Tl6c5&#39;97]D1-jM5BeC&#39;&#39;qLcC4D&gt;.Ji<span class="pl-c2"></span>%5Oq`\PBTmg#P)bGWl4k8eW99#Xebpd6]0LJ4!&#39;tsr$W%R_F0J-a9tZ%&amp;e4igi^\GI2H#hd5PWGZm8&#39;j5jJTFWK;RIeha&gt;k&gt;nBFuu<span class="pl-c2"></span>%m]t[r.6l,Vq&lt;rfYqru@TPen;YIL]_a/-#(@ci9Gtrc&gt;6gK2&#39;1CVk074&#39;DU+i8P9N82)#!4XT,H)94be4)*b%?G:Mog[XG^18]kbC<span class="pl-c2"></span>%+G,gsKfk\4mk=I&amp;[/09WOC-%-m%4onrMKT?7jNPeTs$l]s7A8LqHrL5s%1&quot;U]&gt;Vm20)tK,[`d82s/4b,j[4g44%)0DHqBtUSe7cX<span class="pl-c2"></span>%^HD/laEpDJ&gt;?S(UM$Y&amp;YreHDK_ZK^:DY8&gt;k0W&gt;&quot;uINi.uD=9@Cl\nNZ5[\]c2)q;LV/+NNFF\Y4*,+:AN`OX9`rEV$0K9ia*FKO]<span class="pl-c2"></span>%JGqt:ceWO-_WZSJ__=&lt;\btfMSZ%KQ)H@U!(GD%D&gt;r$Z4f#LJG$5`7i47R&lt;d\,0FK+UL7!1:9LFG?jnq#+o,p2%Zh!pOi&quot;[@Nab$7<span class="pl-c2"></span>%7kWDqP_3(!ej1hl8lQ#U[S_!b!6mK_(@@ZTV0nUrS%ah8l^a/40IA7kojreN=D*&amp;u-r9ndf-$KuS@&quot;XX_B=pjH@u`p&lt;F\MFN-3R9<span class="pl-c2"></span>%;)AUu`F&#39;T?_JDn8d26]&lt;//iT(`Ld9CUGiNL2.dPSWQ[t]8&amp;;9?;4SRj1KL9jeB^V]p5[h:R`2-qpDQANTPY[UBY\&gt;h%$OF8=\X_&amp;<span class="pl-c2"></span>%`3Fk4n=FK\5mBrA(laQt&amp;q*M#gt^ehc7@@c2C8h&#39;pS[WTs-unT&gt;#lQK:c&amp;?8Zn-%=W%4`HUL4R4@PN@6X41l=;\6=C*OTIsY\VEQ<span class="pl-c2"></span>%bApc=VT`d`\9j&lt;,&gt;0`=Zd$KNFKr(9&quot;qJrf,$c@&#39;E,n&amp;`lkfZ?41=BY.nhBNFUh*tQ5R[BB)Q-q(qM3]Crn+YW@pfhgh&lt;&quot;%*%)p)T<span class="pl-c2"></span>%Co[c85(@W&quot;DAYD!NP.&quot;.a96D4-%cKr_\Q&quot;dffUg%aBa7Q?]ab2Gt^&quot;,PgjYH_8t:;3&quot;&quot;Xt?XYAmfCHrCp^L-2nB0%P0FdUn^AZ8Z<span class="pl-c2"></span>%4W9nR4jqG!I&#39;]34\&quot;?h&quot;7QgE*GVbrYg3i@bK7&lt;2^+&#39;A+%^p[t6aS*KKh&lt;nGO=3IG&#39;;$h(^X&gt;tp-5msler:/CX+ubBjiC%R-Xb*Um<span class="pl-c2"></span>%;WnBC&quot;X:!V++G4-aRVl+X&quot;lKW*p(Na0&lt;Fm@3?RcGF)o3KVk5hU^WSG*$PFL+Lrnii;tB![*T_7,/%-)1UGS4_LSKTq&gt;l&amp;0B\^U3n<span class="pl-c2"></span>%qKo6&gt;NqBDRP1&gt;G2T&gt;*P&lt;o7sB5Otsh@)bCkt;[?`YHM-ggh_&amp;:7ol%Kah7m3b-Y&amp;YE`&lt;S`f?oX!aQcPP,T_.@28NDI&#39;f@p=&lt;*NSNS<span class="pl-c2"></span>%F@W8ms5ftN^rCagj-hAEC1IJorP5]OGSLP0H^VKef=,sGrBn[AD.th`2GE%`&lt;&lt;V%81\T@l/OD*(&quot;Vof@Uinb&#39;Dm;-mMFd6UOl]4*<span class="pl-c2"></span>%g6JdGhQbHN&#39;e#agP^`&lt;`$&#39;]6tXjjO!m7@MX7n&lt;^58;1b.4[r)UI2u56AjeO!Wcb&quot;AH^Ca!S`5KkoJ&#39;HPqGOTJdkct1LihBb&#39;!UrF<span class="pl-c2"></span>%ldCq/H=H01M?O7f].4cJ87Q[T*WeLj;PM^.IMEX@FkA0dP1m;S/TblY$&gt;Ab.&gt;r=AqJ&quot;9026nu,_Zm?0V(D+hEUF]_1)EhOh?.ZA&lt;<span class="pl-c2"></span>%6*1dF*l&gt;j`&#39;ZtPI+YpD/@h#a&amp;[&gt;j[R66lMJ`Kp$u&amp;e.&amp;c,Anar&amp;.T&quot;aM:dg!B]rNOP9[&amp;AY*T@O7Zhq8`(MVI9)L36gdk&lt;TgLOOE<span class="pl-c2"></span>%K[5fq&quot;NYC[U7I%#@?mWR?dPrV0Dneq/er[_@FKCb1kZ0,fg%B,)O^V[dMadWS[^BI@$=2MGjC2=1:XgA3p5&#39;HXcUOa),-JT)&#39;51&quot;<span class="pl-c2"></span>%BKg74B8%lu%R)e3%4`#/=i2&quot;r!&amp;q=,ZQq/Z[aIk@[1hV:Ul^*`5)Ne\Wt?:`e?$/bNBOc4GcB2/o3D]`P`&quot;PgUK?*l7FtT*ZU+`q<span class="pl-c2"></span>%[+r$Re-X5h7ghaZVJO1BUBLXTOJ;&quot;CaVO8Wk+r[n&lt;MO_d,Gj1/6$CtF49uu?ens:I5HWSG`l^[q:s:LAbn!KA8$[![-&quot;cR7rWhZ?<span class="pl-c2"></span>%64nNk\h9R$#F%3T:%`mGa7pobNi+D0S$_Aai=e8,8]aMG;UG7SA&amp;Ip^IDpbHR6RDqQlE0kLsr@in3jTbg5nd9RVr1,)d,Zo6R&lt;\F<span class="pl-c2"></span>%ZA&#39;EDUk2$=(Q/b-=gAZCQ@Yp:%OKLkX&quot;IpX&amp;kY3O:TWoKLU&gt;9:S?!q&gt;De=:;FX&lt;sF67.GO7jg*,H)$4O3ji/8m#XK+0&lt;pZ=Acm@!<span class="pl-c2"></span>%rC@d&lt;)(i`IV&amp;GE]Cs#@7XGr!9_Wm6?UHg1SJ.pTECIhc7_B9IWS&lt;&amp;pf8Nr!NMi:=!;4jHUl&amp;6640u20[Ab/V$dmG)?,m._Wh3&lt;Z2<span class="pl-c2"></span>%ITO&gt;]@J5hmd`E+,ZJ9la$#h:;c-uYGbpf;3j64/cZA24I$ZMbqe6C?\\NoIXU_2;.cK@Y8$J3X+SK&#39;2BJ67N$e&lt;P2ha8!S.9Y/;&lt;<span class="pl-c2"></span>%=%YNHRE1,bF@8ET.VOuVC1ILq5FJcc&quot;ugEPZ?lBnJu7&#39;jec?;@DVC2&lt;]nU*SjqP&quot;l4:d%&amp;#irR6Z&#39;i:kfngSF[U&gt;u4Au-p@dT5::<span class="pl-c2"></span>%_cd1bUN?=N:L?J&amp;,&amp;EN%RV.sJPTaNkVB/WVeSOCQT,K:?YP+K2C)+`7OHu_;PVcC/KNPBb1NXYZ(eA7q`[Rs^,s4&quot;oa^1*h,09sl<span class="pl-c2"></span>%KGk:@[nKqk**E.Bb&lt;QhUX*k$/+&lt;.h[;f/,Zl$&lt;`$#fd&#39;2Gd7@=Y:&quot;On,-7\fj]!C;A^PK)Hp`DagN@D4$&amp;&#39;&quot;&lt;[9&#39;R`&#39;YBIcW44WO<span class="pl-c2"></span>%e_/&amp;d&quot;]N6=F!8UknT#/@j@gjkoheAuVQDbG%nW&lt;5b]P\?h$9pdVD&#39;i;RntK8G(-2;ik1A+VOem;pPCVf;$g6h%BS$\Ymup&gt;Zgee=<span class="pl-c2"></span>%g\?&lt;0U^Y`C=0lDnBRUl?RgG$)aQ@OkNVqDDWsRJASW3!,oK]R#lmudM%eq:mG2]\(&quot;pI240cmmZ%5=1\8-5Ok?gUl7-XM.hWi9)/<span class="pl-c2"></span>%,_h+[/CH,=j$f/qXR2k3kh2]VVB=i&amp;iM]4m4;#%Z^(#(M/^WY);9NhZ5[u$A2e\/03#PqD&gt;Mt?&lt;=*m&lt;!k$8lFX3FgC%.0S%&amp;LSIC<span class="pl-c2"></span>%@&#39;E8ZC?pJ&amp;V(SM,4f];%[O&#39;U#0r&gt;kCK^aon[DjHjUkOAeMSVandUPS:Oug3M&lt;lVALf@+mIYU&gt;Hs-$&lt;R\r*C:@@XfVDfB&#39;qg,-aAB<span class="pl-c2"></span>%rY%ZTEPQTaCClFRl(Z,QKH:db_o%&gt;eRA&amp;#&quot;=MV6&lt;E7BogPACi5pVJ5X)28g*:X]I^$[HP#)$=mlSbYB1R+./(7t$%[OsFP`8e&quot;VP<span class="pl-c2"></span>%A106u2HFV5,FPg`lBon6FS;`=9fA5!NE^+TW#s&gt;e&gt;9M%p2cQn&amp;g*tPi.m/X+ZB)&quot;?,R,;W@YJ*2&#39;a&#39;AK?lY&quot;P4ZSXU9uDQUFH^/n<span class="pl-c2"></span>%Lhj%PWY#SE!&quot;)_96mA%SO3iWIPJI`F(jk?$K\@!6_:@8XHVa-1350,UNtV^HhK5S&lt;b+ld.T,/(]]FdZ0#H,a1MR&amp;s&quot;8h=&lt;!S.O(W<span class="pl-c2"></span>%PrZRZ:=jH03#bNu*hb&quot;&lt;(8_eYk&lt;&gt;Zo&quot;1UKJ&quot;!EFe5K-Cg9(;fcaFCj,ER\-.1.&lt;3&#39;TWlN^9!(tibX#GD/Vrh^i(d3D)Rj*ZM4k$&quot;<span class="pl-c2"></span>%2CfED1P,-EI7T/]Pna/Bd)g=@1f&lt;F2D%G$T.s\X5O4(inbR8q):;+aP&quot;OY!&#39;4KT8],GU*oVD6C2C=mu*,C^f\-dOF,W(!/&#39;Ujh[8<span class="pl-c2"></span>%.7k*]Dh+\7kQ3q%klX[UA;Ua(3VrlRc:(UJouN,^FjCN&#39;%`:clKj;99,ODED.==4=17^S--Y?C9SgQG-e)r]*Vo_co5i#%2G/`D3<span class="pl-c2"></span>%31X&quot;c=a%:5?1&amp;&#39;[Tb?iBOTD\+Xiq%Y8=PHDr#T=Red&quot;3!P&#39;&quot;t_eSqJGl#,d&amp;j&lt;/FR_02H0X&lt;9rC*$X%jS!Ynd/A6r--I!_3&amp;LG[N<span class="pl-c2"></span>%\R/I,:pGg8=?RPVi$:A%U.:_gQrkW,#-]%dpg?;/@_GdnJS\?EoTZ:P_&gt;S+#aBDqm?,/%.):plg=;]:V-##m\&lt;3p5uBT_+Ygr7j%<span class="pl-c2"></span>%J@knp)O;NccP&amp;Nq+HY_S??JUJS@=2MXuVjpBQtbFSIbkrS1i[$UgC$VJb4&#39;=`5V2]._EMc]JNe2]EsP!-&quot;hEQC`q,g@&lt;N&amp;1l@g@^<span class="pl-c2"></span>%aA1g8dBR^.&#39;5%GqpSJ%E*`j3pC]n^rPra^)l&amp;0a9?66*V/gBX.XX3A1p!IJoJpb.[21\S?k&quot;m04QtbcH\[0YPed`0K@)ZrUi5&gt;U2<span class="pl-c2"></span>%.qB8ed=J2=Ocb_C15@8i&lt;Wd)=D4sFjN8VA!e0@j:,qB`YSna_\6:q`&#39;08r`t4.675&amp;(Us1cXk//)mT#d%&gt;A&quot;`&gt;_MO&quot;JA2Q*.^3Z&quot;<span class="pl-c2"></span>%Ort&#39;&lt;i,jW8^4XKblqF9NPi1BJ&amp;@A&lt;O#jij7[587^,&amp;Q(DB5l$&gt;(M[)7FqR58&amp;@dXnaC+0D_RMcd&#39;0d#Y#d9/!`k?#RCrB)t`[_4&lt;<span class="pl-c2"></span>%&quot;IfafN.,QTVDQtF!0@st*^3`QFK!9gfEuZXOa\q%&#39;T/JSZCZ3bK2X53&#39;g1bQf&quot;_G&gt;ZR(SCRNO_XF]Sa&lt;,[KGT$+*6?B&#39;A27JY`dP<span class="pl-c2"></span>%#qfMl9Rk,iQHYrcVDZ3-*Ccba7@hb,&gt;H**YEJ)roaLTs=4?%1G[BXtpLT/g/BR1^8-6dH\B+_\4#^]L7\Yt)c+u5Sm\a1MM4&amp;+A&gt;<span class="pl-c2"></span>%/XlH[W(&#39;b)`*QnVc&amp;a%t^lj4IRP3rM,:goC)puB&amp;+AoK5!c2^\7;&lt;J+3A$XuSJq&#39;b$/&amp;T&amp;AN8*H,b?K)DpT8*qC&amp;@7n;u%10R&amp;lC<span class="pl-c2"></span>%-]T$/&amp;h!,bkV[7$L_-U0ReV043]&#39;RX+juA&quot;X[iL&quot;-#@&#39;QNC4Tc=XHnU,&amp;&gt;r^l&quot;$Q19:WZ]Y&quot;Zg#.LeD*DOZB1&#39;p]Vqi`&gt;c&#39;&#39;`%Wh<span class="pl-c2"></span>%,:@nd?AO1cXO,HL7LcXB#+6bA+!g1cj&quot;r=Gmd&amp;D[T8/mA0+fFf;+T5HdnR&lt;&amp;,(b&lt;P9dBa7c#HL!=)R\r@8!/tW#n)LQs8W4OP&#39;&lt;P<span class="pl-c2"></span>%-+5$hoi+it%PXS98F5ltR6Zu&amp;&lt;1qtu@X&amp;+D?*Q7G;ois&amp;k04rNRJNN*bh0gM&quot;ZZtp$\0dC[IoJ-0C%1CX3n5E&lt;O/1&quot;dD;;4`$Q&lt;J<span class="pl-c2"></span>%-e=(2L5[j7:b3nU4Q6K;jUF-WI,&lt;&lt;h^?*@+_L5i:4ul#&quot;&gt;E1^&lt;-7$1FGsZ-W6fa$4K4sK=k*`P]-kG((Cf#-Z@^2&#39;DU.lR:YfZ&quot;a<span class="pl-c2"></span>%B+6G`81Tnom`n3h`m&amp;S[?Hkj?=gn*FIbX*V#:&gt;%@m&#39;60k:s6/@M*3cg6Wt*BA/7bpC,oZ4KU-I2lQ&#39;Pb`UPSP\0j1.$A=/oafKR^<span class="pl-c2"></span>%&lt;gn&#39;u_ms07A?ZpdOXX*&#39;r2oJF*N(`?YXE)fLE,&#39;9[Z+CYe&lt;_M\6`jrR)^[^+&#39;?o&quot;#H&amp;a\OHoTu^%O&amp;^pX,m$9W!Yj&quot;#l&quot;s\A6jLo<span class="pl-c2"></span>%5)_`$QIlD[P33BmZC`,d/gJdTRdK#Y\?&#39;OZN@[#Jot4JJ%(fCVgfel?;U&lt;^/:5QH&lt;^%P!C-n^&quot;.Op#CT`jp9L]@GS.5Dp7O8aM%T<span class="pl-c2"></span>%c`AJop13&#39;;)e1\@.`:jJINVjd-&gt;V`[!j/;S41]u&lt;CFcjgc)4(+&quot;5NdPMk??,79RNfH&quot;7&amp;#&gt;Fb&amp;*2Q%TdA_Bg\`/]LDAm9r!U=0uD<span class="pl-c2"></span>%0D9/]jQ3NPKG+_aV5da=il;nT1e,DXb5h4IWM.3.G%K8SA&amp;bL=7Z*0!aiS%+[M&lt;;!;@juT+JF.dRYa&gt;?BYJB34&gt;^;2DnVn7!*Up8<span class="pl-c2"></span>%odW4?LaW7&gt;68k/6]g3T&amp;f:F:L9bKO&lt;k1D4-Ql,-/-b]3-@C+U0-=bWB&#39;AF0Xm,#:jJP2&gt;$^s;&lt;uF6t(1i1oC&gt;OX&lt;H&lt;e&amp;gI.d&gt;#W4<span class="pl-c2"></span>%P;h,:h*S#62?r+#&quot;^?Xh&#39;+^_+fVI2E1m+:&gt;Or?K[%f,UC5t2p;f%6=tSS(iLMMi(-+J;Qo2&#39;WFMZUI&quot;Zloi\q+`&gt;_aRTouc*Cj^m<span class="pl-c2"></span>%XL`]MUt`u7$ophJ&amp;DbG)+GI8X&amp;g&#39;R:Z#u=SogCd/OQ3:0l;0PC0,[b*Z2:aNc#Vc6`kn@)&quot;67T1fp+JeIk,Bh:=/SaWZ&lt;\X7.=f(<span class="pl-c2"></span>%:Sa)QSIn]Q&quot;tATPSd\Be`$$2&gt;ZHZUZHf0Uc\oQ?&amp;\&amp;nrRc6!Zr&gt;O4h@1X4!#=&#39;_@&gt;&quot;)MsG[sS&#39;0)\7)*8e\JVjPunkM^8oJ&lt;aIO`<span class="pl-c2"></span>%9ppFHkq`R?]^.=&#39;UB]hs1JNRf`0H?R1oiXq)dkeKmk&#39;4,G]CCu&lt;6*Q\noB&quot;j-4OX*]uJ&amp;RemW@V)-\$%6Y7A\lt+]m7u*0g7*L-2<span class="pl-c2"></span>%SagHHJCA=6d:&lt;TiT!jq&quot;7$/n&amp;$kb-J%,2-q]5+V;+Bdh8:9,)%.(u/5J?*@_rJKEF&gt;+VMGS&quot;nbWfHZ-neNlgKf0G=d-G=%M*pe,i<span class="pl-c2"></span>%f[@R(:f0.!:F!]&amp;^g^P&amp;Mq(8![[psO4&#39;B3m74DVSIFFIJS:Rdd*CVk9DH&gt;dc!D/#Y`iH!tLuc)NS6LbWccNh3KVe$YF.lX,6;`W%<span class="pl-c2"></span>%`#P7`6fj%f6ap-0[K-9c+UZ&amp;j$R[*jAg,h+B+tMj&quot;Z&#39;8/,EJrp+&lt;g^?@ZQh`.-5\a,C4ISR3uemCg,X^:6\)&gt;Zg%WZ,-`(6:MY;#<span class="pl-c2"></span>%*IFM#pP3(p&#39;4pfI2&gt;1&lt;nSEqD;%nk;V&#39;63*sdFs.2#O/+&lt;Ekj#GSQ+G7K8\D_U[Hm5VAYsa1#euGW*q4@W#,QIL8FuW0A?*MpKCQI<span class="pl-c2"></span>%?m\e_r)&gt;+m)bfbFc%D!DQQWr-cnee(&amp;cp*2M\&amp;i6aAs\C4Aq.]o5&#39;=Sf8$T^`i2.0:?SB1Cm,c*WCi\fi;+QBecGth^)&amp;1m/3I#&gt;<span class="pl-c2"></span>%n;[S@Ze@=eJHi)YWG\m@N&gt;s`n%H(OplK(tPEi_1M[-#aYjga%tLUDjjT_u_X5d=CNXXR5!fG5q0T,S5D8\9E3&gt;WN%BFk_g=4fnbG<span class="pl-c2"></span>%el=Y.ISNR!GiY!H-TAZ&#39;]dbj3U;$K;-Bnp#Q\6P+ZWDh.3_8kJe@cn[@/2%1:dJg[8K.(hWa+=#2^-(i&amp;i2;B2B&gt;WWJpe-1_)B(&#39;<span class="pl-c2"></span>%ehDtJ$.eE-OkYE$?E.C_GN*%DrIL6LfKS&lt;1lqhQ?l0qW^+aH^/3&#39;&gt;\0nj_VDE6*S6$AHKO6hmA&lt;MF3.sV,PJZY=s#^+Ujm2\/gJ;<span class="pl-c2"></span>%Z!J0+eBXcQnAJCPF:$p#mLW%=WULJUng&lt;HqA*%,kMpaslW#gj-;dEBFipOFhr&quot;&#39;)2&gt;^tt1j/2rH=8\con]]O9/O2WBO(t^_!Zr&lt;?<span class="pl-c2"></span>%btf4)`1U&quot;J3i;Cl[&#39;=IfaPe@YP5t&#39;5`(uhr4D+*q)8^&gt;dC&amp;Dh1a6.CG%e)38:GHc\F!gq*g;DMFCrE)6ABa.fN9mEP5&#39;4_a7DbG:<span class="pl-c2"></span>%k=p/2I1GLhaA4&amp;60qV7IhMW&quot;mcBE&lt;)Vi3fskY&lt;RT&amp;/dlbLRe@@Do4R\odA$+D)&quot;pm7#FMN+oaESMO^(X&lt;/4inq&amp;`#$A$j=g5f,KM<span class="pl-c2"></span>%Me)EfFbaoJe)V2rEhEr&lt;3&lt;Y;$X1&amp;TO,Ih$4N,9Rk_S9TUEXWl.PW4/O)DV/1b\dh.&#39;?]N8I6,&lt;+E0n,tkR]^?7AmZ#/HSH+(4:rn<span class="pl-c2"></span>%Eb%ZX66AQb(5EsOgGNeZkMbjF-&lt;8.mrr@h,_!:,+@&#39;DYnGjl8@&amp;i$p&amp;.5#uNdRhB)UQ5Dec&lt;Q?(!k8mpK9q,8J8Nj#-=G!Vi5j;A<span class="pl-c2"></span>%R(.Ep3N0U&#39;*^#-N/)CJ3!Ci+Trno:LPb&quot;?KB@6;6/Ke&lt;6(&lt;k03f]6#Wi%N1$NCSc?ED:VT#EJm1cUmELAXKuQW%pb?V;`1^dVT9(<span class="pl-c2"></span>%^O[d]Y_gGiLXsX&#39;AFVqI^hLBO&#39;U!!u,`ufaImh:+8np:aSPp+L#S[VU`n1F6.5e7gM/X[rlJrri0p+WlJ2N3_SjZHJL-2^q@pn,5<span class="pl-c2"></span>%a)beT_&gt;8]+@H4[]aKMThfSDCK-fn%6aSXm&gt;*j/2ke5a;%M.&gt;N&gt;XFU`&amp;+Wk^^dW?46eAF)T];,UcKLIBP@b@G=S06PDO&lt;Dc-\ptnH<span class="pl-c2"></span>%JKr:&lt;C&quot;3^qitNb?F?0LF\9Y#&gt;A0cG^=bdo)rc4-GPeYmRgL2J26sGu4.2h8S,VCH3cqdNh`Wcd:Z6A*HXFMg8Bb?4/MmAL+74`.a<span class="pl-c2"></span>%eWHs+1$C&gt;nX.%os4%dsTlUFS!\h&quot;&gt;f;s\1Xr&amp;e(&#39;fRJNd9J`#IS*S)r:s04d2Pd:AK4Yp![TflK%;Ftq%kSDM`IU.(M(pc7#24C&gt;<span class="pl-c2"></span>%jq12e)-&gt;E?kW)IIa.W,%s&#39;1]H?pEFhJ\g$)S@3a2-Y=Fe,%tGV@s7GTCr67bNkr$K[U7t%_&amp;MV8&quot;Xkeb)0PNtLD8[N?#[L?)u=H&#39;<span class="pl-c2"></span>%)ssqJ(=]$=g\(u9DN30XkuIhnG.XA#1&quot;&gt;&quot;^bGOm!&quot;?hUm2[WAC^70K*-_SgFgJ1u1-:&quot;!,SI6B[#mQ/oh^&quot;;0DPKht#dtlrg:%?B<span class="pl-c2"></span>%KZUqq5kCm8Y.?oLb*[&amp;?Ae#54eeFe@Xi-t\5aK0N?&gt;I]&lt;!,!^%M)$l;j&quot;IjqhQ9&amp;*_Qne+5iJ&lt;(Cqs/_X%%Wc9MRJGa#P\BCF0%,<span class="pl-c2"></span>%P[7]WZ12K0^i]i=+6GecY]P@uk&lt;Hguo,qoH,Ihrk=5$:6k:j2&quot;q7RiM3)4pZG/q/^LLP(hqf_1ASGQ.3Z6).hY[RHnO2GTKTee*G<span class="pl-c2"></span>%i%96-:;tp+PHJ^*kpPi3@En&amp;u.&gt;5&amp;rW&lt;XQ*mQci]:L;)s^6Qr&#39;E\;H1P41Y1gtU+W;`bCeKBb6&gt;VU&#39;\:JUK1JA6[7m7A?8fWFg)1<span class="pl-c2"></span>%AJ7!5&lt;H9&#39;uX\&quot;DpHrWBB&lt;D:%W#eqV&lt;2@2eZ]Yd@JOd)X[bAo9CKoWV?=/lr=K4Tol[3`#);Xf61&amp;.Q^M#nVbCQC/1[Qb_^0`HOVP<span class="pl-c2"></span>%7QWX.[S*\]7UDTb@*K*C=PoU39IPWmQTL]LTrEaZ,s0V4r=(`A&quot;S4p#&amp;i^tcoEC9Lg7^bG7:Edt!B2OtEjF2]\&gt;q1&#39;&#39;oLkP:t3*p<span class="pl-c2"></span>%\ij!_:fN6!3!_+)@VIg&amp;*LW/C.i=:?4B)aq@s6pU(@:f7o1nTKi8U*Olc+1$iHjHpqUj&lt;`cZ0AV@7:NE9AF`L+A@lW36.2pc&amp;&quot;&amp;o<span class="pl-c2"></span>%!_E8,A&gt;Gn_31F`L[k12m90prpl&amp;p,?V(-$e(hPrQ4S[&quot;a+@&gt;1)&#39;e&gt;(f!?fF:W5uC],M1-#D;T!DKYqdJS1:IP$/gXaS!K4:r4WgQ<span class="pl-c2"></span>%]_io#[&quot;K&#39;$C+S2^MqFJKKLt6A4&#39;O.RfHY[EO@`I[a(5a6!@\2QI@ke0khu&#39;+%%&lt;=3mq&#39;9&#39;3(WbqSIDOo.&#39;b:BcUKSE7nH?&lt;p8`&#39;P<span class="pl-c2"></span>%bYjRm&lt;;OEPLbd**UM&lt;;0&amp;Q@V4A4h4&quot;#?_^B9,u6^[2K35W;90)Y&quot;[8,HRpXNh9R4&amp;Cclt/ECp_KkgAd-O%M7ChPfjPcZr_Y9$mn$<span class="pl-c2"></span>%+gF=ZL&lt;:MUI%11%k^iRQ)gp-=[`#_:55;QJJFYiBHka+-hMe_Ua7&gt;6qN0V76bXjW2l9=u!&#39;+Z+2S:8JgQ+646&amp;+9fbR&#39;mO&gt;D/R=0<span class="pl-c2"></span>%++2QfU3m5HFoCO/`o]5e[dEIlfG$&quot;YI!*e&amp;(lES2Z4%Eep&quot;bcZ.7]URg&quot;8Y]fMY(aBk&#39;AKn_gZr=s]#)4kFB&amp;$F&lt;ttgiUkHgdjUD<span class="pl-c2"></span>%f8pV#^U/lG\EqdE4E&lt;djm$4n^:6Rb%E&quot;PJoIDC[]Z&gt;nN&amp;[&quot;DJn$\X^t72u?g$^k$0YRSRsM!jc$)`njZio7eLmj,Zk],GhX\rWD[<span class="pl-c2"></span>%-&gt;1D:&lt;&amp;mg,&gt;:3&gt;55d%8.F^Q:[.*+m&gt;^.L\4OC&amp;76NmSJkN=U&quot;%dUdZHV=B2?1Q$h\.Is`?WsiM^&lt;??oJi&quot;Hb7*rY&lt;1AqmOb5X]PZ<span class="pl-c2"></span>%jS,S4aAY=h=N0!K]^JXj7MR6UM9]:O&#39;cLD8KQBsp!l?YIi54_1o3L;WT`taWNbYb4j3leGFuM;&lt;W8bgm34Du(3?/&amp;.6c&amp;?;`^&lt;6\<span class="pl-c2"></span>%@Pu,RE0L5&gt;9n)U&gt;)Kn=IgJ&#39;)87kp]+,_W1\0?e&#39;$\&quot;4aa3.Qk6jh1Xij9@!PF^f&gt;Q!h7R8PT#nF1k)gb&#39;L?c`7m:&amp;&lt;c*Tf.Zs\bO<span class="pl-c2"></span>%0_nI;4FHEa4l2,^3(/p+2oo,?%aT4&quot;B[^W95qcR/Thr[Q*!U5+\N_.:E[sEs8s=f/gWb*t5n&amp;*tH-9@EQC_SU&amp;qE.&#39;D0LPUcUhAL<span class="pl-c2"></span>%0.4X?R\cJ/NB7b#c5rttI*/D/&gt;sI!L?0*sd&#39;hM,CQ5O3m086C.n&quot;p9E+@JQ#&lt;nF1g#A5&#39;\=E.,oLeP_Sl_$&amp;U)M[2j*gbu]E/BM7<span class="pl-c2"></span>%6U0JW38t,rHE5@X@SobRh1!hiM6D](#^F&quot;l&#39;FG_7W\q&amp;dl@JsEcCCaJA!.Gb,7D&lt;t#Sj=Xjf8mXcma].5S\7e6+&quot;ao)i7CCZsg^@<span class="pl-c2"></span>%/!uFe%=I1l:.,Uf(Fl&lt;0Vk&quot;SsG1jZ3p&lt;(IPBm&#39;J*Fpj&amp;faO#Rq6t`DN)OGj,C1hnq#q%&lt;^DS73D`&lt;Ppg[5.C-bZiFBSa&quot;&lt;uT+\XD<span class="pl-c2"></span>%.IQW!6W=F9)7g:l&lt;S:3(PId)4qiMi\MS#3,CB9&lt;uA)%6Bl*09_&amp;9)5o(PBU7Q@,)]\;+fU]=(L7KP(YI&amp;&amp;.jl(*-:u/Mei]f\n)C<span class="pl-c2"></span>%%&lt;bX%&lt;*9j+.$esU%L]&gt;/UE1&lt;?]4+&amp;t7$YPo0$HL,YefM,Ufrto@F2:r8+Tt8S5cS:OUp1oT#&#39;o3/TL+O:b[d5$//jln!Fr=YjHtU<span class="pl-c2"></span>%\0\*tfT6LqOmnbKjF,6=#(@YP&gt;_Z.&quot;[%0U&#39;(S@qq0T#UWU&quot;ft+X8Kc/$T?&amp;1!(g0+:2&gt;MgFAf-aNlZZ_P&gt;@X*m!$Rj+Cgb4SMN8\<span class="pl-c2"></span>%ogh4PD(cjMHB&amp;tn,.C2t&lt;\:b\67fr;K$S-P*)aoFlL`%/]26#;U^a5rJi\L^?F*:8Y[$/DS^DSs^(gI&lt;Fh]to=#88_:h&amp;0)=EG+&lt;<span class="pl-c2"></span>%_Z@+Igs!`i4U`o#jss=rW5a:.I,GAfgi&#39;&#39;AIgoMc.sH7%KY&quot;i3*uo!+^BY!:!rS(54GBr^&quot;KS]0doieT#CO@%^`&gt;*pons&gt;^UjA+W<span class="pl-c2"></span>%(+Wpb0bUnOIrT#ZYt@hpHpq&#39;T&amp;OI&#39;M^h/SF(l/Zq&quot;&#39;J8H(^@Ge=%bu&#39;`o0o_#BJPC&quot;st40+:hc]oGK]Op#76\.!-Tt&quot;B&amp;C-P]Pq*<span class="pl-c2"></span>%HF+Qj!&amp;dh/R%/DGW!35H7$jAWGpr-_!(b@HUI*rjhB=PC;&#39;?@#STbBkYUhZd8f3V=cA,%VGl3^%mQ.Flg&quot;7+Hla&amp;9h0`EW\dcJL/<span class="pl-c2"></span>%T53&amp;iM2+T]4u1Yp/ud!mBuTeC-\$ajG4;Lai]%qm6ban(%hAlR+!*j61TkELF+(%V#8Fm*+J@^Z1U17Ff2-U&#39;N\rGQ_S*&amp;7OY:Cu<span class="pl-c2"></span>%Q3C&gt;81-OLZkFIps&quot;&lt;&gt;ZeK0&quot;)F:dldU(FEU?YHDHa_cOVb9F?d*s6pUaf5GG(lJ-9G+Y&gt;])#qstU.BrdO(pctECm?.?`(0g8gb0P/<span class="pl-c2"></span>%`&amp;n*`/hT_8MlaOt*-1]hPHnODH0&quot;(lc3%;r&gt;%;Q$%3Es&quot;_Us&amp;tk&#39;44d+(o&#39;A3oI5M%m.3LScc-&#39;l;nI372uQ&amp;2XZhd3,o?p[1()I<span class="pl-c2"></span>%;::&gt;Y;R&gt;/bAM)SR^eL-nJ1,RfYpNO3g9u6)9D09CL=jcTc3ukgB7LYQjd!#JWjPJ$/d!`YoOVYG/d##=YudQ!-*Q`J,S1e4&quot;rttW<span class="pl-c2"></span>%&amp;_U4XlJEfK,`E7W(Jo&amp;mD-%Fq@:\\K@4T7rDrE,5-LO3cAB)4r2hMt6VW3Z2$i5M,;&amp;h&lt;r\4^aU$r+0[qu6.5Qac`r!6@#8A3@,)<span class="pl-c2"></span>%mWUi_fo9C_g&lt;YB8mM__lgL7a7`u.&gt;SY*(%`iKa)+*=?;e3bu5eJTkc&amp;rqX.o3MN@I7=?mtC1a@O68(U4pmX3kYu#_RMu4h6;ho]=<span class="pl-c2"></span>%Xa2&lt;nq:BT,eM[^#L6e@&lt;/cB])\Kdkh^2U9ZMH\9EV]3f#U@V+b&gt;4uh,R&#39;&quot;DXY)%daI8-A0D81\^^s7Q;T@Z1hToVmV:&#39;0:\j&lt;O?:<span class="pl-c2"></span>%mb:+J)]/GAc)JEY2R#224fqoO$oNaL6fm]A=i(ugU0Y8(Rj?q&gt;XrDto)0PAoXpKa*7o^N_dhBDf]kmb%?+TPio!00Z+Qa%eW&quot;GY!<span class="pl-c2"></span>%]%&amp;0*hLQ=RrT5=EI:eg.a[o52njS4O01(@SK5sl(j&#39;W7CI:2XITK.$qmk&quot;R`a[-N&gt;VHgloVsQ/gc4]h&#39;m5c+#N`5#8p&#39;(!-c,41B<span class="pl-c2"></span>%PnY$1TrO+rmL\H+!ALEu8U6VkNocdj&quot;\2!s[ZQ=0R1A9nWgr&gt;JrTm8/)k?kU//]g5U_4%OlWB-,DD1!$eM%uICi]OrcT%uCG%sp#<span class="pl-c2"></span>%H&gt;TA=HB/Idk&lt;77LI$PfYjDqPj]2\OC]t+F\E7&#39;TABnl@VR&quot;&quot;$#YNdq6nC=C@IBo8L_?Cr_G1jub7g!e#&#39;jPZX,_^V1?gWHcc2#1%<span class="pl-c2"></span>%^V*G7cr`JXR6dsSMrMh)K,&quot;A4pmeJ-W!&lt;&quot;AcBWI9%P#2EjUcC&gt;)SpDgKC`j28!K&amp;^^Y_&amp;jog9U$Bc=0aMi$nEaLlF,ba4W$IT3@i<span class="pl-c2"></span>%k;VZTll&gt;a?=h\fGCX-Xq]sX*jh%EIUoK2i.r2dm[GbpKPb8RFJ*H&amp;RuMLH$aB_&lt;b)\sL!L]r?8QNNkb[8FbYL]&lt;rQD+S)oXH-k:W<span class="pl-c2"></span>%,j#&lt;_/mATQ&quot;r0Rpr4(W/P.f1Nit1quaN\PjM5,i1!$l`,\fN0(h#[^:!G*58Ne&lt;c#fH@5\$&gt;KT^)[nu.$c&#39;b&lt;mT!u*!4g7KC][NC<span class="pl-c2"></span>%JFt+&amp;XuAc=C2SA!&lt;RCOP6e@&#39;&#39;$d\i.Su%gb=\aJ&#39;7\J-W]U,E6lYVPk..H2S&amp;EZ44pV+EJSc8tRqLr&amp;qpT&#39;;N]bHt^_Yf26YCjdg<span class="pl-c2"></span>%P!`1UomKN:m3RfObN17oFRQNI3^KZ.OS&gt;eL-@R&quot;&quot;q=T1ObM_\t$S&gt;&quot;3I]la=A;o._&quot;[k9CO;,c`(nd8BKtSqL#Wh;W$(rAbI7f`^<span class="pl-c2"></span>%\JU!8&gt;B0Q[bM%Ei!q/7gc&lt;?Jj]37&amp;c@bS&lt;(=EoBGagP\BF0V8*&lt;K@u0\OB&gt;9!-37-b[P+^Ugob7Web^\T[8`0n5U(-MShZel[=BA<span class="pl-c2"></span>%)?uRQ4f?;4o(_@8SR*r369@8,M.+s69^.11b5lHU`Ct)1Gbf&gt;NJeO&gt;M]p%;8NVkS6-t?1E&#39;:YMrkHi.!?NKang(FA5cIm%CM/WD)<span class="pl-c2"></span>%]L138]Q/&amp;Z1*WX*fd30FC=0M=h`?&amp;=9Sn55TGiT48euW$8?^Um+`(]0Tid2#k%6L35b,J&lt;WEE09WP8mP\.TSmS&quot;WD@hKMs6ZAr&lt;k<span class="pl-c2"></span>%X-^IA\DCb3WK_g`6p*j;m64k+mJA$\Er/S&#39;.&quot;L18EhUqMZ4))P?1fA5c*l+Q(HXGFE:7*dNQ&amp;c@=W&amp;O;F5hYlBK,W/HaP$8nU&amp;86<span class="pl-c2"></span>%,I0V6kOu#PG&#39;-Z(gNN&lt;2Sh&lt;nf37hqP.Hd]LDmT/\TsDDAJ@D)Ymb1T%+LG7I(2R&lt;p*jFPVc&quot;sHc*GHFPh/o]%=d=n;8Ua\p`Y[ag<span class="pl-c2"></span>%EoHmMpXf[m^UPlFW`5,A_k%IG0ig,pePG67NUMmV-l_%ng=(m4qDd9OY;&amp;S]@[&#39;Rs?tT6X&#39;&#39;rg+5?o&lt;qZ17&gt;6h!#hK3=W/]fUCS&lt;<span class="pl-c2"></span>%RB[&#39;9k@_4QkLe^&gt;R2`t(;2ksNHC&gt;F&quot;G%e29.ulWB_fmco3oU&#39;-(7YhJI%bT9hlHhWK:]HT2&amp;)D+nS8^.W[-no2p$(W?Igh#ZWth-<span class="pl-c2"></span>%(R@!M8Nbh_PFT6*G4[d6`=&gt;Dn\#OFt*NgH7]:/VT,EMoG4j\X;:l3[1M)tOm5S]G9k^L05&quot;1[%0TOi&lt;oS&lt;G/=4&lt;13\`&quot;!b\p6FC(<span class="pl-c2"></span>%oK)L5#\OV`I.B!/3%7]n&amp;`eo`I$1j,*72O;`U?pPqS&amp;=5^:B3;FSE`,FUDQl3!$`Jb,G-_A@22WG4`K&#39;)P&amp;I,MRIhYLbBP29mO0$<span class="pl-c2"></span>%?2^4@prr*iUEm)X0_;^Gl_7^^SD_?&lt;D=,F(,+Rh;F*V0.a?&#39;V%7_@7An7:YX2IcDO2lWh=&#39;8WW7?!aft%/&amp;H&gt;o5[frO&#39;hVE2sC+a<span class="pl-c2"></span>%D+f)&amp;UYT&gt;npH:cD2nd$VqgR;abh7VK!ln#SST&gt;gS913@m-EcK`A`ihI&gt;`e)`\&#39;2M:L7;)bgVUB&quot;c8sL(&amp;LpQDa0&#39;Dh,`7qj%Vf&amp;2<span class="pl-c2"></span>%&amp;4UZ&amp;0&lt;FElQGhdZ@[AM-7^qTH(3NCkc:k&lt;/*uK&quot;gTGE@aDY6#[qP^pq5BfRWr2P*t,GL\ZKQ0_VR;]/b2=&lt;+@_FfLsO&#39;pZ/bHoEA<span class="pl-c2"></span>%*DA?I*eO#@7TD5]I!ec&amp;dfg!95Ws6aHhH+:`.NiulQ&amp;$V$EJJR6sfc;3.nT)p,&#39;JO&quot;F7LXqE;!emst/j7(Yj$dn:(j*qfC`E1k-@<span class="pl-c2"></span>%_e=$0l6/+C36-ks[:4O_8$[BoVAgk\VqWc!AUth98Y%3CWWdDjITAgr;bqcN_8Z?s*^%R=g7c.0faFb4P-!?fJ\!ETp4Q5j$6%^J<span class="pl-c2"></span>%AM,N@W&lt;nK9P[1Cs%PBcTSKNVm)jhSB0&quot;Dgr$Y&amp;Q\f.IBd`+7rZ&quot;?uE5%0&#39;s8b!`Wj0f(Jl&#39;?k`2)G(4q&amp;c#Nrj-&lt;L!2CIBh?h(ZE<span class="pl-c2"></span>%fkfBs9V$h]-@Mi18&gt;P4MpQ?mtH,nF6d5H&quot;4,b?a\&lt;KBjq*J(?Tm0&amp;:qE.n=.%02t-7$IRE?dVfQ&#39;$]eq:-FP&lt;oFV7H[Y5gO511$9<span class="pl-c2"></span>%)R(V1d\=uLZkF4hmEnlHZ)?IO3.RA]CbP@]VV#,[lt+r?MO\VSkFG-Jq)7n&quot;!_Rr15t)(7q^=rc`N\]N=GpZ&quot;&#39;/.@71h#t@/W(:N<span class="pl-c2"></span>%FVlW5e@KOH1IU94O,AV`4$)D&quot;2@RIZk1%KRP&lt;RK)XDGQd^@u`bUu1hgTuPg9\W_?Z`0]R3&amp;OB&#39;:&lt;&amp;28aD(]-npJ&amp;-;E17C&lt;Y2=MH<span class="pl-c2"></span>%U&#39;sM0&#39;;n%R&amp;W]+c0`JQUOX&lt;2)^gjb&lt;D2s%?1S/Mq8di;uC&quot;3^2q#p7(ZX*uoMb_Y(AjCk/mqPXO7V`[75/Inm)(pWJ=4[6s&#39;:pu;<span class="pl-c2"></span>%0j=9/a$/K#%pP]$?`Xob5!(;$NS$;3b\ofDY$)f]hpE5uDQuPn[$geNi6c0G`\dBQie/[#n-CTQ)sHHKAq#\7&#39;Q&lt;Kc8=P:D[f_RV<span class="pl-c2"></span>%&lt;2-WWR1reB%&gt;4,E^[q3Oip#sn)VWD`*:W/J#%JRRO0TerfQVauC$BL4e;$9K@9]Q(N7t,$[lFr&amp;M&quot;6&gt;&quot;F!BoR,#RN_I:iYUF/ud,<span class="pl-c2"></span>%;]kOc8&quot;UB\*a@lWPR1,&#39;n/*a(Rq!Q)N9;.b&quot;jDHGqfm:Oc7Rh-#oP&#39;QX6fL;&gt;Pl_&gt;+UHquc.p&gt;?O$7&amp;-*fJlFRIHFC*hgR,`2SfB<span class="pl-c2"></span>%`ku`?;45F449l^a7FJ^gFf^b[LH(6*;B+&#39;=KW1#O`1tWa9ZNn%;&#39;nECG]m9a2TJ#@)3;Mudo&#39;&amp;6cN2$BU:,jc-?T6?:#p-JFU=Dl<span class="pl-c2"></span>%p,6t6#&lt;_jA_&quot;&gt;A/hM7`mp]DS2`HQ^M527&quot;dO(XW_RBO6ZG$#?I6Xg)LJ$6H#0AM`J]0&gt;2$*ceeYRq!Q1Le&quot;&#39;l)!bGqUJ?(!JB)?.<span class="pl-c2"></span>%2JMG$SajdJ&quot;Hs\^f_,=dJNOiUX3PX;DsFZF)L*4Z2*Vl,3&quot;2oar&gt;`&amp;p@gl%78C[N.gP!fOp6\P(hC?eKUbaoUGp&lt;!&lt;g:*X;*S?51<span class="pl-c2"></span>%_Oog8G)@B`#h$cM.a7jE,;smBJAI&amp;LI_q$q9Hn);_BbS`T6SAq9KRY]+.nlU+(Ba]d7&gt;l8B:fhjS&lt;0(cA:9#s6&#39;r@QNJ+&quot;]\Z[5Q<span class="pl-c2"></span>%Ha6!bT=+FT:H8:bVpa/NPuD$GTA&lt;Su&gt;7&amp;_cUB_VH&lt;n&gt;m+,UJ8M3g\b$+Q2@2R#aV(@it,p8&quot;UB\g=P1ORICVC]$k,*r7$Kdiu)\M<span class="pl-c2"></span>%^Nq@L9GbI5(4hk+$[tfOkU&amp;a5Ng=I!1%c(g=@U1SYHl=0ZM3===FA0;l&amp;ZZpmNJ.*I%tQiK,kVLHN7JI3q1.d*&quot;m&lt;tlPbaBq5TI:<span class="pl-c2"></span>%ggR-5_V@L&lt;@,XT[:uZ?HhM41%E&lt;?uQ_ciRVR&#39;G:j5l2LBMS8M$JFP#f,4F%$Sk7l/c&lt;=n&quot;\7UqWWno(pHH?Csp66o)2AqFd+&#39;e_(<span class="pl-c2"></span>%if`c6PsV0WD_q,c::TX&quot;^(STbd6?qoZROY+#nClsB@DRL6c;sX\hLQSpN=Dg:Ni\hPeA`&quot;_Wd+@Q+#PpSbefNga-?OECd&amp;LJ=Km&amp;<span class="pl-c2"></span>%;g%YG*D)V!+LZ=3Wl\BtO?Bm2GBCW5cZLA.(l&quot;XQN%Z:B.94qKT/t,-I.CkV?0_41`1\Tf&quot;,5SK/2pK27C6,%.t@q_[PSJrc5dqp<span class="pl-c2"></span>%flJ/^o^4lM).,J`4(O9[KPO*JN)/S\:o3)e]@,SOgjqdFY4c9;Jn5!3m-)1bAEmmb^t&lt;Dia&lt;0s*Euc\$mQL@`T-*QFWiT2[FVN-r<span class="pl-c2"></span>%p`:Wmnm^[,KJBlWijsFnPQTBWijmr/e3!1j9_qS@0qEIHGK7(s&gt;:4;YEi&quot;t=`[&#39;9/jC6fBLUqCO+;aZ1\bhG3YL&amp;)@_RY4!?L++h<span class="pl-c2"></span>%lT2JC\qrpfp6Ylk/n+2rcIh-49hFW0dbIPX,L^Io6lU!h4q99\km3%_1h,E4V7%GqoW2G;4n&gt;j9LH^I]@&lt;fe&quot;I(`YNUJ6!eNi1@#<span class="pl-c2"></span>%Y^ojCA*0[&quot;XdufjBa&gt;sgTEG6C[=bj&quot;),bqZQF,:MHPDo_l;LoP\Y!o\Ard6PCB2`YaYU@f@PaI-&lt;`;6UN(kqJe(e4HEm#\h&#39;&gt;lf-<span class="pl-c2"></span>%/t&quot;H=*:m$VDD@rRSV;r2X&amp;D4fD&quot;a4s[CXNW8Mdes`$R&lt;DX+&gt;$A(&gt;mEiA.mXRg2.dpVu`jHW`WI]3`PmVNHF@qmB+O1UN4:ccZPn`<span class="pl-c2"></span>%/B(l+9c&#39;F:rnkGJd&amp;@pfboP=j5)Y]taM@0Ge._V^o.BFJh.#Po+1&lt;bC^9pt.q[#c/p=Lu&lt;q&#39;56B#Bi#bcM$\K`1:a\20Tb\p`s&amp;&quot;<span class="pl-c2"></span>%/;i5rmh$mqo@&gt;H6(!h2A(:ESepXZYo^!4*S&amp;XPX,YjOIEIak^l\-DE6e&quot;^b@`P%UpYJ)-K;`_SWEr]e,Ip&quot;_r]]-fuC*&#39;U,A_V!&lt;<span class="pl-c2"></span>%Ec5s_@Dnn$.&amp;b7%Y.]m&gt;`6ni@8r&#39;cmEt@\lKu7A&lt;i*ig&amp;#APGC3U9poJs%nkL@(_rN6&amp;]_WLkCnIB3Ms/_BkK1U_&gt;&gt;VDMF+5PHu*<span class="pl-c2"></span>%2XHJrJ&quot;(&gt;ogeL,&lt;4(Rofc:tcXZDP/o5khl_cV3RMg!ifbYj#X&lt;=EU7;oRu$4&gt;8j_gReBc\5;R4F!^rs^QiQ@n97Y))o&amp;_e!i9^2$<span class="pl-c2"></span>%!@%EfRjC=s*o[3Y5,+]5!MY#;,F1%bU3&#39;LqWJ&gt;T4_YYf_F$E&quot;rF+CO1J6QnOJ#&amp;K(I^-N_hYdH&quot;9?/lt3VH=1Gk;l)C!*^T&amp;LKV-<span class="pl-c2"></span>%ij.$BD&lt;fV@4l]uLe^&gt;o5[;L:&amp;blHcK**LVMic#:ZA9hrrs8H2niR_i:2Ke;[*qA_U4,dNZeGG%8Sp8$q[-VYl5#-?E^Kr)od2:WA<span class="pl-c2"></span>%n$%aQL@6*7o#&gt;=DBASe]qYdfaV!mEl2KA.1*\m1P*QAF)/pf6c_N[M`8kj5FlK!UielJo0YJV^8#S_1n-)hlZF;sITp=*LmM(&lt;i(<span class="pl-c2"></span>%X`s[-3;&#39;TuZ.WUge:&quot;&quot;&#39;+$X6SPPq&amp;LU&quot;.YR4(I&lt;11RlF&amp;pE)mB#HOO;&quot;%aelZmYH=Jt\YJD%l)-iXqA&lt;e7%_4oj6Es`8l*NYuA!&lt;<span class="pl-c2"></span>%R6!oP9Qlsb(O5NlhU,Y2[mO#If]3RR3&quot;%6A9_,dIAo/CU&gt;(_`bCZu&gt;rk.\81V`i_,ans9.Ps:u7,K`bbDs-8cAhJ92Dt8K+m*%rj<span class="pl-c2"></span>%R0OiVnof2-+jOT==^!tqAH5Rf]fg1M&lt;Tehr&amp;Xtpq5UduHrPTRX*3gAU6`[2YG/j68@[+?+-TCHHFm*Fa6A&lt;bV!RS;pMDZ9[HAW^2<span class="pl-c2"></span>%41%(nF[Tq&gt;G%fbGd_=KCV`WlPdX&amp;6Gl&gt;#Ie&gt;B!4bq)XaF%7%YXd!OO9YUJ&gt;\Sk&#39;a!Tq(M&gt;m&amp;d.6gk8BDlTi1DG42?SfS1s#:6W*V<span class="pl-c2"></span>%F$DI!`cTVf4d&gt;QjO;k9)WD+$^_MK+EK56_EpFc8&gt;`&gt;nP/Fm&gt;_Cn`Vb5P&gt;W@eUMWL`D9sc-AS?/OURgpGpoiH.BaB&lt;7R)H.)DB&quot;D#<span class="pl-c2"></span>%3cMOZ4XMf&gt;qRX2G#u_r)Le&quot;&#39;L=LLOem3&gt;DOnsCOs&gt;4skp52mH@L&#39;r#ed1(l!Fr7,(i7^G%U99kd\&amp;@XFq&gt;=(%U!9j&#39;E5\Nt(edPY<span class="pl-c2"></span>%X:I8KE&lt;@8W`S/80O*J[^HCN4eaoTL=Q@)A&amp;Q?5kui\e;WK!M2OO*&quot;,:%PXcbpX(&lt;M6V=*%@Vt\c8%p36anZt&#39;7h:&gt;HLE3&lt;.$CeUa<span class="pl-c2"></span>%I2a7&#39;&amp;`5X&quot;PGDBKCG=gc`a4DgAU$[P\n0^p-o7T+hg6_`BQ`P$`)bJsNA^&lt;P(iP1tmVuXVH$n#?9s;q#oh*,`hSr?&gt;p`gi.`aEs&amp;<span class="pl-c2"></span>%9DSo-SoC&amp;E6He6JfLIp]d;&amp;&#39;$.ssFqY^7DdA0AX&#39;Yj/hE9NURBRss4T8n4@$O-@aM^mMReLR[eC&quot;!4.)@0?I+ZF-7nkWJP/*f&gt;qa<span class="pl-c2"></span>%b^DRhGk[nBH/Ss7E4GG6/(O^XFjeC&amp;&gt;C2j=PB=a=%s8^23T#1&#39;&#39;.11ulI9L:4Elt7R&#39;cKcZBYaNl98D=WrdS8SZ@]sP*9GpNGt]6<span class="pl-c2"></span>%)DH\Ud!%+$XcD5I$(!j+JMG_rft/[hZ8*Qg,ZuW^pG6l6g.L;T)pMRn0^a^u&quot;Ig]#\N`ic^&#39;-4!3q[R0G1]Ekb3Qa5H/g)E)](i)<span class="pl-c2"></span>%[2Pu-DC(7oACDsq20kbW!@Ykj2&gt;P?*i,2pS#98*n&gt;s-,-;a9N&amp;boS[6Ss6I.dZ!SOM&amp;8t#&lt;M&#39;*0B5GGlH7:&quot;r4(UKMGIV`J4kS&amp;,<span class="pl-c2"></span>%;!03b7&lt;%s3Cj#%+JB],K@&#39;gq,lR1!1iXq[,e6Bo&amp;T6S@fENiCOf7E/e.)b,N&quot;*HH-ggCfK)o*Y#F#A9EWLrR6boROk?0U)?Bf!3&amp;<span class="pl-c2"></span>%PdAig&gt;Ih9dGK0?9lB^^ehGAV^6hppB5f&gt;/Ah-i8Ygli9RH*&#39;]5b1&gt;=d;dXO]Bhrn#T10q!C+#Ng`7\iDg&lt;G&amp;jI.k5fqn^mt\7&#39;nZ<span class="pl-c2"></span>%?%OA(35jj0TL+E_kD]sEdTDtuG7ot(oUubY\qJp5SM9G&quot;1HRJ-c.#&lt;GA)bne]PSTtIY1djY.7mI\t%o&lt;a2#o5%XD`/m%YQjkVEF,<span class="pl-c2"></span>%f\H=B&#39;:pqs2d3:WSbf9t4?TKe&lt;tCf\WsA)IY@hM?rBFFlH@srhp%Mdj?1f!*U!;B5!KTES0KFVmI=qo&amp;38bBPXA,8^W+S6*FeV&lt;S<span class="pl-c2"></span>%AOp8=0O@Yec;i^e`02Wa:g&amp;M]#-ST6FM1D;qFF+=qM`8chqgkon-f&gt;&quot;Ve&#39;dflm&amp;.m0V?#aYOjE@!@/UH[a415Qso7pJ,LL!00SbU<span class="pl-c2"></span>%:-FP&lt;oFV7,h;IOGe0C8??r8t\Kq!F.-S/Zq%p(EfIWk&gt;KnAgma^]*&amp;i:S6KkHnXBL^%q9SpBp`Hjl_,&lt;s8LR9S$+IP\[Z!O/RTCC<span class="pl-c2"></span>%)04g%s/&gt;8PYAbuFl+-#-qAXq_YOq#X,iHFCioN+cJ,(2@j_KVNe*iuk(OasVqY65e`o4,DIoQB5aSb(J!&quot;*pq_*.]3s%DC1&gt;A!E*<span class="pl-c2"></span>%at4b&#39;MMiHGL&amp;$BW%]VV$FpS21`&#39;\Lh\3o,ZZ+oMS071;aYO%)&gt;$]1Mh?;+l&#39;;V&gt;-#UKbOJ(;KDPYM_ic&#39;^[Q6E&amp;K^;X&lt;&gt;RP8*uAk<span class="pl-c2"></span>%=)Wg$hf+8W*jJ4TW&gt;r@`UA^pXD2_F[7[#tsODNtV+9$f23cVVn)&lt;)\`cT@?k6gse&quot;!oNM$6&amp;JTHaUp0Yh*`jUCq;%rY!S&gt;Ga8KoS<span class="pl-c2"></span>%0-,@QG&gt;nWGk!9=M=!\bBSHI7RpC&#39;IMARpF`oi3%+W-oCpkVn]j4fY5MH&#39;GWY&lt;KPU=cOM3BP[Gm,p*W5_UZD529&lt;_EW&gt;JK]s)LcDf<span class="pl-c2"></span>%n\/_/osaKn&#39;[sATJ&quot;1&gt;mXoc\)Jk&quot;M)ZEI!cMc5?n&#39;3ac6(&gt;R1l-CTb6Sho?q1m9RB=FEl^?L89VPRq[)hA7EVgJnEJf#--aWc!:f<span class="pl-c2"></span>%&lt;&#39;&lt;^&amp;G&gt;8!9EC2&amp;W?iS4@`aZWQjKEupbJAWHC)gIDJ&quot;;P753dBnkqME$X3uqWcj#s!2A2&quot;RGE?bL#8,]l&amp;Vb^4;;%]o8a:L2ZQZ^u<span class="pl-c2"></span>%o23^6abR^iM7``.&amp;GISurh,*T2cG=^k;r_&lt;^NA]*G#eY]T0We[=!bGR&quot;4&gt;)K7#r+E5\;S?dG8tdgN8O`4h=kV6-b57I]Q%&quot;%jW6]<span class="pl-c2"></span>%?mkC9-UZ[ajS=F5!1ENF#6o+TIfJ_E*R9+Ag^\cUC[Bug5bl;:dD&amp;.8:dOA@fq\7`)dP%bAG2tI6+f&lt;8S6RWL),9hk5k=7H.ODPg<span class="pl-c2"></span>%)&lt;)\`cQ?[(ACde&#39;W&#39;_ZmnCPcCSGb]QK)RVIr&gt;$]EoQq^,1kE9&gt;AWQ9!FE&quot;W]&lt;o*=iZTQ=^O=J=b)@cU:$$P&lt;GIknr*8tJ8g-]hK7<span class="pl-c2"></span>%IN\T]\:=I&lt;PAN;VJ[uZH^QtW2&quot;+=c77fO&gt;&#39;5_Y&quot;ueXs/c[!Q&amp;+@]K&lt;)eDntA7ZU2.SXAg.E=KN1l3AdJ[m&#39;nn*[AKCl3HUAo*+;h<span class="pl-c2"></span>%l1_qf`o-1glDXH\jlj0%WMIfAdA+\8&gt;qLDF\&quot;//PeI?:X8=B;p`,&amp;!3a*\Tm5k=7H%\s&#39;Q+RW+tr&#39;&lt;qO2cG=^k;t:!m=4BIfBoXB<span class="pl-c2"></span>%k,?ojCcrDJIZ&#39;@]I`k&quot;KR/Y`D/UMS8U^XD,ca)&amp;QS5GNYbLr!2O7apaJ`PJp*0fBZ6/86rq*Xb)qV&quot;^@CGSoHs#A\dZPQ^S:*?%-<span class="pl-c2"></span>%_.do:S/2&#39;=F931f`mGh)X?*pq;(dXl%n`AnHBl6702&quot;UeNRE0M41V[&quot;W)VRO,RAa]*.MW7:e.,Vg&lt;A@H5&gt;DFAm/#7bk@YKuVkS:-<span class="pl-c2"></span>%nmSG@9RuKTPs*hW.&gt;)Q8;X+dM%+4Ani/U]#h05#PGB.?&quot;D]&amp;&lt;Mrs=%:*8a!;g7.WD*S_82RGZCD=?PXiqc?FH]0f?!N[`(pbbQ&lt;o<span class="pl-c2"></span>%l%_Ct+bOMI\&gt;4-dnu(AM4ZoB&#39;Q=T0aVbkfMiU&amp;VrJ]n$M*&gt;`&amp;*#B(iV[brZ,h#VlP^A?5YkUT:in@Fgr1]+Bg/Uh6=V[Cj\JMF8&quot;<span class="pl-c2"></span>%?&quot;rS2drBq9IYo58*W+L@7!mFtqJf6rl&#39;-L%FshQCp-I7:;/bdEp5ld)!pUhVg%TluWKpQKgG7W%lB#$1X19==J=`/\LNIJq,_ETt<span class="pl-c2"></span>%f??l)&amp;j_^&quot;hn(9]]%`Y?TjKkaN]m@%&amp;&#39;XaNm:\tR+7)_sP&lt;$&amp;s@llA[?h7t)m#`&gt;9pI5h&amp;eY^/rE&quot;lguV&gt;JO-&amp;H)7*iFm0ejK2qY<span class="pl-c2"></span>%)u%J0%8ME@OK^`ul5&amp;Xg2)msrrg5\OGC8SZqs*-JE&amp;u9li3IhA7tY&lt;.LM^RClsht6p8EDq7YB1MR=*q8-i(#^=o??WpIW9=i/EtA<span class="pl-c2"></span>%@((Oo7t[T7&#39;L+?7&gt;3Of#fV?(;*&quot;5TOWqF0o:@]&amp;,N_]&amp;ji)nQK41anZHTW,bF5M?DD_m#%\F3oL]&gt;&lt;_\J9&amp;^mPXEC:^!&gt;JJLc?Gi<span class="pl-c2"></span>%E!Bpdk&gt;;]nB=*U&quot;Zi+Z&quot;)B@idjcS6D6LP,Va1?+uf&quot;PukK&lt;q&#39;*&#39;=/5BK[_&quot;]%?n-@jb&amp;&gt;#?gGNZom&quot;9DNG=a`#;,@uXdc0dg_`M&gt;<span class="pl-c2"></span>%^8*n;[+*KeI&amp;%Q8E7iVM!pWfV;&lt;F!.qpt`&amp;E8V9Ja-0(mOI:990M-Do8/CaV&quot;.qZc:[il=7XKqCTPe`PWI:lRF(EeoB;:liJ^Mjs<span class="pl-c2"></span>%hT_0Gg3qPg)OZ4b%ufr;)P^*15miMgV!s:8](WE!s72&quot;NIPEDR&gt;Op&lt;CWfkC$DYnYF;0##o/-hP)pZ9nc&lt;A8.ZEdS+jK&lt;Qi?o+h&amp;7<span class="pl-c2"></span>%\&lt;9Jj\U*QI`^+UWfm3^8+*O@1grTu6?=p]j@mA;qb]*GC_o_2`Jne]+&amp;!7PdnuJqdS_&#39;@TA_(A&gt;mRI$rs2Z&#39;&#39;H*&lt;(1[gV^/fVPT9<span class="pl-c2"></span>%T)dHoQR&gt;HBefUKrh#WrQ:p,l:m_O5U:(tBP*j9Y4q4$bg.?Jc_@^5b=(IIDhfSnn&quot;1=F=qoD&#39;L3YBBUbW5;YqcRf9&gt;,5TO89U&amp;-7<span class="pl-c2"></span>%f^e_]+k)&amp;&#39;\,.k=!d!Fm,fn(rI7nm:&quot;nZX,&gt;2H81fM,[I25gqupF@=2_(XE@jT*0&gt;`cTRX&#39;q]+Wc[&gt;@63&#39;9.IAKj4)K\Ljc&#39;=&quot;52<span class="pl-c2"></span>%QP=$-2DATG/jOVoU+Md1oFA&amp;*FEl&#39;[&lt;#e14`,ZFUK$Q7KBB0F-9@4P$%n%KOm[:N2-&gt;a8I&quot;P3Rq_pbq+HuM&amp;MKpU?*qn6hD)V7^]<span class="pl-c2"></span>%6+kTW1e9Zk#)cm&lt;D4!XP.8q21$_J*;&lt;[tM&gt;TJOD3Se_P&quot;85pDT[At-I%&#39;8-NA.Y,3ng6j?@iUI!G%AG5cH(XkSWRCIk5Z1D%d]gA<span class="pl-c2"></span>%Zk0&amp;t33]iqCCBH@`&quot;!=&#39;I-u%Gp:`$6I4BStOcu4&amp;f&gt;3E)l=Y;$0Oecf7V5`m&gt;g[&#39;-%V.4de]OPaGo7[1R5jnYY`TEBFJO-CFZ*&lt;R<span class="pl-c2"></span>%F0W#9$6#PF-WdP2dDsR(1D&lt;7Wm2^#G`*pt%;Hk$5]++&amp;HNBMRFE$ETg.&#39;n6lMRNNOCo6X+$KDd)_*O@\.3EQlUVE(2E%&quot;kslq0Te<span class="pl-c2"></span>%lnIqn?rfrc7cQ:651=PLG@g*AHWBkpcZD&lt;nLA&amp;$#i2_4%&quot;(Pp_7aB54N-q&quot;m*+5Kj#GIYV[p[,q*8&quot;P&quot;b*&gt;E_oFB3m]^E&#39;4QF#h*<span class="pl-c2"></span>%A=&gt;ZaZKD@]q!16t[s)q.-qDc;UUMuq-DU+amN)crHB9fdYWk4jfl.p19kcW&#39;N99*PPo&gt;ScD)CNNo;/Z&#39;O$1+,h&lt;AKuDJGWZ0]I$&gt;<span class="pl-c2"></span>%&amp;C=%2rRjKp9&lt;3/q/KU=bB+GDGoGoNP7D&quot;1@)$=7K6&#39;r!g&gt;98iu#FUp`hoC)MC4)D&lt;FKg;8oTs&gt;/cH+&lt;7Y,p];d)9OB3=;q,#+7&quot;f<span class="pl-c2"></span>%[ifSVm3J/+`LL\B7bOjoiQ&gt;VuV&amp;J#DU.2u%#eaGL`[&lt;.n9TDT\.)uf:KXR&#39;2MO:rh=cs:&#39;7VC:j#O=3eYd._2CT!A6I+E`gKs[S&#39;<span class="pl-c2"></span>%`T:iJ^0+&quot;pp5V?*96)&amp;3`l`TWC`J;^L`NS[K9A]9U.,;mR^.;,pZHX,-1r/E^*IVdGA&gt;c?5k`d1e?H3`?%/u`&lt;&amp;DaeMpo6&lt;PK&amp;*u<span class="pl-c2"></span>%c-k_2Y&quot;g_#mF&lt;[+]K9`&lt;58SE:(u:`_)UY,9\3J*:+b+%G/-h_0`W&quot;L6]R&gt;nEfp1P1gcZ]a5A&#39;N#&quot;Km6(Fc)-tan;(+D\4#H&#39;173q<span class="pl-c2"></span>%,IBu]/Rl.Q*JQJg#Cm`b=60p,J7nXoah*bk9HYg^^V;fuJ[^8[(e@fkBGR#$Hh&amp;h^#q8r&lt;k;b_+p&lt;ASXZGX+WIi^@Prr23L52TZu<span class="pl-c2"></span>%^$LG+^&#39;[$kN_hp&#39;[92KJ&lt;fXl=J-[5&quot;N,pHQS/JN&quot;KY+)_2H+_:DYE&quot;]!OF&quot;7c@F6[$EKQR^=_Iefo/q^@hgEikr?Ia&amp;LpcZ1_Vc?<span class="pl-c2"></span>%!I4K%+*CtZPZ]:h()_[&#39;E.2.*s1(+$)=K-9+r,[=$%.`#(kX18)XFi,)=&lt;Kb`^AS7E=.YmKS&gt;2gn=pcukWNhLB&gt;WIn:qZ?9D&lt;tDV<span class="pl-c2"></span>%@HH%:=4Ml^d$nV1Y*LYlbk^URNZ048$iF$+idHC=kIfK5f=UU6-f)Pp)0hMTQp\dGX*&#39;5A?RYY/DfY)bhW(.J@eN7S$8FYcIlB%S<span class="pl-c2"></span>%GOmI?%e&amp;4fRK(7VBXe4O!:koWHHIl/h!=&gt;5duJS5g^hru^KgCk]=&gt;]:$$C?_p0*E]_$8U*Fjcl$GB1=?-rX4j:#&lt;8?7V60?Z7!Cl<span class="pl-c2"></span>%oJS\3G&gt;CQ.O`tFn$o[+`bAZj$NC`73G![5s(43cdaWV^$W)p3HVPYAjM$r&quot;WL$Z]DpgG?E\\AAB5;/h)(Xc(el)07-kPcMQrHso[<span class="pl-c2"></span>%?:[:4Un&gt;r\cYMd3L%NPTqKX7_]TE-Jhh.c_(=I+/l.:X]lU(GhIufkD4%m=?UgFqdY@m+/[Iiu9^9ceO&lt;gIB0H&lt;.Iem]iNbGZpKE<span class="pl-c2"></span>%I(!Yq:g06roMcKj(+(Xebh3&gt;h(+/HCaQ#s!=P1-nY\,Ig=;\SfLQtL?/!h%fD$&lt;Q?/,/6.aGU)?MZHA,!D&amp;+LR/;61Pm[sU(DeE8<span class="pl-c2"></span>%&quot;Ub]&quot;2\//V$p[r(5[Fja?4=X)hkLWd=r=i`0PW+?=r=iK%R=5,5[+X^&gt;mru(%)CZUak!;RXih*a[Xt?@Xd`HPlVn\/:&lt;5L6[KWT^<span class="pl-c2"></span>%CgDIhXfDh62ra2&lt;dK3Gc[dHi1j(r&quot;-fXeAmCF`LnfXcHcXfDh62t@e$ndgWZR/;6;XfDh62^1tS!D&amp;+LR/;61Xih)V&lt;u,sr&quot;j79X<span class="pl-c2"></span>%2\//V$p[r(5[Fja?4=X)hkP$o?.c_#BjD-4&gt;n&quot;O(hc&quot;At?J)ipY\Pak?J)i7!4laA.pI5%2_,iS1.$&amp;CL8l1,IV9):jIn&quot;p&gt;64-U<span class="pl-c2"></span>%0,HbiVS&#39;^/=.%DC;d*RtHSeE5JZ5b*eJ4sm^bkeq.o%b_F1)&gt;)Cm/Bh!2+[1SEb()@2*t(W/FY4jn&lt;F0MX/Rrd)*U&gt;5Y1=Eng7^L<span class="pl-c2"></span>%%@a7+@Nh9K&gt;t(lrS3bc)7FZT.2?##&quot;eha;+&amp;8r:kk;0)[9ksK$89O&gt;oCPR&lt;j*c5P!kPi%&amp;bfR&amp;dOZR397WhF&lt;h-&gt;IoQ\QIo2Z&gt;*3<span class="pl-c2"></span>%)\s@h\I`_F2-]0Z7\0KdeBW&gt;r;/&amp;620&lt;MNRX$&quot;G$[Qf`)Y%D+=\&quot;=$]&lt;dC*3O!i3N@2.#oJPgLS=\T^*c_VFIbq2/;k2qB[Ia4Wo<span class="pl-c2"></span>%,st_&lt;po(_fN7p;=*&amp;[J3hX;q8YR4W*c2D)#G!4#!c2F0=\-fT=4e=M)LJ^0hGGF:Mm\&lt;.RJ:0%T4Lb^+C%B0+G9f,LaR*&lt;M$M_1$<span class="pl-c2"></span>%lJO5k0S8KG@FX0:D0\S&gt;.NViK,6sRoLCr;VDPVMapdaW&#39;MW@b?FmASb38@*tB?OePBIT&quot;J&amp;E]Kb))L4&lt;S.rFlkF&gt;Va,C;,;L^Oo*<span class="pl-c2"></span>%JKp\I`&amp;3]u7T(!mncDBH,:RCRHbd)r!Y;S&gt;a_N&#39;(m1)7e?a(B4GTMG?-nL,7XpfJU$qsn7_?q%o,BHq\2Cuip0#h&lt;&#39;$]Dj31ERK8<span class="pl-c2"></span>%_\3hRZ%@\[pmb/`P&amp;i?CjZFFh:gORW?&quot;pd\(ne/ON&quot;mls#3`5V;I0c.=U`:WQ59XFB+cMo#,j&#39;W@g1&amp;V!BQp[M)?Ou\m67r$T:iu<span class="pl-c2"></span>%YVEO&gt;pNNo[&quot;.m$&gt;&#39;39q+!n5rbahS@QapM&#39;R@EJsOF,sra2[XJ-8oH/mQ2Kc.%G=\G&gt;fredV&gt;LCuE8&gt;!`=1N3?h`_`iQ@IZ&lt;mP:1,<span class="pl-c2"></span>%]H(D6YH?e/Xoln&gt;rGp:-@)kV?&lt;\U_T?`IDI10u`&quot;U%%tT#N+fqrrC&gt;kBq!OU.Q?&amp;N^u87c4eL32^3$@Kkc[k%&#39;_&quot;RYH#j69J-h0O<span class="pl-c2"></span>%s8MqRID\DklN.QBUjqdD8`]\tVRJjG=)J&amp;u5&quot;n!^T&quot;3*6lB.FrVT.&#39;rm1S-2.spBN?0j@&lt;GU?r@p6qfH%BobKIV3W=nD&#39;ni&lt;N]W&amp;<span class="pl-c2"></span>%na5VG`Tt$rO84/K?5o/F^[8+=#6`*):*_IQq9?hM/9rG4qLtM(m&amp;Z./^[#%k;$J[RU9Ad5jfm*&amp;m&#39;2+)D&lt;bWg7tJm$n?1o&lt;moSV]<span class="pl-c2"></span>%btR5MNCV.&lt;n1?KEA/HlC./a;;q&gt;#&quot;=$tdBsj#*7T&gt;n/Bqb\]CHWati%TS]R9iAtfNI[-P[bf$Xgi&quot;&gt;Oe`tl)o$A_$r@&#39;u]AFB3#K<span class="pl-c2"></span>%q&quot;V&quot;T]gEZRdi/CY&amp;Kf,cgXs9aB5OBgD1F7NqilSJ1/W@.jcO&quot;OFALH0M;$])AA_[-oi;;*]TgOf`e[N0e#s&quot;9S=66C5LH.]VtkD&#39;<span class="pl-c2"></span>%M9pt7+!J[Mh1+cX1TT-p!&amp;FtMfkiYk&amp;4gIl*k7^ZFi%*Uh&amp;.*,3B-4?mhrLCc&amp;(/nKR&amp;59c(si&quot;2W&quot;[QE.0h3((X^Zg[&gt;cegLAKt<span class="pl-c2"></span>%WNkoegL@CI%kEWD\.`ocF[teD&gt;@L)BF.8TCR?uTBfo=Hjk2]4Xkd/n]0RlJES=)P&gt;hVAF*Vp2@&quot;Zal&amp;T,kCjkoK9ud&lt;%VYU&quot;?0mm<span class="pl-c2"></span>%RGifmkU2;VH%&amp;^EK@u?C,@VM&gt;ArQ@&#39;)g%62C!Id&lt;eA+2.q_WM7F!&gt;U5j,&amp;f=8bpSjq=E^!kGQ?TkV+#hF$TrH=XM2H]:YaR[&gt;[E6<span class="pl-c2"></span>%2X5YEV;B8MBDPXqItD&lt;R&lt;l:Mmm7Tao#sG(p7gISOcsScM#KO=LDJMb&quot;k;Jk^dBp730K2h3iuVKuS&#39;5EgX?=`d3@U\%rX@=C&#39;uH/V<span class="pl-c2"></span>%r;L`2,IrG&gt;@`*&quot;gL\/?Ca5M5`%ogF^hSRdZd+kJZa588u(;bNP1\.pG@ofJS($RoHH5UJ&lt;bn8X&gt;4#Z&lt;:JBDKc)pE.g^MGbia59Yq<span class="pl-c2"></span>%/nW$8]FXk*do_[]5&#39;q`P(\KuB.khLPE1#=`n&quot;Z4YYjO4G*nDCNWK#oD5&amp;?K)n]Yi^&gt;%`:*.8E5jg9dcf1uiQI51Psgb@3G3U7&#39;b&lt;<span class="pl-c2"></span>%+2$V.[1bL.&amp;I6=%fFIj%IlgN;&amp;H!3sRtXVkr=7\%F%Q7?#cB5tW0=njo2OCi0aqfN7XC+)\uVO)[W4On2Wha/VtP2$&#39;:BLa:NUU%<span class="pl-c2"></span>%lM.%-_+aC_j4IJ&#39;%q@&quot;gP*t&#39;,+/WbqY[q^Iq!QW-\]mh6C&#39;:-dml\NhQ@7e@^L_(LqO1aa5&#39;=YrA?tTXZ[!WaT%eAU6PXP$NL\_$<span class="pl-c2"></span>%7ruubR%)&lt;qcKm[&lt;kuh+\o,0n[&amp;T+Onnp8&lt;LYRYf[c)WQ%9;tU%EkeZ8F`-0.9J&amp;_0qC_0-gIu]A,l[uXkc&quot;s8XC%_5e.\&gt;:icK6[<span class="pl-c2"></span>%?I6dTgrMN28ZhoT\]pKr]kb^O2CDrM&#39;4soqN0E]PY(hA&#39;7r=H+LQraXiP%Ha(fmfXgnn&quot;-^upu(DBir#oroJ55Q3Rgf4f`o.PcnL<span class="pl-c2"></span>%.2i*OY^d!V[PV+DWs*EZe*.a?S&lt;H/t[i&amp;G7]*;ncF/3p@ib=/8WRB89\&#39;`2%7:s67kES?)gDDY4g1rH-;i&lt;AAFk6W&lt;D%9NgqO_HS<span class="pl-c2"></span>%(34b$U3SiQ1ni$M&lt;M([Od71;$7\-2lMfZ0\F.7/Vnua.)gJ&quot;Dd2?s!M97h?%K/Mm`h!BK#U1lHh@qu%kS(WiuaF82Qa/7f/p?R4D<span class="pl-c2"></span>%?Cm-J^VD3kpU&amp;bac$l&quot;8m\BBVD&gt;&quot;5$KAW^k5C&lt;S1Oia;l6#\/3b\LkS:`!X=kRHn!VcpjG&gt;425M@&gt;&quot;QYgMutJe75:p+*DdEPCH?f<span class="pl-c2"></span>%J!&gt;BCa/6]p1Y!7NpZVS;a(@fU\QWoj5%Xcl#AcKYX#Q0%bIu[-l`KO&quot;B_@FpWVM56^]R9TC.IeCH^df&amp;^Q$Fh@8lEqqmTAXo=7q&gt;<span class="pl-c2"></span>%*[@+88R!k9&amp;(hVFd#A!%[PaZgi&#39;54dO5bN/roR-WBu&lt;P$U4;M6maJUa*].nuOj9L#Y*\o*WqSa/0&#39;-#P*=oAVMfF0fB&#39;&amp;%d@H16E<span class="pl-c2"></span>%@Xn#fm$&quot;of*jWpO6nW]P&#39;&lt;bI:cY36;[NG3rr5DS9OYQ&gt;!PeF?&quot;,dbRVm]a+gKK[*mORdnJEq^.@gdg7-T&quot;sNtb&#39;oR&lt;X=&#39;fa*YFHm<span class="pl-c2"></span>%U3XmFel1&quot;C_brCeJ&amp;5gR;j6b_&gt;3-hMRes%qCR+pi&lt;rZ8`9M\5ih(^`^fgU47dW/TP7dNq(.XUFj_]tP`GGf&gt;l&#39;RrS.ml4I7nGSFJ<span class="pl-c2"></span>%nDX?75/)IFl0\@4s72KXjo\-6%p/f#/Uj\ibHm8eJ+jcFV]S&#39;2-k7BuibH*\&gt;^_*E3*N[Q=N&amp;7;IT[X&amp;S?YoA=Q4JqHq!ueb8.mK<span class="pl-c2"></span>%$Np1I,FDiKcIZ\N3k5@*GOk_?4$2(he5o&amp;K^*@ET-&lt;4f1&quot;i;+T^Q?f`+h:Z-j:SomV8s(*0jOd4;O++El9Sf4&lt;bpoD/-YBE[\gS*<span class="pl-c2"></span>%\3I1,HqjSaQl=7%0efK_[&quot;E=&#39;Rc-ll-Z,&gt;WVugL8&gt;]T?3$C^LWDE`Mqnb2XR[iaJAqY7PCY6acAgbrG2cG-meVlr:H!rVlbo4QBe<span class="pl-c2"></span>%?GHL=p@fXm]gC1T&gt;lGs*r86c=R0lj&#39;g9U?FEm-#(7+coFE&quot;kkTYShXII0I-=B7o]FCBq*ZAU5l[CYOE&amp;/L:MM&#39;GX/$miBnW:Mg2n<span class="pl-c2"></span>%XS(&lt;&amp;A]_fM.%YflZY&lt;&quot;`6;d:6JS&#39;)=&quot;W1LNZ1C$OV!`LaNQ&lt;h)GBok72/aM2Pa&quot;72&gt;Il@7pe_8\Dp;68&lt;7_AiCftH^Xc&#39;n=Y:S];<span class="pl-c2"></span>%T/q&#39;TQSETm&gt;[CdjLmC#NQc&amp;aY$s3&#39;Z]5Y[%!,FC%4;Qt(,`/s62Q:W2LlIlr1-4`C@eTg05pdD5[VRjRF?#a&quot;f57-`/ntX!L&gt;!pk<span class="pl-c2"></span>%\faTpIE&amp;[pK#h$rs52rkUBZW.3Gu%$q]p-Km2?bK:n3Q/o/u^M79poN,MqSnTPm+d%SH/p5\Vg8;&#39;u&quot;Y2cX+=B`P6ADYn+_BGQiF<span class="pl-c2"></span>%#$7Q2i!!%83L4NklKpWVRR1b(_:)uu;/jJWd0H&lt;lkG;/BZV^_D5Y$6V/AR]Gj(3&gt;Re&#39;(hH(0@Qb)G3l$Y`@rf`qrScd-?$\h43-M<span class="pl-c2"></span>%(VJlngCb28&#39;LT,o_38G-RDOT&lt;a$%165f#/\.W73J!cVltM(()&amp;Kr[I*mN(Zh\&#39;S3WXbdX)GZdPA&#39;rWki&quot;QY`:^&#39;73E&quot;HIU\6a?=#<span class="pl-c2"></span>%.R_-bWBrh@H3Qpl/3jM!W;f/AJZigK.s:pr(h.%D.&#39;S6IrA1oOP[P=XP`;M/^f%M`?Cb`i]-VA/[CK&quot;eP/,JAAGrs0D8TDF!501q<span class="pl-c2"></span>%%d1%#Je9\9Q@pG4^*u#e,=&#39;5+:/eO_2lBVTKHKp#=,U-OE&gt;2KjHWLoK]MaFsm%mfWVoh9_XKG&gt;F6S,PE^sHpuZ0*KSs/8&lt;L2Ala_<span class="pl-c2"></span>%6K7A[!&gt;?EoA/;2n_%T63E6d:c*)1dD:,:[B5p@.&lt;-5BWT&lt;f,eCAbLLN6V_K&gt;2?LOoL`i?nYNF]I+m@8,UoImGN7hTDjXjf)&#39;);!m<span class="pl-c2"></span>%RrF[Be%XKDY]S&quot;JEVuMF](&amp;0[;%/_iK&lt;4er_p&quot;!!&lt;jSM?&quot;KUDS/06;BacGnr(!S%4c&lt;E3SV#J&quot;FHp#.]T%5&quot;H`!_+b^7u2*7\5]*<span class="pl-c2"></span>%?b0190:EP^/m1\QPNbapEb/3g)iU%E:CWIA8quXU0UKF8mV&gt;Xl:I0g]J$ek2IHmb/cFp&gt;SEct&quot;hQoAde=6?o6&amp;7&amp;9?&gt;h0Vp&#39;&#39;d&#39;e<span class="pl-c2"></span>%`5+hH--&#39;;LN&lt;#&lt;ioV=$-32s`%?rj`D&amp;l&gt;#H#2IS3l&quot;;]&lt;)^Em5ZR2Zn,&amp;eoU16&#39;6]=#&#39;8El7.L&#39;*!BAkB=*tQ!1GtFPlkF0g+]p^<span class="pl-c2"></span>%F[:Qm4;H=DEraV=)m.D2)_;rp&quot;7Qd%;O&lt;Z,eRT\k.;N#$]2_,pAZ/8-%b*QY&lt;3UN\/r3A?J%hki&amp;D3&gt;Dh!W!Z/YX#KMn%%,#Fto6<span class="pl-c2"></span>%MgD\+=:t`RHnP,?Z0,h&lt;(g!omg-OK)^.5%X4&quot;_X7[B&#39;_Y3\SSHDb_*5!gh]ug_QWmX`[QA)9,-rXX.TiZ&quot;q%*&lt;e;:e&lt;FBjYp6]:j<span class="pl-c2"></span>%(q)1Z`4^e&lt;/M#.tltIl\H-&amp;e3/c\gWd^))25#[dtH&amp;&lt;fGTJ*BXLUnf7apXjZ#a\1F#hQK-\s#2;&amp;m&gt;pk6GTOi_M27$9]4-MQFVW!<span class="pl-c2"></span>%X#C&amp;nfTe%/m\&lt;0D&quot;E&#39;np!1G+QM;2uI=+11&lt;!(3t.59M0UXZEpE;:91G9s_j7TF)a9=H)[JA7Rk^FTt2K(DA&quot;V@9E+6l9JUDbnm&gt;E<span class="pl-c2"></span>%l`3+:/j$b1J-E2.Y3m!S#o42c#m%Dn[?u]W!o/3pltsJQ*N;(/]Se-&#39;;G+1@.e.rh(8J8Wf96^&quot;X&quot;TZSrU\R1HFVJW41%)dg?VF1<span class="pl-c2"></span>%kD;/@O/G(`?!&lt;q7[)h&#39;?1&gt;^&quot;!SG(/DGlUi`&#39;t@=JJOM]M8jeu7_?)&lt;HnpI9&quot;&lt;f\%G!/]s/a6VD\g`/b&amp;#7Xfd/l7-XZqWTsrIPrM<span class="pl-c2"></span>%&amp;;RB,3l#T4_Gb@&lt;-+(ZtL#a(a(:&quot;/+^q#&amp;K&lt;ZVD])Kljdf/KIEgDCYr&quot;/CdZVD4]a)O$Z&lt;5etT7&gt;17\6?SrD1h8+qBUI94G9N109<span class="pl-c2"></span>%H(Rlpa(u@\Q3+DRWoP/1,nXu7;&quot;X%R[NuZ$6=&#39;&quot;p#).&gt;c_/_/1Aq&lt;#4aInFg.&quot;90_jU%GnI6q6,VSTINDDHuN1I&amp;R7TP=4a!Gi&lt;)<span class="pl-c2"></span>%MkJ#ViO!Ei?)&quot;UC&quot;&quot;9&#39;;JB/Y7#1b!30`f,6C0mIMGD(oEP1&gt;0`oIa:MaBNZi`E?L_?k&amp;B0BOhV&quot;;i^L@J]/g=@V]&lt;oOP8G&#39;\sr7+<span class="pl-c2"></span>%X%Ku=8JX\0,Z%mAdu5+mK9oCIi#HPfY+eo]j_`OD&#39;M.KpCo&amp;e&#39;S)d9M)U&#39;#eaK6oj*3.u$&amp;oqI4_1@)QCPE?c^_JXu=1H&amp;F2\JnY<span class="pl-c2"></span>%$7)u1&gt;##6mf=jRQc!XX%9#+Q^$:3R$1EV1\&quot;`;ptkq5RZ4#AIk`4kApaR+ilFHX](S;u@;b[P+^-WPf*rfT:4\HGXI&lt;!f*P(?bn_<span class="pl-c2"></span>%cm+t4Jn@F1VZ(&quot;Ys/EQ,55&#39;gA]=@7LdVS3l-d20l:+?0UlPe8iMh\u&quot;@K&lt;=c[B5\k0q7Iu,bF8C48JOFI,K4GWp%tp%;&amp;K=e&quot;A&quot;S<span class="pl-c2"></span>%7HG4VQWtY6/B_YN%A%d0B&#39;MZdk\aWMIkZZ76#97IKs=5``b1R$/&#39;_%*&lt;?a_NMDaMgeX^R/S_epI8aDP?V$+&quot;3CM&gt;CoegHDq2h.Q`<span class="pl-c2"></span>%Oj$nnl)Yr&quot;`]Y/)Q:Iaq5k3N3T991t%RRJf6c.,Je&lt;F,^bH:t)NLSkqBSa!AdT,&#39;/l%&quot;0OAh/5/c.\U&gt;hdjW)J@8[49PC%#]7Z*V<span class="pl-c2"></span>%7p.E8/mC2oa&amp;9#j/D&quot;19rV&lt;D+GjTiX8^i$lLac2KPg:;F0m4/k(,`lU3ee7:S-=a0P?e-W[LJ]0jQ[WLBjJFQ;KLu9Bu`A&amp;eh!&quot;#<span class="pl-c2"></span>%M3onG:3Hoi;JoUGdSB,rS&lt;YF(h/hlBT7=M\%&amp;&amp;OC,OYGmY\(]hf_;m:2@D!O;[g2&lt;om4Wj9XWD^O6KIZiAI^fn#^q[ll&#39;%q]k:,_<span class="pl-c2"></span>%Ys=OJhMViO);uh!YC@O[r&#39;@cl?bZR:YZ^q_4m\)RatC.!2k7qO&amp;b&amp;LM\NBT0,8_SM8kF6,lOpKfWnZ,$VAA$W`gu1[\&lt;&#39;:*:i7$7<span class="pl-c2"></span>%C[g==2QX+a,YtqL^T+8&lt;LJfg[%G=KMb[fNVc$XGX;\(sj&amp;u62fP.hWD,kLfK-&gt;YBg2?:X,:&#39;fi4?,P&#39;q=Kd&#39;D`UBcEl508g0=B\s<span class="pl-c2"></span>%9V$^mnX)RWj)#cfDI+;C!_T11p,.%1I#aAQ0jJO.&quot;AFhjn$QkU3:I8b&#39;Y%hHfrfb]=&quot;gV4^1jMVdBq/sl?Ri%%%?n$\LtiN!D\`8<span class="pl-c2"></span>%\9=nJ#6K&#39;M%POOF;8HE,WmnJgWW]QX-7qkE^)@3WG&gt;O/G7i(^7YI;O&#39;[YT&gt;nCDTmjp]9oB=Q=p)&lt;HUNe^st@a*F:fqA@,;P0sa`O<span class="pl-c2"></span>%M@LEb&amp;$8J&gt;Tg@17]1&gt;Xi#6ENFP/6c+7H7t5`Q#DD*DfJ&#39;gjoV4Wj;i$2^Lgqn+r!)b[H&lt;HRoLUj-cp0+DGE5`P0&lt;)(F90?&#39;JLU=s<span class="pl-c2"></span>%224f():1]+&quot;I@RbR`G%Tm8)_1L-;*!,_n!;dUJ]Fe[@`R&gt;&quot;I:?h$jOl;dd!Lcj&quot;VZU4f2j6&quot;s*eR&lt;M+(=M9Es(0U`@K#&#39;!X#&amp;&amp;&#39;=<span class="pl-c2"></span>%?lT8sWJo57V@&#39;mRKm:)jSG(&amp;BYAr$b`VldL=5-oPGUtf&amp;,hEci1f31NFCAoLTi&#39;&lt;F&amp;5pJ`/TY:Jd$A%46JYQ&#39;AfARN?CoJ(UJDeG<span class="pl-c2"></span>%WdbYV=kmI)g2srYk?f_DN:Hm=\Sf$&#39;]#3Z=r&#39;lkiVRK9ci`cQk&#39;h%BCeS:S5A[Bm&amp;eQorG9:!XZbKdPHPKmH!X1@&lt;&quot;^JW0&gt;6&#39;9FM<span class="pl-c2"></span>%MW0go?/KH9&quot;Z5%?pUi=c8&amp;2&amp;A7b5?KC&amp;7m)ar9XBkbC2b?0Nie?=&#39;&gt;-85cKhX!`G\l8kr6Cs.J*j/q(975Y&#39;Xj0hP#06IJ&gt;;ml7f<span class="pl-c2"></span>%rMC`G7a7b0McsT:+Qh]H2DSrV,,G9=h,5V\&quot;2N3_+BVA?g\MC*-Sqj_B)0]I.iQ3P1G&gt;s%HH&lt;=Z\mqkqVA&quot;F--MEe.M?56!&gt;6V&#39;;<span class="pl-c2"></span>%LPWRp!aL#Y&lt;cF/YTV@&lt;%.*Ur&lt;pUOMG7s_ItjCo8#&amp;jQY&amp;SX[$dM&quot;@!D/(n=YZ/se8H^j0]K&quot;/F&quot;G&amp;YM)\-(Og.+L`nm/8uKD)W*!<span class="pl-c2"></span>%d?#WMktT#&amp;`g#LaCj@ZY`rKaF&#39;U^f\:r])X.4F]c@I2fND-N=fYV4Z/Y[.aH?nJB^h&amp;iIB5M-BS@lQfl(aG&gt;gHt/`Q=U4!%GL+Kh<span class="pl-c2"></span>%a;Uh7\[L.p=YiS6eZ-#XQ`SEPL`&amp;bh%gbCDAA?\s=Ykg`@^`Q(g[Dn!JD]@oI2$%Hbe:2No&#39;YZuYetrDOf\P4R&gt;sWHr+\Ft/B4Cr<span class="pl-c2"></span>%[f,tW=KCb=4(ICnB9/eSG/)o,o!&#39;uDIYnmG[qO9S1i.\&gt;mh5/^kZ&lt;rQ=tg,SKc!Of+h=3Oj&quot;;(?=cX6oi9tXq[a8!H)6SEgX`3u&#39;<span class="pl-c2"></span>%_i:X^$Z43I4&quot;bCIfsp`u*i&#39;B&lt;Fu)$7crrV6R1K/_0o(g.^Wf8&quot;,h4g1BZ-3i*p\VbH\Ej+6+7Am%k`UK)D+)(h]5be?*ccdG&amp;eCI<span class="pl-c2"></span>%c2B`uF-e9JX:_/g`e^_*&amp;0^$,Aoft)UfW&#39;E:s2^!%i/a[&#39;t3r:#LPGUL#9!oJ$H5mbaT/!KQZZ_m6M.o!%%-kXk\lUgc4]uY5@go<span class="pl-c2"></span>%p(u!7kr?)7gY&quot;S\_/fdfXb7OKf3%+2oAt.#AEFssh!*?5\&#39;@DHgYXc1)=,-&quot;bI8%*loH1u%sPnma-C$Uj1jd]$VHK5os,a?AKbNu<span class="pl-c2"></span>%&#39;#.X]d&#39;(=52r/jcd,HajHHbH[&amp;k=I5nm;k$ZMlVnFtkUi/R/`@Y/Ng&gt;36mjF*VZlbO;N7tU&#39;7g@PdO`_a]&gt;%u2un;*[d&lt;Mfi.V&quot;`<span class="pl-c2"></span>%&#39;,]g]1@kM[&quot;399kZdICV6/k`P7Us%lZAk1K#[dLP.DSh7)hXJ/?f:8&gt;qH&lt;qF;V?ni1aAnck@)/bN_PD_13&amp;70oB6c92Df*c,jf2&gt;<span class="pl-c2"></span>%8&quot;,+ha)fa/KHfCV?KMuLP3(&quot;*)aJlPAK:EJ0Htpe#8rOrT(!nCVYYf\)iCJ,)IJ($Yi&lt;V%TC@/Z#7^rYS:%U;`B!ro3kV!k\(U6P<span class="pl-c2"></span>%O&quot;g8#lgWEj%9U46&quot;6L@4G9J+K`_m&quot;e2:eoM&quot;*)&amp;aG.#S_=YGMcAfF.*0d?r$iZ;O;WZu-rcDpRFJEJos=&#39;p1X+r&quot;n6&#39;TBLRW9_X&lt;<span class="pl-c2"></span>%TD%b\$VT=!9X&amp;5DUs=$p)fK\9&#39;QbWeYd?p,4j]_h\/drNF&amp;2PVKt_`uZT`&quot;ZN4Rk^O*kRW*Le-0;kndQN)B5gh.]&quot;8/]7jBpY7Ar<span class="pl-c2"></span>%;jhP\,A5%&amp;PRdG&lt;?b!HN\#Y)J$0,=qR@&#39;C+m&gt;:=e)$NSl`^JLoJ=DU.C)0`.&lt;EkAWm+bds5c`\]Qsht&#39;?:0I&amp;*lQ7c&#39;0D/BR)*85<span class="pl-c2"></span>%Ul?`P1D2o*j3(_6dAfZVAQ[4&#39;IKW-28%V9Rp\fEsm;V&lt;&amp;JAm7/3/=s5C!bUd;je`hTGMdg;QVH-0H5aX.$M4a%GD^*+jWtC%aWZ@<span class="pl-c2"></span>%N6M-DidRY(%O[&amp;:XM1&gt;N6eZkL&quot;=Zes*QH+DY&lt;DN^&gt;?NcVWR(J)#&lt;(.V6.[-^oTSEF&lt;Ug*a2tjV0Zm*r*B#@qfOZ.T7Af``%^c\$i<span class="pl-c2"></span>%T#C^G&amp;\n&amp;ME6B&gt;Xp#_9O2/tipIV-&lt;ehe66&lt;$3NNhq80&quot;?F[UI$bT)V[hGn+h&amp;Pr5qVmrnc&gt;&amp;#+;ga&gt;SZ[ni)li.qnV;1m+K!]t*?<span class="pl-c2"></span>%giXH815?At&amp;dQL,Esr(?4iS8,52aWK&lt;d\;s?\I`fPhEPCb_gL&lt;4Y%IZSC[7&amp;D;eYfKFK2GfRkjUcNb[&#39;htkZsH&lt;(7X^0Ah&gt;6^Mgn<span class="pl-c2"></span>%kPu&#39;.j]:.rJ*EK?]N&gt;P,..jEQ?f&#39;$&amp;mCcS?rCb[4H[C)&lt;-`i7oSd&lt;/^nDYm&lt;eAJi%&amp;[7/noR!nacC9q?#&gt;VAdR/CV0cme^JM&#39;`%&gt;<span class="pl-c2"></span>%!9q7dZ!H,K4IE(-pu?OR(k?H-(o-405M?DF*d^kRA&amp;e0+b`f%$rI-RH?Agl,YCk4$@[_FVe&#39;I@I2f&gt;1BFu`4tbFn[PX;qo(i3b*U<span class="pl-c2"></span>%4kE.Xe$7njZh[SiomXFQ!KHE=S-M-Rn#S\eL]t4V&amp;&amp;AnXC&amp;*+1JmKh,27S6ta[(j&amp;\Co#6mE3R&#39;K0E9AmfebU\CNC!A.D2,2r/`,<span class="pl-c2"></span>%+n8WmB(s]b+p($mKcUE-nPfk_*&quot;/ffK9Ys_&quot;.g-h!H;N&amp;7hBC6OZq-`Z+8Y*;7&#39;gAqq?;%RXt&gt;?!e^[I=cEA&#39;lZt\h4MJIm/P&amp;gR<span class="pl-c2"></span>%hOjVIFBeHkN`pmuTfA)GEagnWGBu1:A\N0)1O&quot;DnSB\R9Zqc?*]egHf7S2X6%@&amp;1dNgt-1[*W-oDo*XXmm#^deq\bFcb?,&quot;5/o?E<span class="pl-c2"></span>%KsAcAs+n?M&lt;Wf\Y1[&#39;t&gt;&quot;Q+BMR-1OAYm2LEG+QZPH5U?@$Oegl)#&quot;,3hOL3sE=[ubU&quot;Rho6B;RsWQ?CTk[d&amp;hI)l-?O8iI/g6GjL<span class="pl-c2"></span>%d!)&gt;dF\ZG6SL%5.$GtKO?F.L&gt;@*R&#39;[lh#];eF:S]XF5*=R/jkfnV7mNZ&#39;udAkos&gt;UiL7NMI,oeRlbS!gNiTE_Z2:I#E5,sK?`pf@<span class="pl-c2"></span>%)$4SHW&#39;fn7;_po#ppN=E`F(gT]69dS0i%&gt;UHI&lt;uNJL9;X[laNh^UT!pnUiQFi;OXC2[^-b[)FYg?+]Li(l9p8oR?29CXI]DKSht+<span class="pl-c2"></span>%+e*0:^e`Ui)S9oBH)nfq\d&amp;B;$9d$]&quot;]^=bDU4U.ojRUS]`?fl5%0.$O(U8;4G#a&gt;VB$\07qZ&#39;g#3ceCjKMG-b2$Nj:_*QrCNfm+<span class="pl-c2"></span>%E=gaa3==FY1ZnEqJS![M!5\)+KFr%;k*n*R`!\7!4p$8KNp+tc6uddcRVihcHnFP-oE^4b&gt;[JT:+`8?k&amp;OO*WX*tfKgE=Alha0St<span class="pl-c2"></span>%.B%e?@onMmVos=R(&amp;5qW%2%TCq!5iT4)?j)Ns_&lt;!GJ&amp;mZ-BaZ=r*6u&quot;^kUoY0e@tFXlHmBc5Op#iNr0Ui+0Tg&amp;YIHa@WN1S?&gt;9&gt;C<span class="pl-c2"></span>%4PS:iJ,@j])+)aE8&#39;COEm:Kl3&quot;,&amp;TZ$FL2LDkQQ%^Pmm@G(%.#LVK+aDd.d;o`U9c2O8_&#39;.K2*k_&#39;6r$&lt;4US-Z_&lt;8_7JQieIS[F;<span class="pl-c2"></span>%4(uX_O@p?uj/iE&amp;GV&#39;,M!lR02lcsfFb&gt;&quot;[?EsUp\f@=O9&#39;j4^^hODL_XR%&amp;6r@D%3\\STh4.:s=I)%ig1?3)*B\NOZ5a7K=n9s%D<span class="pl-c2"></span>%DV0jkfWQY]Pj;,6O^BliEoW@Q);1.LXiZO;=gmf$@@W&lt;q[&amp;Z[lm&lt;3G^`Y&gt;0,E?6[Hk2m`h3BRMCa&amp;%&gt;T&#39;g0M&lt;?q-pl+!269qAqmo<span class="pl-c2"></span>%*bH\qkECQF1qqd/^B_&quot;[,pKGg*n[gC]_UDC5`I&#39;?N.t6-p;m[Ck^uWj2]HXe)0$oSi&lt;0)=_gU8m]LN&gt;34Ulo1UrH3!e]`bDA(u@4<span class="pl-c2"></span>%T&lt;iRPjTbpa&gt;Sog)]fM+&quot;[i80pM2JWX47GU#o8*&gt;T&#39;FCa1bT&#39;j#R0-.K.?B&lt;GmWf9Z#=k!hp)i0Nb;Xu=#g_R+,iQlu.\AFXa2&lt;PB<span class="pl-c2"></span>%p&lt;-T=F1+h?#&quot;/j?:qeg1a(l*VgBb/bbtj]=GVo#JZi!]0ac,17d*[]?\a9bhf^+a2`7ATk!!PSEqP=8saUI8kBCM#\KUI\o.=)U_<span class="pl-c2"></span>%@Rs0)RCFu&#39;1,/]8&quot;*$B1$E?IpdG*J@e.&quot;_k,4ETZ&#39;GN!=3&gt;B_^(1M+fC:UZEXC&#39;m!]=&amp;&lt;t`Zq@gq?T@,#/56\n&amp;I]E]4+;&quot;L4@X1<span class="pl-c2"></span>%pX&lt;-m2%oB0&#39;oFc6G9$4em#&gt;Y1;1f&#39;_$Y]hjn56Wl`B\e=!C,Ct$&gt;k\8fL_:]@KmbTeQ]M8%m6gGpb:e,E:&#39;n\#=Ij6.G0&amp;0&amp;$&quot;D@<span class="pl-c2"></span>%^&gt;;!LoXRuQo[&gt;Cm8lh@bZ.ZG%2fKUun\a`)rk:%?a&amp;h6-kOA3S[=%RFnJRg284q+\T/7&amp;_dl)dQ9b(fmHM&amp;t$\m&amp;G!XK8okaGt##<span class="pl-c2"></span>%*1eH%K*ccchE/M3eqKKuEEP7%c.Ui:lS==h4V#rH6,[3CHcMh@FHQ$sn;j&quot;bCJ4/$;bGb)8b?dCU9/-TF*K*Q[N3ngp@J!nKm?WG<span class="pl-c2"></span>%Ce.C(s5nHU:VmY_]U%=]MBeOK7tHskKLU,;lOqc+/I$B)hrn\&quot;%VYS;9\sr?p+t=&gt;d&gt;9cX^\7lnMDt8lCKt%.!AR^2@Vn&quot;T)m&lt;P-<span class="pl-c2"></span>%YK&lt;Y(=2-,&#39;D,D(l#=[(r2_Mc@Y(@=7#5%tInfEXQ&amp;$BP6r[GncL_+cX&lt;9/h(76g![3B2l_:4QPq+EQ1QI&gt;IXKfC$k]3+t5p&#39;u+&#39;g<span class="pl-c2"></span>%(YlY20]&quot;D9XQ:D7I2hXc&#39;=!#[fY2R:#;g6B-fEt=8W]_:X80uc-@h7VAM^&#39;2f+-XGrOq+UndGj5.ihF]PNKbd5tA&amp;*d#@b&lt;&#39;-9LX<span class="pl-c2"></span>%)5VWnKRIbtTDM&lt;ET;a0Uc2BQl\VY?2N![%sbr=D?&lt;p&gt;JYC/%-XFp.dn1ZLMY::X4t=5l&amp;P`l2-&quot;bRXNX]&gt;%]&#39;j/5pBomg&gt;;HK5]0<span class="pl-c2"></span>%Xe.A@LRtH*U9LaQ0&#39;`Wr5`)6rqc+j=0JbM&quot;`^5=u8*9^9moRM&quot;R[h@C&lt;oiMrN&lt;pl5jLYYGCZ)d)pqMYRlrs^&gt;!1&gt;6O&quot;/b?2NJC^N<span class="pl-c2"></span>%K20n35n)?!Eq&quot;!dXX@9`Y&quot;#\^IBB-(^UY)+YdL0pfVX+HDuQF*d0)nKQ.MU%jQ[K^p5Y8Hamp&gt;iADad6qtn9uQp^asdbU&quot;QYQgq7<span class="pl-c2"></span>%(rqdO\BXOHINj`&amp;B\KlP$`QbM=fYad66o=_HZ4t9cgsTCkGW\C;44fpiPm&gt;LA!EKcE4?n;q3q-$&#39;hP/jkYp#&#39;IktNnj#+i,Ji3bh<span class="pl-c2"></span>%c2r]X4A]E8Roq2F3!Xj&gt;-Y^V8bfZ&lt;`Oj&amp;Ia&lt;rY=n/h^Z8kAgp)hYCBbn;V:CT&amp;PF.2tiGI0g%.m1(=:TQlV):k&amp;W76Lt&#39;FY7Lmk7<span class="pl-c2"></span>%I``&quot;-@e]ZR%&gt;n&gt;EhM_^YWj_Cc+4(&lt;g8?8[FI#W(07aDqN^]S,Ro]eQg^lsp2c&gt;E@gs/):iHNQ5^0&#39;.pQW3Jo,#d,BCS/R:c(YtY8<span class="pl-c2"></span>%Y29aeWY&quot;N4m&amp;#]Z*rpMI^lcB=]9&quot;7)a(B7uibE+Ar:n7oKbY`cV-Mm$@\=GEXtW%M)pK&quot;jq-6mW%,G#%i.l0OdI6,ZLBcDon\ObG<span class="pl-c2"></span>%K^J-Ii_8&lt;Jk)K]gN2kP&amp;Hk(MS`OM\qcU6dE9Y.ZN#&amp;()U8K2dl&amp;]1QqX;=a9o=h5;JXA1;,$&amp;+HVu.2mJ+2!Y]8is_*^.?c&lt;G_^2<span class="pl-c2"></span>%p;B;5ZcM;UFI(;5*GbE&lt;Ol&gt;&quot;f$C3pm8(t$&amp;bpY=GAn&lt;l&lt;ND8`VhZJo#DjFr_=aZ@rrqF-9&lt;U!.V4u;cW5A&lt;S\CD-8RI$LWKQiqj2<span class="pl-c2"></span>%V&#39;t=3lD5Tt\Z^ftL=]j&#39;+&gt;9hVOkVeS=LcdfH&quot;s!mqD,kUWDbn\]fuLPF4Cl\eO1VpgDQO&amp;NTOk)/56E;XG[,EgZ&gt;Fb&gt;%go(KhEA[<span class="pl-c2"></span>%*6GG_hLQbpkAX:7`@S+71:&amp;BZ=K;!KJe-@C.gUCr&amp;n1:DJ4k=TXKVk5l:XNgA7Xn^@.FV9)#g%&amp;[S?T6^K&amp;2nlrjhQpBSbe.ufdD<span class="pl-c2"></span>%71!ijPG5-d47HS&#39;eGi:ank.91IW&quot;[i^O:J&#39;/+rm&quot;03#A)S3(,&quot;QrsHlE)+!ldu7jVae+&amp;#=Z!\qi#3#^b]TJW4jQm[U^*Sb91cn&#39;<span class="pl-c2"></span>%!aF4/eF;@`&gt;m$;sPO\gXm_e&amp;qVi%=h`D;0^JYfBb&#39;`9e]_&gt;o@NI&gt;Wko6NV7o!aKp[ek%l&#39;1ACh)#mm!W))Yp942k0rj[G%hKp$^C<span class="pl-c2"></span>%_U&lt;TSjh&#39;)t*LeNb+BF1:E&lt;X&amp;m&#39;%ediZ2&gt;&amp;M1T@e(37@o,qCY0X_-&gt;lVID%9pI7&#39;8uMmV?Bf)EWL5-Bn:beQp@/uRY&amp;LQ0o;bdG@e<span class="pl-c2"></span>%g4)CLP@i.5_g%Q5T7dDlN\#fobf2bh$c\&gt;`1S*:&#39;l3WWbmNtIk]t[VV@*oIG%^PYb2&gt;\m7&quot;]efK8-Z_5?\T$J5*%&amp;A,;Q&amp;5TNh=T<span class="pl-c2"></span>%U1FfMXu%In&lt;DMn`b/.2meq\Oo$f,&gt;PMTD0kafm\UILdiU7VJoU$*f5[(o1&quot;`#rU:9a67-2ZVd@d]-g&gt;ZQ``&gt;).YEPLcsV%!_SMfP<span class="pl-c2"></span>%@hf_o([Bf]eg!T=D:ifd&gt;hI5Ki5J_2HG&amp;#ejJKS!CCnEN][.ne&lt;=;-@2F-J.$e&gt;Eeg&#39;K_O1oA\1p,#js2q&amp;\?6-MVsDZuCS7#&quot;[D<span class="pl-c2"></span>%)4uI3Pssh:[Em%k1kK*l#0U$3P5b7mjacOC`n%PU`iU9rJZuH^`iaa4f?m_6FN!sWfcj)R7o^:B&#39;p&lt;/iJoVspeLKJ]Nt,;.-PNSE<span class="pl-c2"></span>%&lt;5%/mcbbY4&amp;&lt;Y6Hb$gY-Bo=oV&quot;Sf4\6(&quot;OJ^5qOnFqKnMWhukrJu.O3&lt;`B3$mRl&#39;ILm+&gt;&quot;D1Pii-8NPH@H.LB;.f4I3&quot;_N&quot;-r_ut<span class="pl-c2"></span>%6Gsql!5=Kea9pZ81r&lt;XdG]!tEMX90QV!qNcc&amp;Yppd(\s&#39;r;!=fL1@$+M&lt;&lt;?C#.tLG5!c.2$+(rs(_=kRIBS(&gt;!_XJIi3s,=nE8E5<span class="pl-c2"></span>%38BPF,$0B@&quot;%G1,V\V2TDdm:^Nb;Wlrf1ZMecp;=$/kP_:skW?M1gh$br&#39;!&amp;f`B;+E7C&#39;GJR-qt9/e%&amp;&#39;&gt;9//\7W[NnPKCM^&#39;s_U<span class="pl-c2"></span>%kKF%rWrZgo*W]=.B$,&lt;PQaq&quot;B\u_!tC8-MuE.*UZ8Yl%_HOGd_Oo`)5FS&quot;q%=*@-s#L&quot;jqM(8TdV/?2b(+c\5A&gt;oVJLtN&amp;EWN+O&lt;<span class="pl-c2"></span>%7G7]eY&#39;&gt;9sPM8u@Z2IuCS+]1@`%U-5bQC&amp;gXRo*(\ctq]a3SNT;W[6@J/Md`Km;MDNm5[J*,\cZoOruq]KE*4E63G]ZN/FD&gt;@*:C<span class="pl-c2"></span>%#uS`G^jI:nJnpVMZX&#39;=*&amp;g=o@SFK3TN6]RbK]dA5]&lt;LbE:5o@8PMd/YNP2f0&quot;A6ubZTO3a0g[*0`!3C.&gt;k)&quot;)l$k!t?EF@r)S6,W<span class="pl-c2"></span>%Hb3[LT92W.$Sb?-1&lt;&quot;&lt;&#39;S!&#39;?-`,&lt;TIEf8pO:];IFB9&lt;QkAGd2B*jgulgt&quot;j1J3JD:N[2VK`s&lt;n](^a#fN^&gt;N]SQ$W5[?*$G7-OV.<span class="pl-c2"></span>%$_J3ENDE&lt;:ZUHD\1N/l(VK3b9IP=1+FsL5a77tWnjXi_^RiT&gt;$F6uKKBT_um7^pE!*rtT&gt;cC&amp;UJMHFC3rGE&#39;DHE;b3[YoNN2E4@U<span class="pl-c2"></span>%=,TVS9bGm+g%h&gt;i2s-4,)IRI^Xg`[4&gt;mm*N)SR%fq06;Zn9o`-&gt;2b][V_Ah4k4W@X%=-#jV-@Ba&quot;m34IitL%ILP19naA*7hn;Hs[<span class="pl-c2"></span>%35ju[Qp?sW40j$qV&gt;i;&amp;_r&quot;7p(b5;ARGDsn&amp;+BQpBfDU@W;7/:&amp;5u`&quot;&amp;N&quot;7[AGLa#l]bWG&#39;\ikM%Wj5lK6\+lplM`,2uCJ-dG3O.<span class="pl-c2"></span>%ZIng/&amp;:Gbn+.q[Q!;jUP1(`ELCtjEc=iF9sWr+C^cS(K&quot;=A=%td&gt;k?XJ8qVB0(lrV6osL;;cs^sm!Br47&#39;_7m;E&quot;C!V&#39;j+C)E\UP<span class="pl-c2"></span>%V)BQYAG36c&quot;T0g&amp;[5WG1!o]*`4c%Wi/u!k.o-cj\`a-K&gt;XSfR9!&quot;pLI1/BXC3g%nsbTO5q.\IbK]4`K%@LR:!g9.-&lt;O&quot;m&quot;L-,q98<span class="pl-c2"></span>%[DEmBEEr@#k*?i#d$5KFkJK02]NLP;__t[baFW$Q&quot;!bj;Tq@A/+@q:`YUn%[OJ5#DAht2`1=&amp;-N[25Y&gt;7_&gt;[6KfL$1&quot;F!$s4,HGi<span class="pl-c2"></span>%:5D^i-gM_?#LBF@cWD@W9%AA&amp;UhVRm:6)4MA$i;r\;TCRX&quot;*$n/:CKgZH&gt;Um1s/f#HiWF!LIhP#Sa*#lliJt[`ka^:m$%:s`0g1g<span class="pl-c2"></span>%)&quot;07jjcrEecp&gt;&gt;e+3&quot;0,&amp;&quot;#;+jtAB`EkknX&lt;cNpaZ7:dJ1&gt;IHmMT&amp;p5h`unRJAo/C](=7h0^6l&#39;&lt;g&lt;5Z+FU76Ns]&amp;`Y/q?.$,$AP<span class="pl-c2"></span>%(P#3,dtmkT^#3,fHce!mY5/e&#39;.t.&#39;(KmJ7:2bT[tF88iSmC![UT@Ctl_+L:3qJ5EL`9J/8%46AZm0SkilM&amp;Do?kE%DF&gt;mu19lNe0<span class="pl-c2"></span>%Mr;&#39;^?o4,]@=da8\ASRDgM!6M20D&quot;ud]&#39;p\3kS%&#39;W-&gt;7&quot;fThZ@PhrSN,9CQFf.]*m@B0BXEMI.K%J0g&quot;^sg2g`Hoc!p+4%-i]#7M<span class="pl-c2"></span>%U[Wr)B.&gt;tQSt=_)rcbjf&#39;aHY0T($@h4mA)&#39;ktO$5YpIGmC.-Z`eff1j4[[AEDCj/dcS:7.eJqd]WqD/:qKokSD4N9uQ5qs=G^TL&gt;<span class="pl-c2"></span>%^mkEAecPM:Un&gt;sdaR@sDXUNIeb`j8tUonFd.uRV71&gt;e#:QM(4]73T5\LWZ\QT\6h2BJ#eD&gt;FJDZe.rr$Ce&quot;k&#39;]qUiFa\Z`XHCbM&#39;<span class="pl-c2"></span>%9&amp;Af=+u?Sj7s&#39;)Y0&#39;.*&#39;)X&#39;S!n6l-B/,!A-:;DL,+#&amp;c$%G5I&lt;bd\DS7=[7uA3j&quot;25[6.X&#39;f.9Q7guLUU2^M&quot;G*i@j%o-`CG#f)3<span class="pl-c2"></span>%6p9o2,iMRXoL\=J%q[k699&#39;nP&gt;h``Ac-l&#39;h&lt;46$fB]GGZS=:YJFhK3&#39;-+0k$ZMK=`SD03r+u+bOD@&quot;5*YZ2a7J&lt;%[P3Y03J(bU\[<span class="pl-c2"></span>%XHG!]/^Ag&#39;PVN[0KgR&amp;Y!g(QTdtLO$@Am+3UdRHrIQuqaQgb,d`1STSEVVJ0R[Yja$%@)/i)&quot;Z]kC:C2Jm%^#E7&amp;$E0Dcl;qLpn&#39;<span class="pl-c2"></span>%7o*s&amp;K9T&quot;&quot;O&lt;tAF&lt;5nq#PakoW$im&lt;&amp;#%QJ&quot;InYkD6gJZi_VhM5OQe2s)5nDk^:#ap4Lsf:*IAb8:jB1nL3h@!B&amp;*,\XP(CL&#39;P;XF<span class="pl-c2"></span>%V@k8BnkV$^)+:.3PTeQbRH@WhAXIZ2C8S(_NK6uVc%)sn-Cu*k&quot;$A7%DN@`r:rc,A0&#39;r/)BC$2B*1l/]&gt;jKKQ&amp;9thiWqCoTSm%8X<span class="pl-c2"></span>%L:0MQ8`E*05uTP?Q%YiHk6_6%!de7$0aln.1HPIH&lt;]@:6/u`ShZPjl)hcnW;@c):fTl=+GLYBJH?S(`UHV#66;P1)q8JltUa(CS&gt;<span class="pl-c2"></span>%+mT;KO&#39;9a4lb+A$9i&amp;:(g,C9#80Z2_(r2Ns0u6%&amp;RM9rLfYA-4R98KU`Kklc](FgJT-+rL?DZ.q,j&lt;eE7@-6SY@]s!WkV;@*ddJX<span class="pl-c2"></span>%*lTUFp[:KY8Q+7PAQ55UpJ+LVn/X5.mcdBMH;&amp;q__LcMY;Q[HJp\?XVr@P&gt;26&amp;%c,&amp;5s\bE.g&#39;uH+Ot-G?Lg9f-RV.6Y98Waib/Y<span class="pl-c2"></span>%\5NIu2k:Wdq[_UV5dl?N$!&lt;NNV&#39;b(Ke0W8XS!Ztk=#]buoRG[Rbdg+mq5h:u&amp;;:7I&#39;O-^i&#39;kS^$\YB$0DCub=:&#39;7pO8*J;s(mDDM<span class="pl-c2"></span>%3t3s5q23HI13+r!&gt;(iJNp4Ji&lt;2X1$:rgld&lt;N$qR@_)UQ\BC5.eTj_H=_H1eP[&quot;!pi&gt;7:!EM8L&lt;&quot;B3ALB&lt;qLB3Bj]U@(q/*MffH`W<span class="pl-c2"></span>%ZPb:h[&gt;EuBVVLN^e1-R?T1Ba`/Ef&#39;&quot;7_%Gi&quot;TEhFG#/jcL&quot;-;Nb@OF6/6lI3PkJQ@Z?iI6BFp&lt;F=sZ7/j/jc&lt;@)&quot;?G&lt;9s;Q7QH_M<span class="pl-c2"></span>%ZOG[uCpI,BS8C%_4EiRNSfSQAFh=kC2WD\U?h3sDcu-l&amp;($E8DorQrFAnA6=SF\&lt;LC+&quot;(DbZL-V.faH^+&#39;-*dMei_$n63DN?Y[R?<span class="pl-c2"></span>%AonHM@L0EgFRfksZ=HE5jQE,k8#8&amp;7c52:\)8qba_BMk1a1WlRL(-oi;HMLt:tKN/[DV$,l5QO0nZPU&quot;CH0VGA\]RV*uZ&quot;egCa*3<span class="pl-c2"></span>%\5_*3rP03.&#39;A4qo2^*ofPh__%6RAsXD?OGMhBMmK-cM1neQJ&amp;dpgJna;4F&quot;+nsCLN%k3g4;L(;@#&gt;Uda@r.]S*.t,qWdVh*U+TJb<span class="pl-c2"></span>%&gt;u/g7c\r=[@0(-lhi,=`R(-6lb]p&#39;BEB+WhICEUu;CPmT86r/LgM0T?S?pM&quot;&gt;n&lt;e&lt;\fLNB&lt;nQLgfiB&#39;F&lt;pS9\-`!aEWR0-FcYlPu<span class="pl-c2"></span>%gj*ap89_&quot;QcsM&#39;#es&gt;4ohsJArNnfLtgKC8sCmJ?5-&amp;&lt;q&#39;R2Q(Z/uuOp*Tj&lt;sa!e4&#39;;#iN*$d`AoL2g`9pqtr4+*U]iH4Yc&amp;OstA$<span class="pl-c2"></span>%Q(4F?Z4ie7VENsDO1&amp;dWC@^P7n\nNM1:m5dB2@$!DfXob9P9es]$^FT&#39;K31[pk&quot;=BHDF-c!o^r!&#39;7^V=ld&quot;B`D13PirB4V0:knX0<span class="pl-c2"></span>%7n)WdbfMnDqgG+lI%ts.)+j#mepBO1jq:%&#39;JHZOm(&#39;m;gD8G*\&quot;;PKmD`Y[?CPae]o*Y+6-/m#oQZEP]76oD6mO)?VO%&lt;;5JX&gt;r_<span class="pl-c2"></span>%9_IsLqBP7-8*)EX,AFi`HY-*^k=OsDN5SEk?Yi\YmMslSHBoU7nP&#39;]T7*0;/3;KU-+&gt;h`.nH&#39;55D(;d&lt;ZeG#.%ORtG,@tEc-5BH-<span class="pl-c2"></span>%972&amp;s&lt;E2k[Q]^.iUF;^fP9HD,Jfp&quot;M&#39;,:FVfQ;o]-F#7Q6&lt;gBpM%4*&amp;rCt63c(ai4DB;g@p+?%5$+W^k$$\:O!n`NKiB(!nr0f?\<span class="pl-c2"></span>%Rna7*%NK(W/t.oOmo`hJcUCBfS;@,7&lt;23a\_&gt;S%Y0T9e#782&quot;.BcY1)1.f,EY*NT0)FZi/(T66%Q@/W-&gt;=O68B;d.KO7?m[Fl@?m<span class="pl-c2"></span>%I0W5oT&amp;=Lm8f4O(.)a%+2p99*L*q&amp;93JE&gt;AgST6bT]4$rlGeYA:cdNuT/O8M7SEEg/n__O8EXP(NN+koEC[Y19-4cXAHpO.Z!/\;<span class="pl-c2"></span>%G-*=nGnZ0/@cU!ZdQagR1#(^!jpi?f+j95@%_&amp;2&gt;o:;\a^TMck?#:&lt;jS2C&lt;0mn/[#&amp;QmO&quot;CJ&#39;/0iMECiHl&quot;#*NR.mdFleq$FgSG5<span class="pl-c2"></span>%Li\&amp;G8ZJb$6D1sI4:S:)&gt;?-#7Pgl+^&#39;YXd[[!7Ada[*.2rVpC=WYW8t7P&quot;Aqi/r?F==Q-)2^;?dbhVs4YH)r5U&lt;b]1fU65fQjkq$<span class="pl-c2"></span>%?t%9uSA)N]kst]`)O]ff\6Wq,@D&lt;WjJ4l]fr?3rt8Ytfl5Xa^WAGnP7VfAjFFVduXO^&#39;&lt;YeCJ:6@%\AKL*V-`P6qiOKn9QTUHYtj<span class="pl-c2"></span>%KM*l$8;L/463B4,r9eM3#1B+(c?Jm&lt;7d2@V&amp;&quot;(Img#VIX,q%+X-O4&#39;&quot;/;1iTA@jCrpVi)&gt;5\U.kiu*I4&amp;jI$=Ct4\2!o/dr1;6eX<span class="pl-c2"></span>%UD)=OW#\BsOcPBrX8t^,T/ZhgLpLFtADCPa^r#&gt;kL%1F(^ggu9ZoVOp&#39;uVp$q&quot;cf\H:UJ[ifRF&#39;2_*$nGu&lt;sr%,&gt;&gt;Ag6&quot;MJp:7as<span class="pl-c2"></span>%q&#39;5:LWA4,q4CgBTFMo+Jn%PRd_R5A8IIWZE!(r;%!4k$!2:OG&#39;C,@tKH&lt;14JKqTZT)jbQ*pUVa09,?r_WhpQD7p3THXuB,MBP[ie<span class="pl-c2"></span>%1RhoQSXUmCl(E;(/6d&lt;&lt;5MJm9THaMdPOlW_YL-idbnFKMQY0^,i09i_%W/\-4&#39;JD2MS48A_Mb,TBU2Z/aZc(&gt;?#M4TN&lt;GM1&lt;($@f<span class="pl-c2"></span>%&lt;ToR=G\7e;cLiZ&amp;Y0*sOnMD?]BG%B)+&gt;d&gt;,3coVr=g&quot;kXF(2I^K1=!DDFWT%NO=?&quot;&#39;U&lt;-$bssL4,G$aO,_bZh&lt;9&amp;G1BZa&gt;2c(1mA<span class="pl-c2"></span>%hX%K[H@JS],A3Z@U;P7(Hhtl/jdnU&quot;eB=QU^._9L&#39;i7h^[O.[&gt;+e$:jR:m)f.nPrENL-o=\/&amp;eRRA\kel-Hkd2!M\m&#39;\M82mq!Ub<span class="pl-c2"></span>%Fqob`N-tG*j4K#Pj,jEn:3A6Ic%h0+2TBi&lt;S#ZMYnXsXuQaY5s+23:9)O;9VAo)uOk,P2i:C-2h5rQp&lt;!3HIbR&#39;J6XfiV7HB`D61<span class="pl-c2"></span>%=F,Y#,5QV\3MdVPKGU1H^&#39;0n]NKpj98LD2?&amp;1?uK?iV2$c_4]JiE//:$&lt;Oh)E&gt;\k6KX[gVTqWBR?U]?=[#+Y!&lt;&lt;g2I%rtnqj#\:p<span class="pl-c2"></span>%2uCbeTNQ&lt;9g#rpmSI;!*;HRl\Q7EHjM1R=POA&quot;NYl!VfPK4nHi*l1g2A&gt;u&#39;R5KbMr1,&lt;/1h4k&#39;u3a$N1/tK&lt;XLQTHL:F)a1eLn^3<span class="pl-c2"></span>%h^$kWi)D&#39;l29?0IGd254VE;p(M@Q&gt;8k%Lib$=,[98&amp;n7Y2?g0@d(&lt;S$gN2DL]Aul=4gEHWZCOg7j-@qR_:SbJ&lt;]0U@&amp;&quot;&#39;%s@RFEi<span class="pl-c2"></span>%Q-N4FL^)n6F&#39;QS&quot;A:H&lt;N[?TeD/7P5fjM\%qNXWmn,h&lt;e^CTRUK@KW:XT$X&amp;+q!oVeG1N)NKdmA4#?a&amp;SL&gt;lRH?]:Hq]@D7i2ipND<span class="pl-c2"></span>%+-$``IUDs&gt;4FedLlrT.AP;M&quot;8^gsXMZF_0eq)qRJL#J%[[S@Gkh+j!*lo3rF(&amp;O/V;NT(f;H;4GM`2m[HV4BT)e)O5&lt;&gt;F_eCL(2H<span class="pl-c2"></span>%^%/jNB3bUNUE&gt;U&gt;THJ)&lt;+:+=qDI&#39;OpJZ&amp;&gt;iC3$VJa[HpcW?Wa7KFh&amp;1IR!&amp;/qI,CA%2hS[K%,KGGd,O^*V&#39;&quot;j=!H6HBm;h:qs)TX<span class="pl-c2"></span>%)-U;3D!G5OYX#B,$0mh.XY]c$E+5Q0Ci4OFF`s;&quot;7mhscZIO_ZhcsYu6_i[F,&quot;!rc&gt;f`RCE3ui&quot;F[G^f#!ZQ[PlK97]I8?m&amp;baN0<span class="pl-c2"></span>%OuZ()kGq&quot;2JthF6/&gt;YY;Ub2Irmu(LtO2&lt;-UYG&quot;puW.MHQB3j&amp;qrk]P_=&quot;Mh7\5)+?PfuW+KMBT\n&amp;3Z2^a]uRD,D\c@mG48R&#39;6[3<span class="pl-c2"></span>%`kWT&quot;Z9cbQMo2#&gt;A6E=hSr@Gb&amp;W%8XDuQ2q-B3jN!p-b\^OORE*R,3l!U0S&quot;hsEjp=AQqlq&amp;;NT0EYYJ-hkUjUE\\ATNq-sn&gt;-bg<span class="pl-c2"></span>%(CB(IW*VBmMNbU)$F@&quot;rpE7_;hm\O4;4jLe_)TpOk0KYfUTKKY4UTOr\*s1!&amp;:@&quot;.)dU]27&gt;6Y&lt;^g6?.ihq,ka&#39;Gn?U2*oYT4Yr_<span class="pl-c2"></span>%h&amp;&lt;?s;/W/:04[%[3m4!Q+R6BY?)5@D;PMe`Dl$?N2D`1N9TOnBEnTt$?&gt;a%4HXVRAHVnt[qHTb\%Wb2P%lGdo\o&lt;$F;LUM`Br@-]<span class="pl-c2"></span>%VZHYJ?gf!P%&gt;\G^&#39;M!n5h0]@G6*PnTl;16Eh,U&#39;cKh-[$DZ!u&gt;aTZGK@Lrb7&lt;*l$o/YJuYaCJAcGVm&#39;&gt;:#C?fe8MD0ig7Rqd+/9;<span class="pl-c2"></span>%5+!NQj&#39;qL8&quot;YU9^qM6bdDq7S9(b5YKG&lt;pI9N623*4]#S&gt;6%c&lt;GIou14#\414hQ13bkp3P[hWmZ&gt;50Z*u&quot;*[2LAo&lt;kkh&gt;Ahl6lCp=<span class="pl-c2"></span>%$YAl[&#39;ZEV/T7&lt;5f+$e).l+`&gt;VS=(?M,P.fR8Z(H8`&quot;d`+U&amp;r#+`Q+m3&gt;Jt=(\CQZ\6C;2OSP`rM4[Z2FYWt^j;NZlI(bXo^D&lt;&amp;+q<span class="pl-c2"></span>%pC,&lt;3X0TTQ/f3[[F^s$&quot;HDH4):DaE%!q-10fR10H$*:+BGS*.)A`Vin+8D-Y0Pugo8[kRAWXAb(ns8cFUpTQ[T.uHkU+-3J!)P6#<span class="pl-c2"></span>%2%(i9(*`&gt;2&amp;s?O`ELP!]@U&#39;)Q$LGU:7W*H]QNkt,UOg&gt;LRU(8rZ#^E._3%SO5EC!W&amp;uTN.AoLg#Sl)9u1+`q0L%3=?@-QC!j&gt;AhP<span class="pl-c2"></span>%Nb$RZ11H-G&#39;26nfRBSgqk%IWQG@ap#\J/2t\[2O-BjXA7F(UiSiQ_sL#&#39;E%ubC5SFWF!C4[C&#39;:&gt;8W4S.&quot;Mt1&gt;8d8&gt;Qad&gt;]C^Z=!7<span class="pl-c2"></span>%#RN_N=@JLbk;&#39;R1@K&lt;DUE&lt;d;E&#39;I6nN&lt;WKWo`omHrAVj58a#C&quot;=Y@,gW2=SOV*(Jq:9.ECkT1&amp;YS[PPpB/_&amp;[&gt;h6LBp?\!7DY#DQI<span class="pl-c2"></span>%.X31M9c;&gt;9.I#t\P0Ffi&#39;HoGlP+/_6\3&#39;Gb,o9]69(l;L8Y!N6(0I5@%b[p]qDbpNEEFpFpb8bR&amp;lIL&quot;]3e&amp;YpN+l-g/L1g-\j&amp;B<span class="pl-c2"></span>%)!8u))!IEqm7OG5Ui#a.n#?4)jrY0A2eo,)&lt;1G4S/7LINaH0q3mZik(Z9/$O8!-7&#39;p&quot;@P/cAS-IAJB&lt;6S)OEGlL?=!.nZ2b74_D@<span class="pl-c2"></span>%&lt;&#39;R^tdYn^39NlR,3\d8mm&#39;ZGXnO*gp(jBV_Mq&amp;;LI/!iY)R=o;f7MsmCK3sm#&#39;eFr8hei&gt;mkfKmc3AI_hc19EV39ngPSgPE&#39;aku%<span class="pl-c2"></span>%90=lCe[3FADmB7t\u\fPi??J#,Q&amp;]&quot;;*3me)=mfY?OnEugE1C$9MnAp3012[KfjiJQb8&gt;5b#P&lt;;H4&amp;pl!DZrK40[/#Z+JgF2q5+Q<span class="pl-c2"></span>%kgG^u&gt;\[XY8!TIch624dK06Un=n1Ei-rSY3R&quot;08%#)G[Mat&lt;$6E,^ei2r6&gt;U6h&quot;g&gt;K@$E_;7cJ;Dl&#39;[dK2^eEDi-n*M.]:Hh&lt;NQB<span class="pl-c2"></span>%C.e3#9Pc)BX9bV&gt;GLDpa&lt;&amp;eaH`_p^2!nQNdQ&lt;_aq2=Uoh3ZGVF=9B.jG6^HQQD!EB]AFrM7MVUbpY$bF4=!eWgDce%Zk6EnSV:\L<span class="pl-c2"></span>%?KB_k31/KFE7@Qi0^A^R]QV&amp;]+LC#b2&quot;=m3YPL]WcDZ\]G&quot;DXtbju^!iF&quot;Q69SnsATlH66C[lpcmnZ9,MbH;-Wd3i&gt;#&#39;FHfe!:KB<span class="pl-c2"></span>%oj6EMHO5q+/F(t-Vk1D!gio4k!X%0f)dj3[7jTW/69&lt;HL$VC0&amp;Qu]D]KQ22C1F:&gt;mbXe]J6&quot;*Hc0UP5pEM[B*9$&lt;PqHjD(&gt;\*4ko<span class="pl-c2"></span>%=%-A?1%/%H](3WlDrR-_P[uE)j+`];W?U&gt;C&#39;*Qfmb?FD!2*@4qCq26RQWX*ZFnel1/S&amp;hmZYNufgZCMa+];6Nf8NKT21)XF:W!A$<span class="pl-c2"></span>%&lt;!A\JOIG?@&amp;[Lj86bcuM[dA#Lg;VAA0jr5rJ4Le`147aG#R50.1l(FCDVtS=`ZGg.pbBCbX$fh:^k1jpUnbSI.EH_WL5`q@r(m*m<span class="pl-c2"></span>%q-N;GPX3[D.A@DD`eEQ.HEh+[lNe$JRZO]45(&amp;*4hL5BJ5!d.AAk1&lt;O`&quot;K[H-0L+1\7SXh&#39;&quot;q;_=bSfCfbGgFAk\*7I6m&#39;4GbiR9<span class="pl-c2"></span>%^E.5u;`TIV=W(_MJIiIb-^$p.#R[j.#Z@fbX0o!%&amp;o53e@.rPYU)*N5Ps#dBCk+Boj\dD[P%HJU7]7nQK,H.G]m)Ed6llP,Alm)#<span class="pl-c2"></span>%k@=t\(&amp;?=#[Zt#U5j&amp;)E*HTe:Uoa2_WB2D&lt;X]o?bd(-)hS%o%3\)s+Cdl9%-%$#sNfJ3eC/KTjDm*,&amp;IOtiODp[[;E[eg=V62K,&#39;<span class="pl-c2"></span>%-4T^/%Va9&#39;%[%q&gt;&lt;u&#39;l&amp;6$/bk[G.iR8]f\hlG4/JFYhg&lt;8Id)fa@ZH&quot;JE1m9Z@-G;KfHML/dC_)7&#39;&amp;B?j4Z7GQ3U]&quot;&lt;M]$C6,39#<span class="pl-c2"></span>%&#39;GG^^+D3Sub*U2h9b_gbBqGI&gt;&lt;$&gt;qT=EW_,&lt;]$VuHj]9CfS$ARPCW&#39;)C((cg-5aAX!dXG23$_66&lt;H[:H:K@4)9A%@c8i^4%J&amp;Kna<span class="pl-c2"></span>%;(LBZ[X,m5id!/!;Kjb&#39;EGQBMnTC9_]*`+o5!McL7ShqPU&gt;7.YH1moeKl!ES:&lt;e*&#39;&lt;$L6&lt;k&gt;+fg],!([HhS,&quot;Z7?ld2+]3&#39;k,&amp;bW<span class="pl-c2"></span>%ZHo.:e8(j%/&quot;&gt;TCW%2_2]#IL&#39;I6OfFN&#39;:sp9Qg&gt;s!1F7^&gt;`&gt;7gTtR`*-D*Pi;g$*V/X@QCPPTn&lt;a&gt;/&gt;Bc3_^Ye1pr=Ap^ZbVJpZ=<span class="pl-c2"></span>%p7J0tHHXQ_/&quot;V5`&quot;J6nY88!5CCDnZtAgo9\LUC*4@XG-=fX4jdju_J@hr8B+h2fA*d_&amp;E@=p(Sb=5kd`8LSCESiV5ZRsski3!j`Y<span class="pl-c2"></span>%8sg4&#39;H&#39;SbrY@u`i,*F7WGGc@A??RX\&gt;U?Rc`mJi:`Snn^&lt;*nrh#[t_CQkSD$_T4m8AHo-&quot;-6Dj&quot;H83%?=2q3n&amp;&#39;VO?B;EIYB#a[N<span class="pl-c2"></span>%S1d(Q/p$TCGYZ#A1ismCjMj^2+VlSqR&gt;\lp[5DR_Jp92F\m&gt;J3GdeH1)::\c!i$n]@$`Xhgj)Nd7Sf5Q/cD8l`D2j&amp;DZCH`1LFb6<span class="pl-c2"></span>%QZ(&amp;&amp;&amp;&gt;kQe&gt;&amp;YCYDQoEUYX;nHSR&#39;@Si+js6H$!qdd*&quot;&lt;lMa/hiN?1c=E%Qo$bRFIr&amp;&#39;R0I)OQEK+b/n!SuD=re,[I;3]&lt;qg+MGRU<span class="pl-c2"></span>%4&quot;B458=?Lo#Kli?^6&quot;l+rgWEd&lt;nIEBpDTj2ZR&amp;PrS(&quot;EMZ#(isa,Gj=!.O]#!`]KT_tSul.`jgoCP56iR2Ns-ADsK[;;G&gt;e1=_=N<span class="pl-c2"></span>%,-&lt;oTRTTpn_f?g)o(4&gt;Yp&quot;-`M2-rEYN+VEX/U\cVait(qj)/Nq^^&gt;a6ba?qEo3o+s!%XUCI5=bcTp+$SMusu&lt;h6i%6qknN&amp;&quot;@o+(<span class="pl-c2"></span>%\]RBnekDpGRaUN=f_klbmudI)r_t9p*DGD3)]0\CW3J&quot;ro2h1O&#39;:ELa-cejgSONakR&gt;E+*,l]YFcdY=g[WXEL&gt;JCG-ILTS6?S0HV<span class="pl-c2"></span>%;(r[gRt80W,M.O0aAF`h4TiK?Au(CLTHLr*$6IO7_KReWZ\3G&gt;#L#k*GB3!E&gt;A/EEYq=P..I7qXZ_(;NBSb&lt;R5(GnK;B%M=rP4Nu<span class="pl-c2"></span>%5d`6/MtK&gt;.LQPH$6%6/,MliZ483b,&lt;XC*&quot;K:_&quot;^)AV4&quot;^IO4p8*h4To+NLPk&amp;&amp;jGe$BB3P&#39;C&amp;N&#39;apj)&amp;bfJiDa=-B?32r(e&amp;\JD+<span class="pl-c2"></span>%mUJ!+_:o,Ef:(?6(a?4sf9Je\BCWg,RE4GT#i]X\aMAc/(j.&#39;$&#39;dH#kAu;0l?tkQ;l&amp;#qSS%9&amp;kqiR:V1NUL.*8aH.R#WRE_!M0&quot;<span class="pl-c2"></span>%R\AKQT&lt;mBe&#39;)MHnI2&lt;7sT&gt;.F5EC@KLr4_JN3#FA*,&lt;&#39;rg&gt;94hAUE@Bpc:.o87l,bYdYq,=m(bpPjjU8HCSk(@R@.-FU]E1pX&#39;3=0<span class="pl-c2"></span>%JOV?oAqVY.JL$VfG/o5N3U8&#39;76/78t0JeRJAnfR7iF^)l2[eO.R6&quot;j%XLg/B8N9bdOZm18$XXclWoQRVKq$\V/8J_e:&gt;tISK\#0@<span class="pl-c2"></span>%:CoS[r-[Of&#39;*P/-?]0N+/]Z4sfZSGi&amp;+$&gt;DNu7Eo4t$aqaY&quot;g[X)s&lt;.iQ#lB_]/Q9=e]L?bOq8I[]ub$7T+d.YfWN)PXLTS7Q&gt;5`<span class="pl-c2"></span>%P@e;J=)*XcPJWI1#%gWD/F`8!OV;CaQXE94aR-qGqdME3B*:+#&gt;M)j;%7_j+/onD4TF2Q%K&quot;6)Y$cC&#39;`i?lFrD?YX3RG*^FC$GOH<span class="pl-c2"></span>%LaUk2c2dN&#39;T$=_F#qu+PMVh3&lt;ATn8&lt;YW#qoDLrF/_]YqGADV^[&amp;ZZ]Y,&#39;=1h\FB`&lt;Vu4&amp;oke&gt;bOSEtDlHeuWq_,B:IT]?H&amp;[W8iK<span class="pl-c2"></span>%C/U1(#p8Wp2i2i]F&quot;&quot;N;^FMNroc4S/Qu5-2K@A(^==6j[5iMV^*H2PBDU%u_%u%1u&lt;]+BIoR-]#rmVP3[72h6cI4;&amp;F;oGTXS]].<span class="pl-c2"></span>%Zp1gs^Ppr7F&amp;86$d[.$!!4&#39;].)5$2H`Wn&quot;,fD;d@fX.S7@RaC7X\?.VR:9n?JYK,N$P^V1`a0oUiacG=DnH+.FNm&gt;rR1WT=\JRUj<span class="pl-c2"></span>%,HGs1pnMYu97.-KHSZ/AZr4d4o8gU$0oKYG3.Phb8E0At+&quot;N&gt;p!pm&quot;lok&quot;_KmCZWc&quot;6[@5)%B&amp;W5DDd7G2mY?6bTg:^s#mcG@7&amp;[<span class="pl-c2"></span>%QJH:A2!5Zi@1gJe*Ou[^+.N$F1GWCQ)$)Z@0onCM-#=_&quot;r_SL6`Z[7_U-h/?4BP,R6nk;LlLb18@`D9dQ)E4X8MKJ2XmV(e*);m@<span class="pl-c2"></span>%$\@!d6nN[@-eGDfd?l9O][o?(F%.V$J1iZ)h@Za)XR8*sT&quot;HHSc]JF*jX)o?i9,&amp;&quot;2?50kpa=nS&#39;/[^;AGGRtUqCk&amp;&gt;_A4pgdHc8<span class="pl-c2"></span>%eP_oc%IKr?4o:Zgbj_.)g*X]LU4IC-aZIs$T8^Ei4&amp;]luR$B8G`j:A8g]&gt;B&amp;%sTQZ:==Z?Sop0q.]JiiTQjQC)jskn)6fYuOrS1=<span class="pl-c2"></span>%S0&lt;?6F$Z-D%P,(*(Ao5D6t4&lt;4;#PL,13Q&quot;$:&#39;/G/rqujR=o&gt;_.cRfc8\9%LqL[]I3,O(Itc3(mp?0=epH&quot;n]&amp;mjj]6h[oU1E;&quot;Se<span class="pl-c2"></span>%b@31)+RQN&lt;(&#39;nC_MQ.0=6M09(A&lt;l,Q.Yg&quot;UW&#39;+uoW&#39;]MjO\??D$(n9-O2;qc,f/K_/Q#j[dPFBZ`8lr[j9OCe%576[.d:3:/8tIj<span class="pl-c2"></span>%Rc&quot;nAq0%YE*&lt;BGA*(--I-+i&amp;s::2D.Ofgg`f3&gt;;8@_XqJ%5;uc^g^f^7Tkh8UqQY%fS0&lt;&gt;Aq;%L&gt;Ea:;Y3;&amp;nQeN2u)a+b,q&quot;DE[<span class="pl-c2"></span>%,q8ZWCI&amp;07IXdf.&lt;G8jiNUJ6Y^h(tcegn@2TspJL$/R;VH$/LP=fAc$2g2bo%g2Q&lt;hY!PJJgspcNF&quot;SWpeK+hI04n`kd5N_PqpTC<span class="pl-c2"></span>%7&amp;SfrP&gt;*gn%dn/VarYGMJr/h?\D!6JlFPaPIHtgIRK!ks,M)&gt;9.t[?#S+D79&quot;tC,=AF`0nm7G&lt;`ICVZ#/3?&lt;km`E*U:(lH-i6PKN<span class="pl-c2"></span>%l&gt;Q^VT$LBmi6]cb+8pk\+HFRnUg_qh=.CG2oGSp,Ql4&quot;fF(M[/SQd^IgHR?ml]VJB/P4!M`&quot;l^G&quot;-^];bhB,&quot;jQ^l6E3s_LUWX!4<span class="pl-c2"></span>%He_4gAJ4&gt;5L)8,[5b[mm`V,JLbIWD&amp;MC6C&lt;=G+cJ39L!q!!osQgP$gMo&quot;(OE]l*Ap,.[5$&lt;#`QZ6!=/;&gt;\Gm7XX$Ws=+/&gt;d`ei$L<span class="pl-c2"></span>%at(F=9oW:+?C:@6PG6&#39;4,t&amp;^/eNeEjPb!8Q!#tqAUMM&gt;uZXOa3duds^V&amp;&amp;*a.Y%n=D0?d^NqKqnj%H^#3O0)(\&gt;fAk$-(&gt;FDUe)1<span class="pl-c2"></span>%o+q%]oFs@%&quot;E]d.pJfLUf28:VXO9K_\5J0kBgl7bNNn%F,A(rcmamKDEh2qpTK%AKfeOtHq.S8bB&#39;K#tganKsP]S\F&gt;qjR*X7&quot;]E<span class="pl-c2"></span>%Q2b40.:TD3T(pU+(KU.P@pH\&gt;MS1SU#;]`&amp;9%na2bbaugd!&#39;,Jd?_/HBqEc!]SeF@gma!9-;TLEc41/&gt;0OC?7W27_&gt;BuIm0&gt;m(_r<span class="pl-c2"></span>%5uJ5gr4.uEL$.HTf/u.rXnqkoY8-&amp;g`bYV^&#39;UP.tfR&lt;.&gt;.^1r@SF1@9fg(0$pWi&amp;Z,8A@^m2$9pkdr-]WsE`f&lt;5c;17-9:siVa^%<span class="pl-c2"></span>%e%6,N5:a#l5@M8M!+\i!eV1tPWXJE?8u`8deh]&quot;jU+d&amp;Ng@r2XHVeU3M]=,@pjM^S/s/U]&#39;qs^&gt;DtKc.-U6U^N8?&gt;g&#39;G[kl^LZH2<span class="pl-c2"></span>%LF9QqWc9n9far[?QY5)&gt;+M+cJX=N[opR@htpXf6dQaa\oiL&quot;W/q$AkUGn&lt;Mp^e?*pRp?kVi16PADT3FeV%&quot;==&#39;Ykpi_A#YM$Tc,D<span class="pl-c2"></span>%L!17-*qjB+o!`8eE*Xd`4X5_4$219AeQ2%-@3kNr\r)\G&#39;2#0D11IqUoI1P!&#39;Q-=,a79o!TD1QFAP;(bec?d2=JF[h[DC*9jF&lt;f%<span class="pl-c2"></span>%Yi!P23^pTTo37h245IA:_U=#2A.HuT-KP9U?S&lt;#im@7!O#tK&amp;^GQd@NcoUa5lrqVA;=cD&lt;Uq!^e=A[8_VYGjI@.P,&#39;E0%m&quot;+)]-@<span class="pl-c2"></span>%ko)5hP13;Ci[?8bgQ4sNX.JoNro&quot;*:/;pa8Rr.[7+.d0D_M*9(/@*!e;_/%t:c:DB]28&#39;rD__3&lt;qCl.8AkP&quot;`Ft\PQ2[WI[;$#&#39;&gt;<span class="pl-c2"></span>%!/R&amp;:VW;MZTa]`(,:o*]O/0KrU_OtC2WVG38RpJ^f^WK8l4jpWCL@o3mD&amp;nppEptMP+37%(2jr&#39;N,jVh&#39;G`S_M2AY@bG,DFP$/qs<span class="pl-c2"></span>%VRed![W\d8KLmP+UH`.(3e@kbnr7lO5ajTi+@.n,W[q9BoQ-.rnp#+%)`o)Fd;=,&lt;O#A3/70S`J&quot;J])ENZS?e?qfh@=]s?;*ecII<span class="pl-c2"></span>%liOa:WSf@shU/K?.t5ce-.q-/iu,4oE8$8H?X#!SmW=&gt;Z5/Ato]mkp&gt;?ka%Q&amp;!R%eDf@/#,Ef(j7htGe,Q-&lt;*)\(T692g)R&#39;(M/t<span class="pl-c2"></span>%[He&lt;GOJtp=k&quot;_$?3)@kt!X2`!135G7T^Rq&quot;ZOCInDb=(6E24Ik(Z2d&gt;2(m]dP-&lt;/uYePgCLoLg3Ha_.no(cNe#cVh0I)NEn&quot;c=G[<span class="pl-c2"></span>%?5&#39;Tl]QE2)Cp&quot;$o;+6cD0QYLV7+D7Pk`F8,^hR#+83ec;F!:(DMTiII.q&amp;LYL1&lt;(u1sQ*!RL+!+RCl3&gt;OLAS^&#39;&quot;L&lt;d]07ckC6(?i<span class="pl-c2"></span>%Vht`War%6\&lt;3T\+_m$/5dn*]`n-k+,fn78J-@Fa&gt;&lt;A8DHe3eYi^=chqm(`?L]CKP1GIXq:H&gt;]hDZ%l5U&lt;U7)(oU(Sp=a]iFQXW^%<span class="pl-c2"></span>%_uRk&#39;Sf.&amp;!elDQ\-!ZfS;u=e#ZF12XnBi)r-5\^3BZNXFR68JJ,W@9f]+G:&amp;%p[A4cFfIW,o:#Y7@;:0QP2i.NQ$!9,DXdk9.D2C<span class="pl-c2"></span>%dmQr8.pj1(7OKO&quot;L]&#39;Z(JB7gN3h9Ep4q`&amp;s&quot;!^T&amp;?IDcMG)ig`,&gt;g6sFIoeOp3&#39;AE[OI@r0-.9ZnZru&#39;XtXaRAeH&gt;JY+rgjPLC%#<span class="pl-c2"></span>%!#&gt;s[8W#ADKIfbiJkj&lt;[:Js&lt;X&gt;mr)2&lt;\lk=i\Jjr1Y_&#39;6.S6RF^Ln[;Oi5=WLC)jp3bk!VAs\[Sd69nU&quot;F[B`jICWR#XW&quot;aKT#9N<span class="pl-c2"></span>%TVI&amp;ejOb6KWDb#4(fuIEBc2S2(P.]Gi&gt;/.qUe&lt;k)UfaXL^)2/t5l&lt;V[Lq6k.Z_!SiJLS(mdaerhn19&gt;RnmbM:D;Q00jCB0$I6]E)<span class="pl-c2"></span>%A5UEFjjfGb]q&lt;$LV2Y@%/%%C2+]`;HYS;&quot;A9\d\&gt;cUj^u8n]F]#&quot;Qm6&lt;oR5\h3U]c+jQ+YV;ZPonNq4(*&lt;6V-]eko%fX1]sD3[YQ<span class="pl-c2"></span>%40^2ch]l)^nq-5EFeW$_nm)+=4)eXc&#39;9R&lt;Wf!:&amp;25&#39;Diac\r3a?d.(MFE`&gt;QL[DB4.!)@(1T&lt;f]Zs&gt;1CPQTFW#T0+@7+H&amp;`(J\p#<span class="pl-c2"></span>%dWI0p`?UaPd[j*gnqaN9&lt;-Lj$B3nZid!n9rnb8qRZ&gt;pK(a?C6_,KlRmr@.-)[Gt!u2K;dhEr[&#39;o&amp;b\!NV31DUa*79Cr$YU1&amp;@a-`<span class="pl-c2"></span>%7l0W&amp;:UrT(@#W6DTig6SCJ!uaddu(;5nSY;7+&quot;)B,]B5I2&gt;4I$4BiGdkcD0iLo&quot;dr&#39;9#i&quot;&lt;IWlD=HcTn[Hl!;f4W]).*_2qEjuqK<span class="pl-c2"></span>%D&#39;N&lt;VPB&lt;r`,V2(E&#39;G&quot;Ze_afu)c:7Q$&quot;`Z?O2Y01b3NMFNm;1]$YWR$9bK*:%YIL:#D&quot;7pV&amp;s&lt;&#39;f.mH&quot;YAlJ`[U%d&#39;$V;eiagaVNg<span class="pl-c2"></span>%U&#39;\Rm6=pV(#oF1c(R8a+^6E&amp;]PUGr)Gj+=RB)])pncg6=(Xm/`L&lt;+AJ&gt;Yliu@F*K7-LO!.&amp;9DrrYd0Z3c4D:BMsWX0-#[^cS2iE7<span class="pl-c2"></span>%ouT.RZ.HTF4&gt;&gt;B5;=sQH(]`0MW!RUXDlW)h^AoT2T[DCA3GGoMaa&gt;@R?Qs::9N&lt;A):jV)SRm(mR%\sl%L:&quot;FXl.\d%F-3IH&lt;(?/s<span class="pl-c2"></span>%QI%-I45&gt;&gt;DhE4&gt;8L&gt;%#N+(&quot;$)&quot;G&#39;8:s1&gt;&lt;U%DtL.dP#60*)8LFZ/m(g*,GaAKZ/6m6_n&lt;dM&amp;#8=G]\M12,Zrs#ZsJg0SO0B;a?H1<span class="pl-c2"></span>%b]BphDr:()52`VX1WemY1h89-`M+&#39;a&amp;HcTE/XU!TX6LP3mrW-Se8!V!EN;T&lt;nO+\5Siu+nWBn.&quot;.&amp;;;1pa`=1G.-,8&quot;ZVa$KWD.F<span class="pl-c2"></span>%+Tb6,GdC\5U.J&quot;_\fqS2Gnu/8BIAnh8o-+(6,hY;Y&#39;Ee+cg&quot;-tSVTe?!QK8*7+XV1:2^3A(Y/^,UGJr]7La&gt;JPlHRfgWJ#&gt;&lt;3`TT<span class="pl-c2"></span>%7E9X0=lTi.k4-OL6HqnNjYtH&gt;Lp&lt;a4[Ma)G=lPl/j.U,PRk`YDbZ^p+eZT*,a]7]^+?Ht!U!TtS-)R:JAhoZt^c/rqn5K5D!AX0m<span class="pl-c2"></span>%r.oBN&lt;s(O`,$F3:YK3%&quot;!uATdMNSf@TKLIdb!8iJm82]kcb&amp;,jaH#!#(ZE0UfkcisG&quot;&amp;!e%J7V-!&gt;?UAOW;]1]T#W32/k^oUD*3]<span class="pl-c2"></span>%Ye[gNac(ZcEM=3S0u;M=au_Us/1,W$M3i&amp;S&quot;u&gt;&quot;KcAM/qHs--r&#39;P]g2VK&quot;8H_&lt;3kaZ96n?\u#$lSANLJOBh8(engA3`.9euWkPkH<span class="pl-c2"></span>%0jc7q1j4+t&gt;RFUbPt;it*tQ]105!abVi/*-eU%K&quot;kJPN0j8tkQ[!.rhgLZQJPEAGDcj&quot;*gQXXp&gt;JnC^6W#(A$#*sC(MW.=+1BhA3<span class="pl-c2"></span>%Kq`&amp;;l@.X&gt;XrQf2.cGcl^\CBA13(5!E$K)HDPIoDo!SA&amp;A28Z(,]4mhp&amp;h1CIBs!N]&#39;F^`%&amp;EDHrk\SG9#$.88*]]h9&#39;t9!U;.Q/<span class="pl-c2"></span>%AW[VYpIo:GYV\$9/nXM[B*!&gt;IElga];L$N+*J&quot;#p/L]9&lt;YnZnj&quot;fYF_#k(/K1oV^Zg:F(jk/B`&amp;O4JPCcV/e8IlkGt&gt;#mbXW,)&gt;&lt;<span class="pl-c2"></span>%F-GNCa^JD?[rMP-A]CTQl&lt;HrZboBn.fQ]AmrQ:a;%g&#39;8ST+/oNg-!I$P9cl#XXWU^JfHA$/6OsV@Y^BJUT`O+&quot;0;)jkA(sM]Rq;P<span class="pl-c2"></span>%3H18&gt;9d8r&gt;)Mp_]P64at&gt;*YdF@7^N0D;]qG@TEF&amp;^1htVXofiWKmqI]aMLM=d81&quot;#&amp;j%%G[=7GOW)Ud?I7W:OP&quot;Q#kUeVi$,]=\&#39;<span class="pl-c2"></span>%bg&gt;Wi&quot;rVpG:NDi]&lt;HSW,`i,\&lt;JpZ%@.LRIuq)-S)hmSHPDlKnZl&gt;hZJpo&gt;7O(rG&quot;j)-dV_9G.dgF,V@k\HLQbP1^A&#39;*mM,$&#39;s8u*<span class="pl-c2"></span>%5#S3=AmBiSe;&amp;?Cn04g*f\9@sTMW)?#9LPPb-9OiL\+)R*:\3OX6Em$k_&amp;LcY#HfpI%R&gt;Hs7(NH36oHqAm;?UR&gt;0aXV9s&quot;k#o;1?<span class="pl-c2"></span>%4Z7MW18t60&quot;Q.2.BX@V%rY&amp;lbZQX?7Q+MeiJ4X)HhFP(M=BG1[pNIPUL&amp;#d/q,Y&lt;%\=SM=n?&amp;@@G_M//T-$R-j&amp;ELl_8l:eYiA_&gt;<span class="pl-c2"></span>%$Sl$.,)es^E;l9-VE93.=l\3#Wmqlr)=Qs5&quot;taE)C4Q&amp;.,,fgi&quot;V28X,688Hei[3;?E;2^qVF%NZ4iSnSl`guBdnp06O;jtP&gt;ak+<span class="pl-c2"></span>%-af@9&amp;i,V:l_YX$&lt;&lt;J&gt;\&gt;%1oimf;7b^7_?h6/p)/,&quot;1RY[U//m+j_fA;T$qjb_&amp;d&amp;G)NSIi4t&#39;O[T)TWh&gt;cs:CC5fgrQ8S&quot;.Fc&#39;X<span class="pl-c2"></span>%)&amp;,*_ab`?(eu#Hqa82iC3HI/)n(&quot;cII_ndu=-N`5k\&lt;H;\5(;Ea\.FI[AK[LZSQmMEfM.P8Jo(R9iLVM)]Z3dQ)7!o5gO5Sa`Nrf<span class="pl-c2"></span>%EaNmsqRLXE4I5lHkkoAKUWc,k6Igc!&amp;.[&quot;.?dH&#39;&amp;*cqpXBAQs2_AuN]cmL7#%Ro`WKFV5c:jdADqj7tN/IR^Lf.[rN8Hru%%OGL.<span class="pl-c2"></span>%iMn&gt;^i[31Ll?);K:tNLj[jFZ2Lf/VM&quot;?tREb&lt;KFt8[,.lA&gt;WO@$37U8([1uO[6HeH4E*M2&amp;&gt;k&amp;;8Y,_6UN,u./OeIq/IRaSo[J]&amp;<span class="pl-c2"></span>%j;1/@Y,rl5QSu&amp;bc@&amp;OuC22(sTNr-pC5UfrN:=dl&quot;N7@N7!$/1jcm0BU,boE(\*L!Fl6&amp;DO&amp;d-bEUT=QK8Nl+ddg/Z5[YiMk;19c<span class="pl-c2"></span>%eqM4egdpI&gt;^$0Sp!K!2@HFlBHb5(,^Suo4HA&quot;ostiK3&#39;8]q)EBM_7U-&gt;iKNJO]`o(&#39;?2Y#=+Y1**OsHeKkNR*H9&quot;-03UrG+1t&#39;r)<span class="pl-c2"></span>%EJ^^/28YJ2LbggJ)%0&quot;8KGc2[Q#tpoa;W\&lt;V3s/r8[:HPff=8]:YVk%R@lk@kt6ZZ$$Jqa,DjJp-`FS.:eG_F%M,plaJi$/n&amp;kgo<span class="pl-c2"></span>%eGn#N#9%hZ&lt;g&gt;e/_nVSu@^anq2eZ+AHW#f;V)j[H.3fOHhk00U&amp;Sp[c[1c_Uc_ChQW&gt;.PLE44W&gt;010D(oML`oKYs3nh@efCErR4b<span class="pl-c2"></span>%0bulD5:pij5S0-.&#39;%P:;m*pR3`:t@XHC?R&quot;?/R\=&quot;,aDdeYt&#39;A]r+hP?.Wdhd0h&#39;H+,&lt;I`I-L#uC\2RK\&quot;F%cE=`g&amp;k7XQ!M^*R]<span class="pl-c2"></span>%Mj\V&#39;Y,jsqk;*os(DtOP!nY3CNSdk)A?KGu]=RP&quot;rFVkXE-5)JRT*&amp;ghL9C02`-+ZQB#-8s!OnLU8)Bq\\(;XUYGE?&#39;j_^&lt;Ur&lt;YZ<span class="pl-c2"></span>%Z-Xc6od,(_h9FWPA591f$N:?QgD$_@eG`]G4f]Btlb*aVkTfYKCObpoR&gt;7D0k6n&lt;oTmVh*&amp;jsZiasRZHq=qD[%m:DiaVU=1=\]6i<span class="pl-c2"></span>%S/ot&lt;=&gt;lG(!0;A&lt;\^Li7l1J:\X7e`K#M2.%jk/B5IW&amp;NmQ)[fDB9tM*HJk%KCPY&lt;oDr&amp;BRS&gt;&gt;4eU#gNX1G3M]mZkf&amp;fdU3$&gt;nf(e<span class="pl-c2"></span>%8ZW8-Hnkq*ZN,:W=/f,]eY#.&amp;X-T&#39;?nV\Rk&gt;ls@1`Qq,2&gt;*VMF(8r7h=75bL,be!JhpWn&gt;qiG@@GYaM&lt;H=,dre-u#gn.0VkEBiX8<span class="pl-c2"></span>%%+Ec-2F&#39;bha^doTb&amp;kiY;-Zp,g$b,Jrd]1K(h/7G^(ic:b&#39;6e*MmU::8s3[NB#&amp;*$75Xt&quot;EL\Je+r.ET&gt;fnl\&gt;@gYuM9%FkR-E(/<span class="pl-c2"></span>%CHNdI/Fj7OY$Q_&#39;*r44P#=Z$uG5DQq@cjCcWA,M2!V:m*m;V@(6rC`gBmgm#k/N.:UWF)OP8d0C#`sV6,l)?@5&amp;T&quot;QZ8Nt&amp;8\o&gt;#<span class="pl-c2"></span>%PbIXB+.QFo&quot;?GgSk08o-:(+R]j5dik;6q&gt;Ara_D)9-[W`-3*^IXjrF4&gt;4aV(fIPQ;B`thAa7B;V#L/b7Ziimk-.fs1pqV1r0m\m*<span class="pl-c2"></span>%$6ledOd27o87aM$o,u24F\/f_DTs(RRM9AcE5!I*lH&gt;A[G&lt;o81R`&amp;ndK6rfrQ:R@K=n2_r+u/FfL6i5n)4clN@745:fhTYPK^TL1<span class="pl-c2"></span>%2&#39;X?9Q(,O4$VsuZmts9d_6?g&gt;bSsAlHnR?&lt;W#2&lt;:lP-g`P!/C[W=/&lt;e22Ge\R,mF&amp;rjs&#39;65XjDVa`n=R@%9J@N*NZ[!#G,!XCR+$<span class="pl-c2"></span>%7B2a)Ne[t2;tj&lt;*JtmeG8U`IAb1^;`UXcN!TlVE0[r3jLPJX=K/p+PIp[p&quot;`0Jf)tT#dgLGk2U@Ujji/WRg,1:N!!I@3ePcI@@#?<span class="pl-c2"></span>%HfJXNm&amp;dVXKTVFE2&gt;kHJk%&lt;U*j:=)_6*K`b`_3dROQ_C5&quot;Qgbl&gt;R]imf3liG-d+fLTE`(_;P;iuWr7-g5?tVjc0m&quot;r8ZAO@MIkP/<span class="pl-c2"></span>%jEt&#39;qES&lt;&quot;Q-@&amp;J&#39;&lt;b[o&lt;mB]H[M$U3OG2IefFCNc268Ce*HMNqsknQm``j[MH:XW+Q\&#39;%iM,m@R@^um)hPNiW/&amp;2D%f8mNRRLaq,L<span class="pl-c2"></span>%&amp;qcO_+R)Kj&#39;I@c9/=XdM9K!iTN&#39;nM/q?O+$.Mi0c]smY),V!98M6ad+%c?AGZ[&lt;WF!r[?H:7bg1kJ)&gt;),=P&lt;@LRj2ofe+0GkO#B]<span class="pl-c2"></span>%5La0o&gt;R&amp;2I&gt;0&amp;`@gTR$7*5gs&gt;_=TV`j82=@5!$Y$B;k&quot;kUso1E0(+8E^t_9YXc=B0/rI\4+*r-[FG4kb^#elG,ZfB.q[`?,&#39;7+&#39;f<span class="pl-c2"></span>%&lt;O[uuDcY%=fZf4MZoA&gt;=I,E!Mk0Egu$HY!Cc=0huOXHR6Q^$bV;&gt;ZZ\GCG]H\Ra@W5u&gt;k]N3D2)?S[)AI89$HZmZb,0)F*954D:L<span class="pl-c2"></span>%Os)FMg]5`PP&lt;b,,U)bT6.j0;`21_Ij&amp;o6_:DTCg,M&gt;.S*jNB,!#W&gt;_pWAsUCU8gR0SQ0lsW4Ip&lt;m&gt;7CF?V7@H;A@FDY(3p9/WJA0<span class="pl-c2"></span>%ENO8k4o+]piA4:2bqIofog0h0;tsA4YYfZ(7d3#Y6j@tXb%=qm+&gt;W.L*8!.$1?)L&amp;?&#39;koPK^DBr%^?&lt;-ld1)G7;4mLQ&amp;6]fKo4rI<span class="pl-c2"></span>%`%BN/*cd*\*euBJH(:&amp;&quot;blD]B@A=A6l%(F`jsFUA`U5-7j[[3R,%@-5g#U&quot;7&#39;&quot;&#39;(RY]1N&amp;hl=Va467YMY*H;%joFoj)h$0[Ue%Hl<span class="pl-c2"></span>%lHDp+NXG9MZR_dDmU::t]D7,o&lt;pGd2cCr@cU^+2ChorZ&quot;=%jX)S]1OTc%E&lt;OL#d]#?&lt;#Xs_82,0f!0Y]&amp;7+h&amp;h7OnZr$O9U`c]G2<span class="pl-c2"></span>%UNp\m@lRo.#1?UT5JHS-8[ic.fF;tX7i@:bM*DD.#tk%gkHL?)-9,&lt;@:_.p/,uMnjb1XrAA-l)71Vdq/$OEorO&#39;S`R$,JZ@!,RKi<span class="pl-c2"></span>%3cfc&amp;6&gt;p(JG&amp;Q:M`C&lt;R^l73Xib*J#j-]_&amp;R+5]:!+1R,sdaknHcVtSl_YJq%#2(W/O@e?:Oc=j)KoL05IJVSb&lt;&#39;OAFQ&quot;EE.Z3Dd;<span class="pl-c2"></span>%N2`qALRRZm*W;oQ`5$)rI_s;iB*GW#@CI`UomgHE\TH;mebDkqRa(`7qY.k@\64i8V]bfEc%L@7,s3&quot;ZbQcljZU%ROrGFjlqS0[U<span class="pl-c2"></span>%G(UMVQ(f+-djDtb?`fJO.d?C$nhIlSWrIlr(@&amp;CFJ42\2#&quot;Zk!&quot;6oBibYaL?js/K!;.SPDT@_V#g?)*?&quot;k=#&gt;S3GQ8^`O6l&#39;&quot;?87<span class="pl-c2"></span>%1.lSO&quot;+u+#K&gt;.ppr0@,lG-=I$/aWYtFF]BK,n/MN&quot;ZH9&amp;!LXCo*b&gt;(9g`&quot;TtL,(.,EFf-l$5Q0ViarnE2,^BBOq7u+#[6i;Ht43t<span class="pl-c2"></span>%b7LP?Vgc@&quot;Uaj4m2PtE:#[6NDpg!1O5QdA:&amp;&quot;&#39;!uPCBGTe3i!FW\?tkCTf8;HTGOV*lV1ffREj3XBcg:&lt;j&amp;\#&lt;^I=-jfWCb8=LTC<span class="pl-c2"></span>%SaMGR[h#&amp;&lt;&#39;b2:^$$K6ofge@q/0,\7QLYFQ#tCT=nZafT7c^hh)Z^or6Cq:/b?&quot;M4I&#39;P,?[&quot;D=h+gUae(sGnW\diOJnZ%8KFeMch<span class="pl-c2"></span>%D\,FJ9CmL[\N`1,Q*]=EIf,C)Yi%k&#39;EQbjO=/\M``^L_M=S?Ir-M*o2mI&amp;UXd@O7pVdK(D$cMN&amp;*QoK7nbh.0m,qa5O,hIs4_.)@<span class="pl-c2"></span>%krEqK&amp;`If;f*`4l]%8S(IL59(H-@Dka2NT.c%Eeo]97&gt;3%kVD8T#sr&lt;HLO9C9pJ*4r%gQO&lt;kod&#39;,?NSJFMAD+G,64is3&gt;7NO+JoH<span class="pl-c2"></span>%\Vi;@QZt!+^HG^gT1a^^O1@J`k-q;23TOcYYG:1/&#39;bViJXWe.$CR6t&quot;(GE,DZi6b&#39;F^pXeHH&amp;[V)c\&amp;!A0%#X&amp;3jM/;N*8gc77l;<span class="pl-c2"></span>%%fD_Xqp]S,CeC]*Y[/^L1di1?F3&#39;Q`&gt;Z_qpTRj(]L;Pnu[;jakpEp\8=SuR2QP``R#F&lt;k.RG&lt;&quot;)i?/*n%tFJ[roJX=s0r%%TDlaC<span class="pl-c2"></span>%qG7.hs83u=e%bq/s7nnYVgf&#39;6^\X#kqu?IfT?R?.5Q&amp;tprVN5enNZs6f&amp;&#39;frhk&#39;l1DrnHXq6tj&amp;rI=dJq#C?\s7cB1J,fA+s6F7m<span class="pl-c2"></span>%It-e!r=?[A0E5h`m6A7bs7Us9*b/&gt;9cN40`SfsVBRQj!*/Y?;V?c;rpP!AoCf&lt;,%m^I&lt;)+DuVbbg-l-R%D0+,@IUV-g;PpP=O`AH<span class="pl-c2"></span>%iRO37!Nu?iYf)(R&amp;5S%_O6C?94+JI&amp;F-uC&amp;R+OkJaN^`KOK/.u&quot;Lfe9_L?ET73%&amp;=g8psUq&quot;mjS&amp;UZKU5fC4&amp;*Mjj2k/\P!$:4%`<span class="pl-c2"></span>%2\;flZY8QT@dC];CInl.,?D$GQsjca&quot;d&lt;8^KUNa9HIKAh(@g6eelt7G[&lt;laX[e9ZRq;p)3SeM4pk2_;nT3G1_fH(?=SHOG1Fmtm!<span class="pl-c2"></span>%DT.R)mIVmQ\B&#39;LLr?=&amp;DLKnu_&amp;o#[GcXpnEq\/%cI;,+1`c;-m*X+.k]Na@R?[(mqR:@GkD-Y0E-]GV3]8kbRbXiJJWgNJb=[lP$<span class="pl-c2"></span>%es_gXFr]VL&lt;/1Y#qT+tp-d7j@RpS7BFZ.Gq&gt;&quot;SW0l&gt;&lt;]P!aBue&amp;YGGEQI^a6p/)rdhjaS&lt;GLJL+8Jc:+QhO_4=&#39;-J394h]^8&lt;ma^<span class="pl-c2"></span>%[mZf2&amp;f/*fO@@-^&lt;OfK&quot;mW&lt;F?]_*d:r9/;Fc=Vk1N3f_ID&amp;\%2s&amp;&quot;&quot;#f,[?LPCh3%cK=$eAD&#39;HFi]E%uj#;2^TlnC9aT@f0M6L`[<span class="pl-c2"></span>%[F\Fq,4)),&quot;VCfZ:5E%ap:+t4)8TM,/Ab3ag`s8drH;=;Qe3b5&quot;1&quot;;3&lt;Uqc6o&lt;=U&quot;M&quot;d&#39;cdq5+t&#39;-8u.1#9_PGMk98l$/jcN0/H/<span class="pl-c2"></span>%`9+qDqg6Aha&#39;W`**i!hq^7L,gmHVT*L(@f3&lt;Mf/en1PhN;_44r&gt;B:kfYe&lt;Sf-%2rD_&lt;SD=`5,p+d`;*AE3WO^&#39;BD(*b@o^fR8e]#<span class="pl-c2"></span>%=Wl2E&lt;Nqf#q:8&quot;nIQC,h?$#cgbY,%+K0s0Bp!Lo+U6+4MfH`S&amp;D^)ou8VL+ZB*4XTbW@2Q-PK!e?\Jn]W#iSEOfVGO3I7`k&quot;J/F#<span class="pl-c2"></span>%qW8Cb=gn&lt;[;=bI`h-&#39;Z,0M&#39;rucef&lt;!q2:9H2Dj8#FH.sE!B]9FhqjtGZha[5XBKNN9ZsuA&lt;E;rQH/rP\fLB&gt;)*0k&amp;0Pm*c[pjURp<span class="pl-c2"></span>%a2=COKe_[FA&#39;=o#VsN[g&gt;Y6#0r:@+1p=c33[gDP81O&lt;N]MN.t5]2@+Y*ju%&gt;DnMB&amp;*2KX?&lt;hD8,&gt;5cmSluB3&quot;pY/C\)\,@gig!bD<span class="pl-c2"></span>%g-37U?8uW;&lt;o=Fm;nMPNTC73Y\q]&quot;$e*.M%hM)#h&quot;\B,0eKS\AMSRuk\@CdnMR^gpNXPeM@(GXPF3pf5mXKT`5P;&gt;&#39;VGq$4ePb&#39;)<span class="pl-c2"></span>%$%f*qjlRE,X(5eM,IPTl&quot;e;#e=m/+gV3BeTpQ6QbF:np$3q2$4O/r-iXmA[Gk;GN2%V,RZ,8&quot;/c3%&gt;5J[j`u\2h#Gt&gt;j/[gn\nQ7<span class="pl-c2"></span>%(3)]Kd[Md-5#+b&amp;ATJq2$+i%cUg0/-UkH!dAp-FahY[=?M`:;WN\d;Km2l*H/n#(He%SR.P7nq)==e7W#0?X]Xg32`INf&lt;t_cmAm<span class="pl-c2"></span>%Z!K%_TW*eo1D`p,!6*F1Vj#u2D%h)s7&quot;XC[ZJR8L;4@)Cd[9bF-2h&amp;WEeMrYj2NOLWO8;YYT&#39;YIDG(*]-ajs2o?$W]NMWS[D^QrQ<span class="pl-c2"></span>%lk&gt;;((`J?_0h,8I&quot;nFboahDgm8+cc`*$\56F1YR&gt;Ba,`=,!T[ML+A\aRN3_3E_,V1errCk38e#9Z\pXn:c@b_aO*&#39;pNTM?+%:;-@<span class="pl-c2"></span>%A4JH9@O&amp;h&#39;2.nr4A6IoQYTsQ&#39;EE`ILD9AsTUZJ&lt;Hgk3Ar[He5&amp;7QbaWg?(j-%^&#39;0!#@k=B4T&lt;$,oRe#Fq2:Y$\=!kJCTQid3dAmI<span class="pl-c2"></span>%eY@91V_J:HJ=DtCp:?W$\*:b=oa/Xo?;q,^1cQiu!&amp;Is&#39;Ue1@PL9TnB7/du9&gt;AF5t=_Vu@PlS7:Bu&amp;Gg.HZ/I\]&quot;BNHf;op%FA5p<span class="pl-c2"></span>%kin(&amp;^q,4&lt;PD]m#I*)sli3n-C)A&#39;Q&gt;XK\IiD2TuC4U=lbSY&amp;^hd46(VmBF#+&gt;CDKLe3,ocH2mOFI*`ctKdE+&gt;)+S2^Xm*fPq6%7D<span class="pl-c2"></span>%(C^mF3-#%E*SPaef7D_[5!3ORE*[VEl7p/k/8giHb&#39;C+(&quot;T)pPiuJ\T1Chf_iV`E87CjnkjNs&lt;UmiURW$QOk4:BXVkHqh&quot;o2%\/I<span class="pl-c2"></span>%&quot;Ej4qE#gu[5&quot;_cOdgfMoS2f`k!a57&quot;^PE#J/L_&quot;KV1I1@/NmWCbTd.mrY@%mYj;3QecChMl2I.Qm+$2&#39;;6Zki^Z1oIgZmM1O+&gt;h0<span class="pl-c2"></span>%&#39;MJFGIFfh+3-Z?e[Nl/]K+;3)+*HL4q!?dUMU1G@IX=#FDiCf&#39;mEW`#&quot;Sh`83;&lt;tdguohqaZ3N&quot;?#m!rdFN3T4_(&quot;rno8ek@3(Du<span class="pl-c2"></span>%`D]9&amp;kZh$h.ETm\;c7m!i&amp;ZQS-;(5+LS+CQZlT2+ri^%T^66M&quot;#ca6NUOVe@o@j(aO7phRq=`Ql[s$Ej&#39;&amp;+NL)m&gt;XYZn:&gt;:`QYD5<span class="pl-c2"></span>%oN9&gt;Q,3lsi*_3H0g\(]O&quot;#lC5Pr485,\r;3JL;bJA$&amp;B&amp;K&#39;&#39;UN&gt;^ECO9j]rC4bN&lt;em=l8?0lptC!2U5J)T*%^duCYS*TM=gS]%*C<span class="pl-c2"></span>%7eF4l6lsRnZfNh^D:Cl:=q&amp;&amp;0rBKJ*H2)a]&lt;OP1&quot;^M_&lt;)LN1)NlBsQo\h67`J+jUWSh9,/4S(?!=@-JL7m/3PCT)Q5&amp;I;$j;CZAT<span class="pl-c2"></span>%jji3ofKc+RT:&quot;e&quot;9OMYH[1%&#39;BOJq(I0!d`2h&#39;KsL@h9&quot;m%^&#39;rF]rA^&lt;hM^]]ZfqpFg&quot;#sCV\%bN%Rr&#39;JjL&#39;;Pj$R_&lt;Pd]sU[`6ON<span class="pl-c2"></span>%&gt;C[NNZZ4aol11_E9,hPl)u)5E[2r5l;-GG)!FqE8V&quot;9&amp;&#39;?Q2%F+B3M=,Ns2U:$a:(H&gt;f,gEh2`)Vl-WKUWj3(9+OSe#L%-1$k&gt;[f<span class="pl-c2"></span>%^Q*&#39;mY0&gt;UHX%BMc)Gj]5Pd6c-G&#39;g/%Bdg,OH0*]`ai&quot;!d7^Ff&lt;k;&gt;g.Jtk)/mB)6hNBAId&amp;8D$EK,PG2]#?Ga:/VOBng7`OD?bC@<span class="pl-c2"></span>%PL&gt;\M`S#dYX$4&#39;aQ45IC&quot;Qha41Da!_EhRFR[Qp;CXIl&quot;/3s?lKog,*tZBOsFJa+fVH%1Kp2Pr]53O.\P+Vj&quot;(/&amp;&quot;[r@IU&quot;\l;i=d<span class="pl-c2"></span>%&quot;YWF,lM]RUelY=Xf/V\JZE9F5:On)Q3G0cEkk3^&gt;%I?Or6=Z4-=?c;T;6BmhUkGAW*!Sj3FL+eS3:%&#39;;OW@7L-&amp;9d&amp;@a-!25T5)V<span class="pl-c2"></span>%s1&gt;X-0%]X,#&lt;t&amp;aPG1&quot;B2LA\!B&amp;N=+8CV&amp;[7@P1&lt;\kcZtf^&lt;1nR7\Q5C^a745%XZI&quot;-UNc/&quot;Pl7r=e=qWY0#d=GFQ4%HU5eLM:-\<span class="pl-c2"></span>%NVpT\&#39;Cimb_J/9POm$&gt;%qYmVo[?$JPr;Dkd=:pO@IfR?F2QLn9**^.2/:QY[n)4Vk\-e5S9=o1ZR6.&#39;7G&amp;o34^+]d3bD\DeG92%E<span class="pl-c2"></span>%l+mN&#39;MJSDF;Rc-[IL&amp;G/2c/;U\CgR&quot;@V&amp;$sJR2\Qp^_#&lt;:?_]Kbp,uCeCj`d&amp;V&#39;4SKko%crsA9rC_TD^^K0QZ#9:bP%K-&quot;8h%/&gt;G<span class="pl-c2"></span>%&lt;-&quot;`nq\X7-TUZ\.*8^0_:dAQg9@_R\,,k*Bk&quot;/j2$I(k(UXP3DnCY2jper/fY:Z(gI9#BsH&#39;(/hV0udB%ujRY3-[.V?iuDS4\I0E<span class="pl-c2"></span>%LUa&quot;rp?hg.k`qtP09R4M7#_GqNiMPcm+2l(AK7UT3W;cG0s_?],\#$&amp;7Q&#39;&quot;(hYq]ulrSr6SDT8G)iCh^5MqDgdNN/mbef*UOe_VS<span class="pl-c2"></span>%`LrJVFY-l#0;nWS#OL1&amp;(&lt;P=9CIbE;9.XqY0&quot;MB!AAu&lt;2B&lt;NmaXG)Y#hAAEch-Wm7`AP2WK#`2&amp;cO6J_pF#`7BMV+Z&gt;4dAZ:XFKX<span class="pl-c2"></span>%GngBBG?qis83esp!DmMSQ7B6h_D!Rih_67&#39;eo&amp;&quot;]QQFN@)oBL:f/WOSCOq[P&amp;G2?m2?e1_3&lt;Z5eA),/)mH2Z/a!N$q(BMDJO@Ka^<span class="pl-c2"></span>%Nn&quot;d_rSF`RV1Q^GXnHpI@&gt;F%;i(];YG31fiWJpH#pZoGS=@J1;n$d?fkC8fY[](N/]I9E&quot;iA)fpA9X&amp;b^FdT+i=V1rC7@^ji3k]k<span class="pl-c2"></span>%,Tt_le4dY:QL/PbRuV,,`90Z\PE:80!7qle8&quot;YG&gt;f@E(bf&lt;-6r4ehalIu[,oVik!&quot;HJ&gt;DhF:nd6`/843]k?&lt;G(7%F&quot;kifsd:[,*R<span class="pl-c2"></span>%&#39;Y*DO(7M/&quot;%2a51DT&amp;_!EQ5k8.&amp;FNXTIO+L(l,J::Qd\uXMFA[ge,LH`AN_7j*%ce_fC&amp;6Ss-h&quot;QDO&lt;@#nLQO,+)\:c_k5W`/Fss<span class="pl-c2"></span>%GNf=&quot;Z-k9@mtI1Mgb^6&gt;Fp8&gt;#b]@,&gt;,YkAH*e=rHD&quot;)e6;r&amp;?WJA0K4nLN5.al#jE:X51lgOhV&gt;j9?jL!UH&gt;Z\&lt;0QV]!aE:*TCF&#39;<span class="pl-c2"></span>%6[?i3l-ph&lt;L9,)K/sJ\gOk)&amp;:oTY@q(F&amp;gF/tWsM&lt;&quot;9&quot;`H-]s\dU#2@q,j:O[Ut&lt;k^EO9QB4ql00](&gt;t.Z(5OlE#;SG)*kLq!![,<span class="pl-c2"></span>%!lKddLobuSIL&gt;@Q(p($3V(juG)lSW0;5&amp;Fq?S&amp;&lt;&lt;mXMBm0&#39;X3AUb;U[\&amp;^81C1K?F-?Y0Kj](D&#39;qhdH\Z-m5nbo_O2&amp;r6;j&lt;e&gt;tX<span class="pl-c2"></span>%&amp;OTt:%!b&lt;%S@F2?8_6IObuq\3LPq9WKF&#39;&#39;0P$Vc&amp;WMrX-,VK1MW)X@+8lkF4m8&gt;.o3V&amp;V!RCr_0#ONSV;#:.Q,(h,8f@joNN^?JU<span class="pl-c2"></span>%W9O+1:jN&#39;jkHP+9&#39;Kdh6[oup9&#39;i&#39;r7L1bP&lt;5]=m_,;N*FOJS&quot;^*T0W&#39;EZN_&quot;8\)se^jEVBa&lt;gos1t:mrYb&#39;uSZE\&amp;Z`9D:HQh,5E<span class="pl-c2"></span>%97eU0&quot;s(c=k&amp;JP3/#.YBOA-7G:DVQkagId0-H&amp;Q:[9#\egSm1SIN#0c79MC:(uifR[N9EiDB&lt;+m&#39;8.(&amp;K)u5qYPf=YS&gt;SAFb&quot;Hi,<span class="pl-c2"></span>%*GS7eHi9(-A0cEDLg77Y[1Dg6fioqB!,&quot;OZ#2o1Y2qO%C6f..rl*17U?sf8&lt;q[VODkJ/`52EV$fILF7(ZoV&lt;a=,)\$0Y.BV7m+X8<span class="pl-c2"></span>%0ceONB&#39;f-1&#39;:l?Nb_i6I5=\8qXuqVL``T6#^++DY#&amp;@#9L&quot;9AZ`M7=3jD;1bFdQu*n#%l@UK-B1bm&lt;H2G_Z,ZQs\X[8:#erbrlI_<span class="pl-c2"></span>%ASi4$9;;M&lt;%##;Dd`%MiVMnAJ&amp;VL;kmnX!)7W)$ERQ[Ae`e&gt;Q9_BLcj(A-jtDXtpF/eLN@G(2*Ud,&quot;9io9Dj0f7)U&lt;j,7P[-.k79<span class="pl-c2"></span>%FCt&lt;,S7+X9J\eYepb%NE&amp;J,RXcM.sK8FJee]7\`4`jfJQ`NII+b#;H$rE@?3=OPkN\7TPhd&quot;1_Un&lt;RQ$A\;&amp;*r-IqOPn,bD77$90<span class="pl-c2"></span>%Sl%.jQ33&gt;h=g\kJk(6.&amp;c`Y.Y251)q#Y#BkQk]lp&quot;&quot;%-gCI=ZBlanOr!RL:iZ1j5*+F_;3WcRi&lt;F$*N&amp;.1?@H_T49&amp;Xq%jH1Lp,+<span class="pl-c2"></span>%bNTLa0V!C/FHG5nGs:L-0&lt;:+SVL=$*JPE;PppfWNG`C!Hq^#g):*+!TS@oD&#39;ghBM^3::Q=/^1EkP^XU4Wc_[\&amp;cbC5A.kuA&quot;L=L5<span class="pl-c2"></span>%HgpNgD0^nrRsd0`[0F\4N`%foX6;ou^qB!qG8T&lt;kE%!orPJOTjas),0.Ob&lt;]ReT%GN..FNf80J:4FrlK?,p%OHnManpuXs$C6Ppj<span class="pl-c2"></span>%WB.e9.K\;l;,(Rg&amp;Tt&quot;4,;:%FCD&#39;1j]lKMK5N\qUO7e8;[MJ1ZI+boOFs)3Lhpkh13Js\4PVBaT&quot;=:M7qO4\4PAA!3)=;UX-]Kun<span class="pl-c2"></span>%@HPD-l.nOo!a&#39;%CLq+CkAb?1&quot;Q;o\Ydt0gl%Fi[`&quot;_ueN4RTT_dpuj0ESt^M9&quot;)n-IDja^\2=&quot;#EJJGONrLe&lt;p,\o4&quot;BN@uAiB.=<span class="pl-c2"></span>%3!:*4jB3Z65g&amp;^$B$d9_Q&lt;%h&#39;&lt;YU@s[O&quot;]!/M976BRTMTPmCa3p4ML&amp;T\,X$&amp;a,GmV4^EX&lt;&gt;:pTVBFi-[b&#39;Z!-Fj:E6^/le&#39;)&quot;4k<span class="pl-c2"></span>%kkTf1&quot;9Wp*&lt;fNiW;&quot;NZ;M[%raH0ZaJ$&gt;?SLX4Pd?cJhS3!5QaP+T?8if:r?*.G-+fFRccpRJ9t#ETC@PT;[u1!)jT&quot;q6^_t3+ClL<span class="pl-c2"></span>%;$fE48^V=MIPq49q^JegN;2u6%PY8j*V5\L6J4-&amp;KgV`DNq5aumn)OC6dmt*k/InI(!\Od`1bgED%d&quot;#V7l;Wf@;/7L=aBRO&amp;.ti<span class="pl-c2"></span>%dNgOQ=IrQeP+HU/CL;.8qfQq8Mmp]F*gI8?Yu+J1?G_]Qe,q,.ll\,IJ/o@bgc(X**:$/JJ%7\0Qa[/T+CjPWnO-4kr,`/qU;3q4<span class="pl-c2"></span>%r*$`4KIaS[V1M.O[1(a/=jOFCktggok$D,P$i&gt;2&gt;QFpPq0N$ao%@S_r,&amp;FY+MkmQb]_j4%ee$Z7kM2*=mWMpj=9VAV[n-_N.Tqtt<span class="pl-c2"></span>%&quot;B[HM&gt;j(&amp;H!8ga[oCIK#a1&quot;/@4)8tjJXt[r7gat1V=AY+,T+Nsh5)K^h&amp;VjQ\)Vd[\&quot;#AW)F]$ZG[_[EM3TRB3Q&amp;9CQ66uAS61f&#39;<span class="pl-c2"></span>%&#39;-+(N&#39;uqs7`l)#B58PE)S_jQjn65]&quot;SBa\0Md!XJ4[&amp;jrgJt:`/2N!f.\2N6DLOLa-gHZ:b@a/mTa31J14l7@iE)8&amp;4^/CdFjR3V<span class="pl-c2"></span>%7u^n#MNh&lt;QKfM)a$]&amp;(_:?E4&#39;&#39;3na%o*O;tRUPUj&lt;&#39;WWNP&#39;u?Yj;C^L5*,Vtg]rdE-qZe@&lt;,#=K&#39;TWklT*eCjB*f&#39;^3?u?k3268-<span class="pl-c2"></span>%F/q27qm7ld&gt;S;Vu&gt;e&lt;G1UHZk55,p3)J=DI`l\72X:1P77a;K.kM/f&gt;Cj+Z$!9dA6d(quH^N%;&quot;aTs.VGVuaB&lt;Xo$$_3&amp;L]=bgQA6<span class="pl-c2"></span>%$niFRJK`Wc\I4(kD6NM1I[cIH1T,&quot;sPboPDTBu1pKJ[cA^^($-DjrosQbOn/]BAi)&gt;rF`]B%.N`Nl5]eSmR^&amp;s#&quot;*bg`b;(hW&#39;3p<span class="pl-c2"></span>%4a7&#39;@Cr/Z&quot;L4!3eK\9GrZl/EA7Cqo,&quot;h\R(JC/,=3&quot;C-Wp=jJnd+cQ.j@XI[%FIDuAI50h9bkuC(lnQ&quot;78C^n4BMJR66*Jn3sh$]<span class="pl-c2"></span>%nom&lt;]MEX.]Rk\\trQr[k(hV/pZJX]Um#Yh&lt;$el:0CukO.=&lt;[a99=#1(&quot;r-NLMDGtck3kmoR:Sdu8@iA_5^M2OWrt.*J%!O[C4)UP<span class="pl-c2"></span>%N$qnW$J).eH#-+4!6286r)f_=0X,!KWe57-F&lt;J*%E;/A2=BjuE&amp;U&#39;Uh&quot;,dJ$M&quot;jBE-D&amp;e5\&amp;)\3&gt;2$oS5RLE*Mcrn/?ipGqFh-qU<span class="pl-c2"></span>%*JO;,\J&gt;a;*f:\[$KQ;&amp;gB.0e]Cqp(&quot;bT/(J2&#39;-%JgH3OkWFd&#39;.D*d&quot;h\6JpXA.iASCWSC(eN7?gd%4$8&quot;dmGDcQf3k3&#39;/-!WinO<span class="pl-c2"></span>%A&quot;38,NYKoGl&amp;+?I.pZd8mE&amp;@oGk`TbR&#39;PLGc[KW&#39;&quot;*5KZDSf:TF!dC&quot;\p+m[LF[u\f2dJ;*X[/DQH4hPW*&#39;sS&amp;QA&quot;Zj\Kuk&#39;U90:<span class="pl-c2"></span>%:%b.7M-LlbU&gt;/E&#39;C+=8nW$fb)k@@X-%0&gt;F=Q&amp;4A76LHOO&amp;IL?oJt&#39;fb5OHJ*LJmk6`7XbMX+[gbFEWLLE##?K/n%P(/&quot;HHa]?kPQ<span class="pl-c2"></span>%3nL;rjsgp3&#39;WkTC&lt;!hL0)nNinC+H/VL1m)X3tnDWeu+0t5l?&#39;\.dM4[\&lt;Oe;EiW!LHr:BG:Jt+Z;:Khn6n6E0j8q\qBjA:&lt;P)]!&quot;<span class="pl-c2"></span>%aKcBX_#RaaF-qS+F:`I[B,-&#39;TS88)I=^n5RPSB]Iq,I#U+e&gt;#%T^,aME#,F/@WK&amp;Nc$Er?h!Nr&lt;GLNBY2ACR7dCufb!rQV(Z6&#39;im<span class="pl-c2"></span>%c\GMXp&amp;qXp3H$D5m]spUpfIob7WSkK%JO&gt;&#39;I&amp;M@`N-IT?Y*?`8RIYL(*U3&amp;AaoU]OYN&amp;q&gt;q&quot;pbBU]iT]2;2/idXk]S)n8/@(FU56<span class="pl-c2"></span>%D[soR6sm^[I0/&lt;*f(TC+Ackhp*pRfJ8R*68SBN0l^(Y&lt;p@8-Zr7!G#$,RpR:$+;j6#&quot;Z&amp;j%2Fn=F^UBjRZ@A&#39;l#LCH\&lt;9&amp;KJ;Wi.<span class="pl-c2"></span>%SnoMWgnj:;(i-_#6?0+7e(ToMW9Dgrp;F&#39;c)h3o#)b9P)ofSH=I.&quot;:&#39;?&quot;[lSDW=tu@mBVb%cu54AjT%(RU0l/8[V/Ga!,iR#?Sn5<span class="pl-c2"></span>%ZNP/Cl#pE\c6d@@/-9Ydq#_lk#-q53iHQ60S6=0T`UB^X$Z&lt;\H@5Ke\YrqZ=+\e7Ie\&gt;O\oPk[&amp;s$-Z#qVD_7Lh?PW[QWea`l&lt;TN<span class="pl-c2"></span>%@poCrg3Bb$V^T6HGG-&#39;/le5&amp;G=eD0pZ)37])1+p\m&#39;%&gt;X&lt;*bub\!&quot;YF?3AP:_cbU+N:($Q]DE0GY[h=I;AJf!B)=KN+a]k&lt;:mXg9<span class="pl-c2"></span>%;)]BS1$^#6l&gt;7$!.EHfZLChJ^LrcbNMd9D,^+FeR\!u&amp;=W8Dkt#9i,;`b1-jC/C1uO/kb(K2&lt;Y&#39;[q,sSLGlcQ1N\O[Y8_8@UW&lt;Q9<span class="pl-c2"></span>%bM3T:&amp;1P&gt;8LQoVIXkGt;DsU!)31eglFmaEH17M&quot;Q(p]sNP&lt;S71A=\!O?W4K?R&lt;`Wa&#39;?1C94^H&#39;mEXjrV9#oI(rI2gH,Ugco&gt;3mE*<span class="pl-c2"></span>%lc&lt;I6cc_;(o-Dp5*C_tCON.IS2b7Icb!R*Lb$gNM2MC?9&amp;WN&gt;h=&amp;T4$GU=&#39;MhS:J&#39;#g8*SNEFK[BLc9\nYod-*h4.nfMpOGoF4&quot;3<span class="pl-c2"></span>%YQ;r&#39;/da.B1(GO`r&#39;J4&quot;Im6qt98n._-In8-N&gt;Z)Pi5H&#39;A^OO0QFTTT&quot;`i!l%&amp;I-mIIooA:&amp;Mi&#39;&lt;Gs#OLg=Mt?Br/,lX/iAM47fZl<span class="pl-c2"></span>%)`Wadai:gZJ`h&gt;]ECm[JBBe[:TgHjerN%&gt;f]#$]%o*soFmJQ0J&#39;-*p-g&lt;bcc:1ap[hWr&amp;ZWQVf!i-SNcP&lt;e$f.)(^h#46:Z%TQuW<span class="pl-c2"></span>%Y&gt;l$aE9Q=+ZiglS-TAn4o`A5&quot;]R9:p&amp;3AMc1(02c&lt;UbN2FK\E&gt;C_k!o:Ek[4M.&gt;uHopHo(Z4lEsLST3DOViSu&quot;Mso^h8MgCg2L9-<span class="pl-c2"></span>%.g$,X`Nl&lt;Z$/KnJk3ZK=_-C[&gt;KUG]&quot;W\(h9&lt;I?&#39;%`Y;-[]oG[4lM+V,S@A1(nEba:[p&gt;p@?gd^?/T#[f&gt;&lt;LNqk\LJW`oK]k@,&amp;)c<span class="pl-c2"></span>%C]U&lt;uK;5c]/M[o,&gt;-4,&#39;Z2ceAj@iaJ=loM^C=:8&#39;Y]HUfZ5Y7XGo@tED%@^^.&quot;c!dN&quot;&quot;T+;3;nhk3AS[nZi0b-_&quot;_m-l5Pl_N1J=<span class="pl-c2"></span>%4*&#39;sj\Ve&quot;nkhZn^!VYr:5sts.&#39;cIYan=TfC&gt;,,&gt;C^@[r/P&amp;(C&gt;[J4&amp;@/qHnk&gt;RS(7_^`Z&#39;Y2UL56bVW`EPf5i+Pj(V(BugliPVM1<span class="pl-c2"></span>%k3#h@&gt;pW:6)&#39;OGsLH;#BA&lt;&gt;&amp;RLo6C;da:=&lt;/5]X[G,s!n20cK!%L^r&amp;E[&quot;V:R?LRAUdJaALoi&#39;b_2YUMBoDP&#39;2D&gt;YM8K02V0Y@i6<span class="pl-c2"></span>%@-s6t&quot;]\n$c!Ju7$SaPt5A.6L;gEq&quot;W;C3Qg!&quot;DdRS`?(J%Po.K9*N;h`^MF6DBkC=TnO_R)q]:N)R4L%A\sXDEFD=dZR.=Fpt[m<span class="pl-c2"></span>%Y2fVl@n%gtkn6/&amp;R*7ZP$NMNU8MUl3`usS:(&#39;&gt;\Bf`&gt;%f3@=R+!OD:gOGjSmoXZ&amp;rIe@*LEYn`7l_m6&#39;C&lt;tV[`BE$R4&amp;=o*QOj9p<span class="pl-c2"></span>%&lt;f9eua;)CN,2WocE?K4&quot;[Z&quot;jHW[,r*&amp;OHE9om!R:(YKT=d2QqebReO;%[#@JL*&amp;I:QG]#,l\N$\h\1BEKf6Ou6YY[KZuX&#39;Oc%(,&lt;<span class="pl-c2"></span>%&quot;(8RRdZH&#39;b1(cXQ/+f2a+#&#39;li3%=,\`fUMQQ-(&#39;OKSXe!&amp;c&amp;tR32,^NSFAGCDI_sN:BX&quot;FBIt/?RNDt.fddd6#$$/n^@^i@HLYjS<span class="pl-c2"></span>%PE:ihD_%$&gt;PL);$*C&lt;Ai4]X[8o9TBP/!X]9&lt;R4bQ5pK*Lcfoi6pu87&lt;]n.^!a[;bWWOVs/0CD:]LSU8Xi?ElU+gVa3Ep;pF=[*J5<span class="pl-c2"></span>%bDATSj-LA3@La&amp;O]-&#39;`&gt;J:@b&#39;G=&quot;6nT[%_S6jpL+mE.mlX&lt;?.:JS`9dQD`XsbSH&amp;nkX%RC\S4B7#XV&quot;8]:[7[ZbWME\]#B9PVR!i<span class="pl-c2"></span>%R&gt;rdbhTXs(POYsffJY#l/7,rHOP/SI9Wo%;[gJ\eR@s4Cg]t/m2&#39;iKH!=KbeQA8b^oe,^Je+&#39;hrp#^&#39;YIdL3JLL&quot;l2Q2s7&#39;`0*rU<span class="pl-c2"></span>%$^q7)j`NoRoCiNnX&quot;m5!@V-WcIWlK@RZZrLcQ&gt;+uRr-L_g+&quot;8RhbS^SH%Jn&gt;/lHsT&amp;3JH]kP3Sm&gt;64FLphbp]Pn07Sd4iIAJ;B+R<span class="pl-c2"></span>%U?&quot;oUN0n+B=!C-&lt;&amp;FjEAV^MqHm$-8h+_%c4L&gt;GCtX_#$6VuYokl%2DDaF-Aj@LKRp&lt;j2r.A(M@7d6``q%ENI!+G-Nkkitu$s/:+F<span class="pl-c2"></span>%.B@?upX(J0&gt;\)59m+67):O_#P5s4+F/hIZ&amp;8LCU_/VX%Y+7]o&quot;E&amp;p@2b@Q1.$*_@kN&#39;3L;AFCRj^foZgr^6ik&#39;gh:e?]!CP$&amp;2,V<span class="pl-c2"></span>%+aRjrRRU(R3GJpX&gt;uaQ=O6DDdI1;&#39;CW@#NcAPp=.):_5+lkU#E@:Zn&lt;G!&quot;K=,Zr]iX:L\Tg?;DZ:G_Y/IJ&quot;a.O&#39;SL^+5cmD7fmjS<span class="pl-c2"></span>%U6DFM?gr&gt;N&lt;rE]HkLRGU`ffK@C&#39;$*bB2T1td=!h$98n0A&lt;:s!:2\G`eN1S&amp;,F/3aJoT&gt;C.ob)u&#39;M0%=OD]*6lnShQ2j&gt;0&lt;UKk*dI<span class="pl-c2"></span>%(X&#39;^iY;=&lt;]Vp\RYCjOB0+dGEB6.;9%,Dj_NLsi9^mIbc&amp;aOqWAI8&gt;^+2G#&#39;(-G&lt;Kb^\M&quot;penSP!aXQ0L353;58&lt;]s$5P/\.A)N)S<span class="pl-c2"></span>%Y;RN1p0\.-Y&amp;C7^_@0=\HXU;;E`XqjaIOF&gt;$hk-n#W\&#39;2OP^$FRtp&amp;,VeepLe&quot;.2OYVc^hp&gt;OI5+[KXQ:P?X`K7sB*[P1V^JQE3k<span class="pl-c2"></span>%*r_ZrDHS@#Q3&amp;@.d,K^5bKMa0]s^Yqb5!o?m8[$a+31N`STci1/ofSAr/4MM&amp;dp??5)bu-G3OX_I?jDKKUGXSQ3&gt;9e2u$(3%p`kl<span class="pl-c2"></span>%&amp;trf?&gt;LD_5!3$@W[#Pjc\ceM3j^AO4cWI,WAr*I6H&quot;]S[ecAb1oncP3@2F[hf5`=Hr&amp;O&#39;]]=]j#)l^3@D8DsP\0cE)__j$sTFeiD<span class="pl-c2"></span>%lh(]LJ.tHW)9*ckqE9XQ=-)XZ&amp;&quot;%FI+t@%p&gt;Wgl$ClL&#39;P2So&gt;s&#39;tV*Lk=KpF68?]Cgf&amp;OK0?3J8o`V4CF(j8kW/ht*e&amp;W=Z/mmMj<span class="pl-c2"></span>%h5$m)eS)GlT=m1#P3Y*Q7XkI&lt;6[s(YkqKnOHe%d:&amp;eo3:,E%naj]CD[-jG;N3A5$W1BYelYJ6@GP?&quot;OXoDk+@D3dVS5^&amp;]%Za+UI<span class="pl-c2"></span>%&#39;+QHqP&lt;-M`ZcGO+E/X0h&gt;d1C8KkMql.gOjN%B-6no28ZA)U1?)8m4k=$sM8=,(B_`n3mmgX8qec%?#ChQEifE!+^Goo+B3&#39;LPJ3(<span class="pl-c2"></span>%N99K**&amp;1[69%ds7)fdXL=imIk1_.U^H^ns`*FqfikC_$;i^iIb=O+-CFTdn6&gt;.@=fCa)WF:[*5d,HR3u7ZKTQ41$T\N6#juRfN&lt;O<span class="pl-c2"></span>%RZW&amp;`W&lt;)WH*S_q5r3TteK`#@VHS(udiD,0De\RoAdHhbS&quot;A&quot;N&lt;m(/&amp;cX\mBD(9;7CQ%9rr#7b+8A@$#)iR%PQkFT#=&lt;2D&lt;SJkWam<span class="pl-c2"></span>%(:KY_QZm:Y4\2=,IEl`=OLq7k&quot;Dj$.5.MP4*+o*Y/0:^fPqnA@U/8&quot;\72)O$&lt;$PgTLT1iLl]&amp;pKqT5;0Q;I]dHK_)9&quot;?:FL]\Qpf<span class="pl-c2"></span>%%&gt;M?K#XC\)S8(IN?iim1(Q;UE@CWHT4OgZ3e]l#&gt;)ZOFV&quot;Tr!b=9Xcko+Q6&#39;-C-ff#f$umO!fJ%89q_&amp;N+C2N5a!F!]#)\]==\k.<span class="pl-c2"></span>%&amp;6;XdK#&gt;C@au+;h&amp;&lt;\!q&gt;(&lt;WBgDZ^HV$V+^,%DMSfLZF6o,]5O&lt;SYV&#39;F&lt;qdp8S-E3^l6O&lt;AWHE(,gAR^N`*fUQ6%o!*^+TFe`JV&lt;<span class="pl-c2"></span>%L?&amp;h@iE_WTlph:2)!EG\gu0[(DX5m]L&gt;Gi,%4smo_OFie[L!4p*5j]UpI[gPrP*u_2(^k9G9Q]*@[2\ZR=PqB;[&#39;(G64/8W;)$Vd<span class="pl-c2"></span>%&#39;el*oF&gt;3]Y,gp#?O]e!da?]hG%fm?R&quot;:\j&amp;OjRgU\+#Alk2aZiP/5`6,WFn^BqiZ]i%3k*Q)k;I49Er^!!Lg$(?:B=D2VMjkpt]H<span class="pl-c2"></span>%@j+FFY&quot;`L;=jI)W3Cp*&quot;pq!-L:(3&gt;QJu)s#&gt;&lt;:PkeL?YH*n`&#39;+a8X0[(RFRLLubt$?8VLK_s=p]1oF1V&quot;!#(B&lt;$7J3hk:ZA&amp;p]1C<span class="pl-c2"></span>%C=,oCRXg=X4WP:$aCd,ubVFcU3FBH;C&gt;_6FM=_U?^WT0@IP&lt;MCXquST.OH.b0dCXjYj#-6,6nKS[_YbVX&amp;a=.,&amp;7&gt;upm*gV4rGTV<span class="pl-c2"></span>%N8IqB%bK&#39;M#8X6D&#39;Ai5m@$gDfgRS1DeSl\j:eRksO8&lt;&gt;U(t&quot;iJ\dU&amp;KPZ3Q?bEePVMr\(.fqf06I-)plhAsjKV!SQPi5l&gt;&amp;CB^bR<span class="pl-c2"></span>%P!-ZES?,1W*fUM;TXiZnRN8n/WS3,#L)%4OBt+Qbqh&gt;RjAh\C&amp;&#39;=W#1?.:Wf?6i^o&quot;]cM4!C]\+_$Z=2m7p,Ob`inH;P&lt;eCqjD,4<span class="pl-c2"></span>%-ac7/qalN477lWE&quot;O/$B3Pd(SgjtuN_j@jS6*\Zj5lSul(A!kr:MZbT&gt;^$UfUK+T[&#39;JBoFSJ4RmKmBIO:/FW*bKp6+B\G!g(;ekH<span class="pl-c2"></span>%\r7UifYUcgJ9aGNU&#39;i#o&amp;O]&quot;lqoPXTg^+Ii)MbMqifS&#39;pai6=)L\&lt;KDTK)NqBdT]NmPUdu\$/&gt;8\S/&#39;V%R*LQal1f-&lt;4Tm)jBtm&lt;<span class="pl-c2"></span>%MdfiIe9l;=@&quot;d*U&#39;\Xd6K,os;,R=seMk?e.!h4&amp;MYC&amp;@^UQ&amp;!#)-o+cf)V&lt;&amp;=8g^F&#39;e3\\eXU0)Z!_T5S.--f8W+h&gt;D\tK$O!]B6<span class="pl-c2"></span>%a@TL&amp;MBX\)$AB+o6[^&quot;N_nkb7=Np%(YRb91U_5MG``U6Eb`]&amp;48&amp;dc&lt;?b8o!6Xi26D42n4)CLu?.DqEX&amp;/ij*7NK[OlQ,fI4.%d,<span class="pl-c2"></span>%&gt;=Q+f?PDcA;:L_uJfT^!i&amp;,\jJsWpQK:]&gt;)*!^l(#\4pKfcV`]8/l#;Z\&lt;u+$M(&amp;BYX1*#46ji.,f=YjS1rW%lWV+LBga64,&#39;%+N<span class="pl-c2"></span>%dMsPBkWp;&#39;ep2bmbV?2$ho4Fpp@45Ni:7-q!bs^SI^r(aIVl^t1@uOqKRDe)eF?*ORVRFR)j2Ht`)L[oJ&lt;Rp3,X@X88eSl,\O9\+<span class="pl-c2"></span>%b&quot;b]#r,R-DPV*f@)3^lr60SGi.nP-9:q?YXr$Vc@ZgCMppU6H,7I/K2.i;\aaa&gt;US1EAe;&gt;;Cm:&gt;&gt;ERt#hI8hBrm-_SXQa&quot;@fl+q<span class="pl-c2"></span>%_L290.a/^PR?m!XYh@ks&quot;eQfcoc6&quot;Rki;m!3]SfPcP^@NZk1He&gt;n?iCLb@a=B&quot;?U5-Ya\GTU`9=&quot;&amp;a(eZ&#39;(&quot;F[fU[pgDG9:-#jg%<span class="pl-c2"></span>%[92-P&lt;&gt;&#39;5m@&amp;2in%2J&gt;)(ll%_f\M84=I.Z#&#39;,KVN(Gd]K.j`*@b,XQtK&gt;.G.lqm%7bs5MO4M/hJ5#(j0\E#`]e/4;&#39;MgYmD+Ag9*<span class="pl-c2"></span>%`DWID8S]GI=J2,iAtt&gt;?%IJiRAX&gt;)KDeG;-@_4a%,$_W]G2/SMB,4FBFK9]cA&quot;Kd,!Rat+rf=.]DKl=&lt;!Hoci863[\Yg-kR=?)+6<span class="pl-c2"></span>%&lt;pK#?^=C#W18P9k:;enQ#8OkLC,**&quot;LuX=dr)/3QW+!3C%Q&gt;?W2\N_7OU99S&lt;n3/+X*&amp;.#W4m1Z5&quot;V&quot;($7RoBQqP@i^ae6!3LgOe<span class="pl-c2"></span>%d-&gt;?W/0&amp;2aj6mdsReJYQ&amp;*=R+MqDLlTbO&#39;W.Ai3%(+a_S?JQ;hjpP5:N-n,7dVtY5Utug%D$P\OJK=NJIf@T$TjW8.QKC:YGG;Et<span class="pl-c2"></span>%[NdD$T^o\QjuG16F$U4VMq`&#39;&amp;+ju^1Anq&amp;GKaSMdY&#39;f)h=IB:c8YqBTZRi&lt;Li?HRmGY*PmV^/5nU]V6mcu35$-iIZKNn-@?Y&quot;kCN<span class="pl-c2"></span>%K+Lmd(0X\s&lt;&quot;kAqfRPg$r?SH04&#39;&lt;iMq_KQ\7]6Yl0t5^&gt;#Plm1QkU2a+s=FJ:gMg7-.EJq@T&gt;9ZN+nZS)Du&#39;+KZR;Gpp]0TrR\if<span class="pl-c2"></span>%#%*K::5.&lt;D^9g^j=`g_Ilc)a+DDdF7T&amp;]_,6Tc!@A2d&#39;dRLGHEq&amp;GRl/Lk@EXhuhN)t&amp;!aag,)u56r)L]+iAeX&quot;@c/%u?%7!8l`(<span class="pl-c2"></span>%f&quot;e?/UNh!NSGn921JAr,&quot;?%&gt;jV%N&amp;$B\%M^S!1O^V?p1WHOc7qFb,TaR&amp;D8D6ilFi5L%ZAS-GHC&quot;;Q10A3q_lCp]]B\H7)%p+C)j<span class="pl-c2"></span>%-(dDW/@19GE3EK)(n`&amp;-gOhKb/&#39;qu(E21]U?@k5m(Wd0uj$3f?&amp;lU`$,bJ#X\SA9mE&quot;*5U7h&quot;Bmr#9LqPd-ZuiH+P6o6=22!]X,5<span class="pl-c2"></span>%=9rAo`TQ?!fm-P)dC&#39;Fa[ef^Yq&gt;&quot;Pc*dlir&gt;p^O31++XT#&amp;&amp;g;&amp;XRa9+rS]@q$%&gt;t$-fDEhL7$rmU)6pmQh-;0K9]n1\D;%6B-`M<span class="pl-c2"></span>%QX&#39;tBnJ.g/PX*?#@2p&lt;nO$eB&gt;jK7!P&quot;raS2h\@?hX-=E$DSt`j%$T^rm.7.pC7GlM#cm&#39;9%(&lt;KG#c^WH$P!n0l@&lt;[jMn*K#s5!/\<span class="pl-c2"></span>%1odD6lH1mXB&lt;pAo4##8S;oEYsL&quot;ZLe9VG-.&quot;PP%\.-@P&#39;3?^q=&gt;2^dClU.kWJC4,&#39;RBKs%_B[3fe^n22R5&#39;&gt;phT1-V[hratY#/:D<span class="pl-c2"></span>%!C@qO-2R_W+!hI6\@&amp;jB8V`@pZd^GhYpg\iQ&lt;\?K^Udm:_B(_s;)*_\F;5&gt;L@bN!qr&amp;-c5b;J&lt;+/^e%E&quot;NX&amp;bZ&amp;8\-AjR!X=6k&amp;u<span class="pl-c2"></span>%7+fn+\d&#39;4-,r(6g`F1J-htO/U,&lt;bUWG^C_]PkSaBGts373B)ll0d.&gt;Io?*0&quot;iOIWnKD/c-&quot;$5Y:_&lt;tX2+C,FIVi*)WR]3rg2hF%D<span class="pl-c2"></span>%RZQ&amp;hmCS,Ga&#39;ndJ!ch\Ta-HJA=ZZ&gt;N#!R&amp;VEl%*^$\4\&amp;OE\K&amp;\OII&amp;iAa)&gt;S^mX7*jCT.V9tH[Z85e+&quot;AireJ-kX@&amp;Q\R8e2U4&gt;<span class="pl-c2"></span>%aoi4D@8Xm7R&gt;F%2dBXE=B6(4laNp&gt;-oM_:Hi;K?()J.2gNgdQ/CP/Ah]2&quot;_Ph^BhGrnirrC&quot;*R]@XB774(EAo)j[05aFJdsG.^a&quot;<span class="pl-c2"></span>%ciV8Nb3h+g95m*CW!?7(9g;g]V&amp;,31#F55QXKC2d$&quot;uL=)&gt;+fem;4Se(&gt;-FDU!T&lt;V2&gt;&quot;7TWKe[bqoQh&#39;=U&amp;VoCDV;*Cg/_p?)^a(<span class="pl-c2"></span>%lTE7#SLCSATTPKN*@MFnM75rWM;d+@XN&quot;[*;4fnRXRT00AeR*6SZ3tLC?&quot;0c`kl=3hB3;FWl-Z5q%V)1,3(a!&gt;q$5c)70Mu&gt;Z;M\<span class="pl-c2"></span>%@C9hbS&lt;1s4bht_mSD&amp;(I&quot;GZhT$).T75JoHS&amp;FoFl]ba@J7;dtj%O$iRaoY!gNhA!&lt;I3,hG!_8;ueF7mgIQeSPQ&gt;&quot;=0deLO6&#39;H[[N<span class="pl-c2"></span>%(/SLa&#39;fRW_,0,BVAX09b2&quot;[70QQ6DXA7p^&quot;jNhKuXpc&amp;GT;4pnW6%c5i13maR/E@-gq]:@_Aa&#39;V(/^eK&quot;Lo9VB3FbVjVa&amp;D9V0!X<span class="pl-c2"></span>%Vc5WR=#Q=4Cgf4\8+V_@,;Wbq_UZ#hJRf_,W_+1l9AY=./)WBoF%C,&#39;G0iA&gt;%(+B=6N/MC1cM^P:&#39;m2561$hc#JET*0d]O.6&lt;P#9<span class="pl-c2"></span>%\^FW?pc:Mnip=9ZX9M05cAsP)Hf`HV2bg]b+&lt;@]L+b7O(FI!8+OsXh[Ct5\U^;(VkRd6`J[OGd*&quot;NIIXRn&lt;lD.)Cf&amp;P,T\XG_GaP<span class="pl-c2"></span>%&amp;m5^R\-uK&gt;W3n\WGEIr[&#39;oTBfX1&gt;8V9;,7aM&lt;OO]=\!%\iU&#39;iHRuj,&gt;#B&quot;25ZOonn(*_-k,1aeKT2omZgj3[^qqU\8:)5F(B;7X,<span class="pl-c2"></span>%Cc-l`!ZHKrr9lbu&quot;kWl&amp;#Pfo?7,$U!lf;p-M$_DlZ%Ab9!jR,KL0fZ1cmB&#39;NW0!Jhb/j$J23Wnm^^M:;e5t!YOMR\l6NAOsaPrn5<span class="pl-c2"></span>%M.s!;h%k9TPWifd/N$*K7o&gt;DpFg044YCh;!#o?P.=(i)&lt;&#39;[[\(WE+WZ+qKrj)]U\,,Y4Z^K=X&#39;JGKpJieRG&lt;G*4\gHKROHc,1l3I<span class="pl-c2"></span>%A6&#39;NQY_sE%ROY[+E3T&amp;ReZHB=ho(F&lt;F0LJ@U33/DW9JDs@cdFFK%;K_fL@d8&amp;];jL!*dj0_U&amp;^mhNQJ[,K\+NE4d2N]]Y.Y*E5n^<span class="pl-c2"></span>%`S&quot;[%JH9!i!ilW0+a(0&#39;9HBK_B\&quot;sm)3^ku&lt;\bmW[up*0M]Q&lt;@d;l+(R6Pps2gt]4BM=!=$trgkH]=WRPf_&lt;.ma.IdE+A+iR\,Hl<span class="pl-c2"></span>%5Rg;+&lt;BaY3)?a(lUneHi-&quot;1c*^DUn[G^Yp9ie;*DgA$%0&amp;S&quot;&lt;&lt;X*niT*Rbi-gKQa6Fqd!-[W(F:(^l*4,g&#39;,&lt;FuId0fZpK%&lt;?#,W<span class="pl-c2"></span>%,^LKq5lE5:XHIl;PPgL6*DNTu-uL9-@LH5e4,VQR&lt;]2dh&#39;-;2U!L$!S#id?1dZDSB_=jrg$`KW=0N*(NN%P&lt;Y#(^Hfc&#39;UoL./g$B<span class="pl-c2"></span>%l3]:[:f?]a&gt;i=mgdaB!);-u,m_&quot;CZL&#39;9u2^L&gt;*ou;GfoK3eV&quot;_\#nR0gU:]ma!Yp6D^2o&amp;k(!`=Ce&lt;&#39;t/.&lt;KG&gt;d?,?i8Tr&amp;&amp;`n@_<span class="pl-c2"></span>%2ZP(`b&#39;TAg4mPb;U(l^&#39;YE24V!g`:($NNrU+aNs@@:a5-!\N2c=Ut8?c+sfgWFMETp&amp;m6g2+gLDc,Fe8RQ5Ibk&lt;.HFb@o&lt;p^kBeg<span class="pl-c2"></span>%/2&#39;^:;9)6AlYnFA%hnhjNBIH?`&quot;`IYHk9,4Jsr],:P+ot!P=GeqeqcQDJQH:-sHt4n7WOpW4lXqKW`Lc!1[D=/6&quot;tVghK1`40D)P<span class="pl-c2"></span>%&lt;?W#LV@:\)0%6Q7&gt;T&#39;2&quot;qR9GT$jL?]2$souQ_Y1j!_kZ7f*,NZgs@KbO?&quot;O0(*g`I$uK@&quot;$7IRd-Z-T.&lt;H@?@L`dKc:IN_=X_&#39;*K<span class="pl-c2"></span>%Uenr/muCDW@(/-Z!&amp;k@AR0d&amp;@Y#(M%r@hG&amp;himcc=dY6i@PU;T)PmSc[+6ptdAnb:,kKXM3YW#e)U8L#U1d&quot;81h)nW]&#39;-AP+&gt;-R5<span class="pl-c2"></span>%U;F;cCGCfbd3]1F?JL+BOA.Sa.C9(.D\4m.lJTL&amp;a,02&gt;it&lt;V)\ul%jK/ZN&#39;WQF$Vqq`E\iFDmlq]*iQ[&quot;ZIME_0LQ[.K4#57I]X<span class="pl-c2"></span>%Qf3#&lt;!9O3iD$%#qr($.=1_NK&#39;m?DU)&lt;MMn-;$kV;B4%\gKp$EL4BYTVRYID(1Q&lt;hF&gt;+f4NnH*CWM&quot;h7N*_Wb3=@$D7?_77ed^FdL<span class="pl-c2"></span>%#Vi!)+h1aM!%p--9\4r&lt;,Xq\\gQemiN&lt;UB!OhbT^&gt;8X&amp;?Vmb8te*sJ5G!\*f@KKJV&gt;og\KYDoON\3cm&#39;.I8dR#o#&#39;M:(`4QP^l()<span class="pl-c2"></span>%&amp;Z*!XU(MuS[VMi\SA_pKhh1!h3Ja085o]/Ff_ufaUX&amp;^@Sl),]2&quot;,mYi0HG&quot;W)7u]7?9*)*O&#39;*cB^:UHp*fR^bbge9SD[^RdX\&#39;P<span class="pl-c2"></span>%^UNFT;/9l[QCDHU1c`B*`elSQ@g*/V70Jq]Xs[?a0S5:BSJ1.X!n[mARUllGPC^&quot;k-k!GMd3g*T&quot;9U.WBk5ZNqN);Ec^n&lt;Q$:[c;<span class="pl-c2"></span>%TKe!d/?+2ZlShQ75h)U+8s70Mf3kF&#39;EMua9ILM)Gq[&lt;uUB&lt;r&quot;M&quot;Oibc/KoTG(R^.G#X13Vh-.dH9&quot;DKHACYK.BQ*sKJQ[D\3jM`b<span class="pl-c2"></span>%ZJ\_O@8NDUa19#Y^sE@)M$X/3BS&amp;$9Y]OhM/IMePd9?\+=B;J^lY9mu[&quot;:1&lt;mGpNVW$%E/_j./c#s,!mSk=(YF^D(%b2#?X11q2k<span class="pl-c2"></span>%8W:[;P3X4R;[G@@b(j[l/\8RPQ`+/ea6iVqMr_\_Vnqn&quot;^P5Ys3dCdZdO%\&lt;_aQZqBFbFi3c&gt;a+P:08t4n;dP;*&#39;lALuYo7!(%ol<span class="pl-c2"></span>%L/ER&quot;27&gt;`8Bjj@I;&gt;%O0ApgWa%+0.\&quot;\K_R[C3oCM+[kN+fuSR_u?JYN\O&gt;e,GeM*qX=QF!WKT4/=ZJm?#DoX4b3jX7&gt;I$&#39;\1].;<span class="pl-c2"></span>%:&lt;B#;#BFTD-bV9%.A[4uN_3Q)W.5liE7.]nfS*I!Dl&gt;`heQ&quot;D&#39;XV&quot;i)Fk1&lt;1F(!\&quot;j(aV%Qu/@NAQrJZDHidLnY-&#39;D14850a3J/r<span class="pl-c2"></span>%*9t3D]?+X&quot;&lt;&quot;5dQ)m(YhZ6FBc-1c,2dQoVtcu`T.@W&#39;h&lt;&lt;Ido@c1j%.iX&#39;&gt;G$()CY];/Fu&gt;r$b.)S)]SXdthZ920&quot;l:8;?91@o)r<span class="pl-c2"></span>%=qU!!^@1&gt;f63Rulc#gSSaYHYL0S/\J5J.bXi(d&quot;AWt&#39;S@X,,AQJ_?@DRVGEpXh$?&#39;/sP7eJP:,L/khkdVHQoYauc%DhC:Nt$!F:*<span class="pl-c2"></span>%X2=TZX_tQLhPu)dWV\*)UtH6A&gt;[;F_&gt;rB&amp;pkF,-:@:_)JW[^k-X$H!VH1`EsX!LlTo67&gt;S&amp;;`m#&gt;0#G[4@eFDAP9R-`$H98^93ER<span class="pl-c2"></span>%Qr_3$C0d^:R4t;5&#39;&gt;08]nhVPJKX5E`$Wm^+;q,`&lt;0OalN[`HW;W[%-D:&lt;MG],,WDsZfq2Eh6JO(&quot;SUBc(\Z::U.Rui(hg)^O/tj+<span class="pl-c2"></span>%#]ACu/VnQ^Q]\:o)23(mY\G(EHk-reK&#39;OidOc=Io!bJqok&#39;Y#l;,&#39;RiUJ&lt;;&#39;nbUN=&amp;D&lt;&amp;kMn)SuG2q-#Wm.=j_TCN4;_&lt;AVM&lt;tut<span class="pl-c2"></span>%+LYl+nTD.%&quot;?\$MY&quot;&quot;R6@&lt;A_1.(D&#39;*NttBWRD]&gt;%JZB0:/`[aNJP%77fe&quot;$N^ge%^_VdGQ:mjq8X&amp;CcL9%dYE=Q9b?!U&amp;a06!+J$<span class="pl-c2"></span>%Rr=]p[2gk,6#3QbXY5\c7eUsEq21=MarO5blAn90Z4&#39;`MYWCf]ZI3D5&quot;pR,e^`YVH3ou0g.XsBS&amp;a9&lt;1Y8s!B9MsFq@U.&gt;?([m_u<span class="pl-c2"></span>%V?\#.H+E(F3M]4&amp;=9@KuRFIc1N^.E&#39;VBqUR:nn9#&quot;RlOn&quot;%MQaaQW8EKk=4W:Y[in&lt;&lt;NVnJ.9qs&lt;Pmdrh5:1-ifM$@2;]2]Ekb;j<span class="pl-c2"></span>%DQETP1Dj80,nVX.LN3uL;#N.0^02CMY5&lt;&#39;s().d&lt;0lKn[1$+]GIk^dA\467&amp;5%&amp;tpIRjk/?:a1oL[ttu(%ONNBO5?:iMtjZ(_@pB<span class="pl-c2"></span>%d597JF=-L]3CeK+Hp@_&quot;&#39;($J3^nQb&amp;N19@5m_]N&quot;bs:0%W3j)&gt;E_F&quot;uhO&amp;=JZ]@eO:pta*&lt;#V:K[EL.K]qO!Hd?95SGrK&amp;E#&gt;%kD<span class="pl-c2"></span>%9[O^4g73R,Ci2)5j9TNX&quot;#Et9&#39;KZF=cDO:0I@T;3gT&amp;=Ugq#Y9+0YM`#,e7S`m^13VIo3&lt;R=/69_WCZ*+\Xq&quot;e/]Y1A\MhLpFLb1<span class="pl-c2"></span>%dT329Y%J4[HB:Jq&gt;CZe@Oj4Y&#39;YRu&amp;U\PTk+p(.dh&quot;p8+r#hVbXPo8RnX&#39;uW0BJG&#39;.D0n[sAb3jk&lt;*MCf$]h:n)rki7.f)QA#-&#39;M$<span class="pl-c2"></span>%Td:h=IKlU$clM^s[oKil[#5]2_)%&#39;Q5Rlap\A/5X@HR)9&amp;n!&amp;o1sl#$:KEXpic(B@]g5.Uj2[8raTIh\EB3%Ppj7o3d;ilY)@9hS<span class="pl-c2"></span>%XotdhDZO4B3:^e+m\actV:7Vhdu)9YkL1lqNkl%[BrhmOVGS[f%lPb&quot;IVEag=8*&quot;&amp;,%QX1h&lt;4kB$aR5),AK70m]%3h!PP==9]ED)<span class="pl-c2"></span>%oYF[\]p3l@[MJU=&gt;!cGLka)17.9$;U%tYcHPDP5u62B119K&quot;a=)OV-BB_hX\oHlenl^&lt;?Q[NrO/LBH`F?@,6I/K;$TG61QZ(_k8`<span class="pl-c2"></span>%bP_dh):2r$7cqeqAg*2QjIY?/$V1g/WH3Ac&quot;*CGIlg.VEM#\&lt;&#39;g4\7s&quot;[cAQOVF(2,AAgS$&quot;*g5_Z\JELLgs.jYa[Wa&lt;O9SV$puK<span class="pl-c2"></span>%1Z:o6(ZVhFTr*Hke)[3@/G&amp;AU%cYHeI`J!X1R^tcf&amp;H&#39;?F[ARjR2UgG!daBE(,n1XRWqDgpma2kUWe^_).U&#39;L`&lt;&#39;.rL]58Z7D[BP<span class="pl-c2"></span>%S30]VHam4_&amp;l3N(O#hXs[c,a9K=-4;,0i#kSCNFaW[`sH&quot;OVp,7?^i].G+&gt;,(rSEnV&amp;hAS-&lt;BXtA&lt;o*$eRFYP*\#]C2===eKS;Cl<span class="pl-c2"></span>%/MqP\Pj]qD9LS-.]G.]t=k[8()`&#39;jSZE7G8F&gt;6lDo.&amp;_1c!oEN?VdK9cm6_D@7;LJ58%j4&gt;NF&lt;*;[%Mdnu#PZ41&gt;&amp;f9D&amp;g:XI&quot;5V<span class="pl-c2"></span>%d];WU(97j&lt;CM9HC=knZdi9qG)\^H+e_\1tQ3Q[10L&#39;&quot;JfOr5;W;)_R@CGqr:ZqZdDAaECSJ6[Q53Zpqh2cBuJ7ktf;;4]3rC]7%3<span class="pl-c2"></span>%XuNI;Yiuq&#39;5eu26.qiCW^g!:C&quot;!InYX4+2u;T\&quot;%Z!^aIboj5D^b-&#39;)C;mQgc4]ZTCg$kcDA2M&gt;@H&quot;&quot;c)BJpb;k&quot;1Ag2I*sP%je/<span class="pl-c2"></span>%KjL&lt;qnrlk/1+=:@3s%_]nApll@&amp;n]`&quot;n(?qZi8a#RPR_gT1&lt;GRojY0hfd/`P=U?[$@LErQ5-eL=i-7j&amp;--4oeb&amp;n.`Qc4oi%f?;e<span class="pl-c2"></span>%IsU5.]iEU]7D,;c&lt;[()FNjoTQ-&lt;3\M)R-IMY,^/s_d9cRJ&gt;bKs-N?JS2%H:TQK`Of-h(/iR=(8?l9%b&gt;7adMr%6:l=0tRF&lt;O=n7:<span class="pl-c2"></span>%;m#nqJ9Fr%\iM3sUSP1:&quot;[=\l-p&quot;riD4Q*u]gO82B9.1^Tn&amp;Du!]\jBp6-SH_IX$;_%#7*(4;ol,G&lt;kbBRXgJDZW^u2$&quot;9O+N&gt;!9<span class="pl-c2"></span>%5!njubHY.jK&#39;GeD+lK1&gt;@&lt;.5pEH/-&amp;-&lt;dAO-_EI.)tatj;RpNNp/I6d;2EG`PPO($1&gt;R*fS&quot;uS-%FlF0SNsGMC1d&#39;H$:+n&amp;C+!*-<span class="pl-c2"></span>%N7acba0o`+m1Ie-LJEH-OfKPR&gt;L!%S_1(7h]29/d4+S!:9&amp;W^j%S#K;M?uB$,&amp;bV_.QNKUY#0I8%@A-5AT_#2_G/#7m1C1,[0UT)<span class="pl-c2"></span>%D(3EG0FrD&quot;U%4]ukTK8;0_V#`1Y[&amp;Y.o.md&quot;dos&quot;eM3,r4\dF*Et343&#39;hh(n&#39;a9Y68&lt;]ODm_Cp2_;d7Q33na8%K8Im-!%`uP#m54<span class="pl-c2"></span>%(r8g(/[dnN%&#39;#Eib&gt;so!$f#-j30u4?b+!H%!&gt;jNlA!Ef&lt;(.]Bl9.&lt;qp&amp;IWjBVe&quot;(^DMk1H\mSQ50PZ3&quot;@*Tk&gt;]^Vo[RgMW&amp;ErJhj<span class="pl-c2"></span>%=B^KA!J4bZ&gt;3hEeY!tbFaeJDK&quot;hW(fLGOH*&#39;)a]9L&amp;qe\KX::hhGh+Ic(&gt;&amp;iFhl6ZHHE,ge6R&gt;8:@&quot;tVb++/A;+d=0PX6U,,)1q6<span class="pl-c2"></span>%&gt;:!NmW[A%*X5o=0T&quot;e,1S^MH]0Hu&lt;W%[G[_m1m%UVd)_a)Pi!J&lt;?+msHm;kBY:ZN9*uY3t&#39;;Y7e_uLG1YWbRPAqNo#D&amp;B8ZaA?ji<span class="pl-c2"></span>%3&#39;.f9CXBNf?:^u7P;ah=6tYN@!S&amp;0Rc&gt;.r#*o*H%Y)&quot;]DhR&#39;iDS@tEF;!Il9&lt;=RdUd*W?t/-9ECpakQSiCCP+)N(E2I).!^+`+5F<span class="pl-c2"></span>%Qfd#_LJDdP25$cc9Z&quot;3Zog+L&quot;Yc?Sb[PH@g3UTqS[^!LL#&quot;$m&amp;?7U7[3oja^[up&lt;t6s-qNGbHf%H*.u?Qcp@PbSrd7/b`rRQSpLQ<span class="pl-c2"></span>%?KuE[H%BTG^5XE+&amp;,0&lt;Xm6na&#39;*dAGsVcG2:=,CUKj=EkHf/@8lWPutG_#Z4@!1PoGL,TdFWSqo-[_$50M$Y&amp;![;?fgjW^Mt&#39;]HA!<span class="pl-c2"></span>%(%C`%0X]RML%Y/k!..i&lt;,7I[&quot;W&gt;dO\P7GfTBsME60#5+s@T/3T#gZ&#39;&quot;8\!B&amp;%_,odbO(-0=^IOH=cA$r2,/cdR\f:F;hbG+#b5c+<span class="pl-c2"></span>%EFq5nOdD!d7kM\BaSQ7cKEA8NSs^&quot;/(40`R$qr!&quot;Zraf[15DMHL&amp;01&quot;O&lt;HATJTAtq?N]*AaiP,#W/&quot;D(Ea,f&#39;kA7boZhKT&lt;0E&quot;(k<span class="pl-c2"></span>%phZ!JJ%?SQ`WUUrL6BmK!d=eHqA&lt;[Kc&gt;!$OY*ihW&#39;4X*U5Gfl24POeBrl*!?K*(_6;iMR]_9,-]aV\@nJ&amp;D\\R@$fuDR-=lHS7+k<span class="pl-c2"></span>%Cb(jF^fY4)@?\&gt;;*Sel$UPO\AZpO0H&gt;U24-.M82gn74&quot;HC*Zhk#[*QDY%UeI3EVUQbJ0]4qLf-]8KE`!gV.7?;lFkN;S/,/R&amp;0cr<span class="pl-c2"></span>%fp6aXff=J(&lt;T-4:&quot;K0RZQ+mP[.MNJ7)&amp;afYMLf59+o@3s1KFND9*QRCeo:K&amp;KPmIq0(Aico&gt;F2pGqaFk)6h*cZF5T_7;%hJRCZE6<span class="pl-c2"></span>%\`O?ZMtr`dO4Q3FdlrmL&gt;Du7LM=(O.mOG&amp;r.=GYZFh6.&quot;%`P&quot;_n&quot;D&#39;8,V-YT_Qup0#9&gt;!D8[3hHm*UA864pX.NHkqC^]d&#39;P_D8nF<span class="pl-c2"></span>%m`gJ)iEJZ&#39;1m`Va!bD6`X=oHG1t[t&quot;IG&quot;bgp/A0UI&lt;T\BK+)\Z&amp;B42.2pVW.&lt;oT3;L5&gt;4Uo&amp;:6k$L9$O`QHVlPGahR7Qfpk&gt;Er_N<span class="pl-c2"></span>%@L6VHBi&quot;j%\QZUID&amp;nK;mIOl-L.IghO_!:N`jjTNG[%jm^&#39;`EUYn0lU4G5V^I&lt;/gSBP8#oM=Y1f6dU2q0/jJ?=Y92.(O5X,nC&quot;SB<span class="pl-c2"></span>%\-Tq(&lt;,Cq$?-sAN506`.oECJO%IqI)eLa7Im&quot;b0X`&gt;c.@N3]2nF)L]gdH!!E)6rU72Co)d6P;(6l.,&gt;/cjX%KA&gt;$Vkm$I.@[OonC<span class="pl-c2"></span>%Kmi5O&#39;(N1.rPI&gt;U-H9`o[4=%-9pHA8TP4A)b%UIB3Nn8+Tus4QX&quot;Q1-N,q&quot;II?V^7EXYP)ioh9$e&quot;,/PHH[L&quot;WKiWC]m`-unu0I+<span class="pl-c2"></span>%K&amp;a(mS4(6(^][&amp;bO&gt;G&amp;&lt;YXq.&#39;dH3!VDZn.1)@SI+-]3hD6Di73h,&gt;^/6?mJ;F?s:&lt;f#7,?5$qdH=_VkA%dg5uLM&amp;PD!NJj@+,0ef<span class="pl-c2"></span>%;7IT9(m7lbblK&lt;&gt;@jJdU8TA&lt;&gt;9H%hD:m%&quot;X^/hIFC_SJM7r@A!k&gt;&gt;fYi\MmiHWK7f9C8D$&quot;3##NhOmtAYmjVe`&lt;;sR+p#9&gt;p2E=o<span class="pl-c2"></span>%fOg!$dr5b&quot;&amp;t\XSV8AYgPGm(^&quot;Y+OC1&amp;d&quot;ZT9tO?_+8&gt;GB1gLB(GPhk;MS(t&gt;Z&gt;?K]:MRj?,ThA!kSahbMfjV2LD#&amp;Mbb&#39;&quot;THn//<span class="pl-c2"></span>%@EJ0a_[+JBW&#39;![`9hL/%U&quot;.f*&gt;Y-Q&quot;WT:rKj&lt;fW?e&#39;+C3&lt;&lt;d7$QEHWDUDe.BI2C@nR]7!YqP8K-`;%_&gt;WF,a&gt;/g6C&gt;(6CZVSCLY4<span class="pl-c2"></span>%HB[;qBU70c`5uAq7F\)pk1@sG8$j]BSO7C(mQbH$N92!RNmPXc`PGt/=KZ*QRRf?=MVfRgh$r@&amp;i#Hj!Bc.EESTU#Z6;$6P0j#FS<span class="pl-c2"></span>%_&lt;cQ,,&lt;3LPH)A]%Otu,S&amp;u?ui]ML0/SY9;d.ZI;9R(*&lt;^VGZAc(3=la)X5nlKl`\N!EZ*+dB;8VeE:YIoW7r2&amp;hIPD6X_c!9rA[o<span class="pl-c2"></span>%UaqeN0UkS8*0)FRPcdaF&quot;tIL!.8-IK0kpkA,U0_=ia@&amp;&lt;o*AkNBTTOMS&lt;6]$C&#39;C=idsJM$*DrQ!FmMfrpM7=81D9%S`:SrB&#39;9l&#39;5<span class="pl-c2"></span>%bGJf]p/_0G&gt;WijZh%#ZMM%SC@$Q@N38_e&lt;A$.R1n&lt;8&#39;c7TAEeUYp.9H].(3Y/?$\Y8&#39;/I$FqJ#k034Sq/b2GU?mD&quot;%\SeM*&#39;Erba<span class="pl-c2"></span>%5hIBZ0Ja?URS&gt;&gt;%i/cJ@?(tc0\Al?V3XYtgnM?+&lt;]@e-aViI7@+Qi_JY]IlNl(kgMF&#39;e.pbZ,S&quot;p)&lt;3(X&#39;LskAp,Pt+e(ApIGcO$<span class="pl-c2"></span>%\Ct7e&amp;2TKRF8`;N&quot;e$Hbo:N&#39;AR[dH3G#/rI!F6o02::38K#!5U&lt;0C-7fS$$==*&quot;6\9+S0/_FT5nFV!L64^HPe]:pP$XC$(jd/.!;<span class="pl-c2"></span>%G1&#39;PZdXd0`HZGmmO2E-f$8lT:]dc@=kV7_L3&gt;?/0Be&gt;bi.0OlCP#Nm1.7.RI`6E4&#39;:c)XGE;IL5bnA7rl_&gt;*;WgRA0KbhU?@Eo7;<span class="pl-c2"></span>%4*%^U*73p#WHO!fg4D`52fWtIjgq`$Kot)9nZN\@c@Y*JVTPeT&#39;r$&lt;R:&#39;t&amp;cf3G:!Ub5Ts^BJUqjF;h,^/bes&lt;!\r1KXKL7DffP?<span class="pl-c2"></span>%b0!m)hB^Z&quot;HIR=@;G41Oc:\4&lt;opFp97[B$Cl%NgU-r[)4,Wo4/$p*6r;7fZBZ&#39;4&gt;25^=c;J4si[+Y.T*&quot;PGW&lt;7`T;(4Cnr145e&#39;&amp;<span class="pl-c2"></span>%7&#39;Bf0_aOnT6ZL=.Bc]`0.[cZSZQs:E`G3jKcM*U#D-\.PHu&quot;!Wb&amp;m*-R8!#-S8)EtI&amp;Z%D,GgE-?p%AV*MrJ/d&quot;&#39;B&lt;(!2^#8F`3$<span class="pl-c2"></span>%@;_$e4C&gt;&amp;&gt;JfMs]0B@+F`ABa7W\L=WH&amp;aL=_A##&amp;[,daNdKW]-&quot;;gD?M42LJSUe^&#39;%Q+&lt;=2*2,$k$%V:ZUsa$Jff\d4K;9U-&lt;WPd<span class="pl-c2"></span>%PRoA:9-1W4BJ-On+rC-VT!bpVVA44;j7Eh[G(`Lk,calhe;!pQ&quot;ZLdp)?B*$^]rY4nZ8N6EX&gt;4UjW,I+Q3^gB.kb*q7ZpUUTHW0X<span class="pl-c2"></span>%guH&#39;jiQ-FAMB:%@SImG&gt;C)R@LOuo*m/3hoLZIO(AooJBi\*:dW.G:FU&gt;F4sB7Gb]J-ccC0^-YG\&lt;IhQW2sN4&amp;,[8g_F_2soD-]PP<span class="pl-c2"></span>%cNaQ-&amp;bbU%b&quot;P&#39;KL=e!$Qb_c]W0V8pU2KL#E`OTVPn&quot;/;MY1skTtIiM-I.9@&gt;Zg#1osJ?+4uBr=C3\^ub,W:;QKj&#39;F)HSnU&amp;1/ci<span class="pl-c2"></span>%,hdq50d0u9+Q3bm5u+\WP`8FlJY]a+&gt;S/M$/QE(Sba.$F*GDlI`[XhP;B[\=3DUjdO7uiQ(p-7L3V2#seZ[gu]r_M/E2nB75pp;O<span class="pl-c2"></span>%5[!i5JZP*L:`?/+`O&amp;a4&amp;fOGeO@ZR@pdk%KnuYGnepn^e@&amp;:B)K/f&quot;?[8N#NrT*$G!b&lt;WG-I(Ol80nn5@3?aHM;Ga[!\,m;b%VdA<span class="pl-c2"></span>%.#8$FG6.m4]+ZRX%a/;eHnKSc1$&lt;LuLQ6?jap[5=bEd%&#39;$F33):9nPY@]cXnJqG#?1R&gt;OF!i*gD3C\71$R_J)=*2E8-l[3NXJ$is<span class="pl-c2"></span>%#%P-a!hNd9[oggJ-M0.4]#i`FYe_\hk&quot;YPqM\4k/fsfZ39gN/kB\4&quot;Q[RH;l@`tX)ZRH&lt;&quot;$Vm0XegYTT96BLuC?dd)=gGTCBM(C-<span class="pl-c2"></span>%+:q6RQ`_&amp;mghX`)l+e?fG&quot;_&gt;7DX-$&#39;^(,Ir-Q^LVa*$tkhL;c&gt;TD&#39;p,@%1`[i%6jTOAcS2-?HN8#+].i2VG,_7dL9,[`RHEZ\$qJ<span class="pl-c2"></span>%j#2hkL[qR:bj[OJ]ZFW$1?0`!pJ!&quot;7=;X&quot;@2Je9gS&amp;35NaZW4e2[T9dU*%&lt;\Pej&lt;`0T#mpX.#n:h%lQjV&lt;gp%Hp`&#39;!O+p`dpu0DB<span class="pl-c2"></span>%%G(7J%6j;cDnYM,&gt;ei84E.YROj?l[]/=YG&gt;-7?1B1S*I-2L2Q%Y&amp;0B;gYr&gt;pH,^NajX)@dag5l*\!qd7(;mf0&gt;&amp;SH?S,E*hhL8B5<span class="pl-c2"></span>%fFf#ra;,N0m[P%,GchP)pg1kPfl&#39;%4&quot;_.&#39;SG&gt;QQVgugO51@:iUABjXIXU^&#39;Z(*:NqeWl\haa2_d;R3&gt;?&#39;q&gt;u&gt;H7i@n^$(D7VD?&lt;Y<span class="pl-c2"></span>%;[.a9+;CmT;XLkFYj&amp;D3[.q&#39;B(PK^;;FlDY5be92TK#?)]F-G&lt;M\Xj;&amp;.&lt;d5j&quot;]4X&quot;s\:VlfqAQWSFm`N/K.]BLke[e@EMS_e&quot;gc<span class="pl-c2"></span>%eLf1Upf)6.&lt;SE*lC(aq*%+9tfSb21t!g/IA&#39;Qi$EBMAUp!k,ErD;hHqQa@`/i.Ta)nO=]T:P/jHnFg&#39;a^o&quot;V\,Zm_c;Z1n];A:&gt;\<span class="pl-c2"></span>%*dlV)B!Y&gt;Z&gt;=&#39;TTntR1HaV&quot;jC?&gt;s@89C+q42U@KohGP_[XX:n03Qq7ljq5l39gUl9GDY&quot;l$rWl$a;%i^[3@Q`4r6;W,hJ^)c%]s5<span class="pl-c2"></span>%Xi`Q-+,fuiE$1&lt;ii8e&gt;3G=[DT1X$W\-&quot;X8R/3&amp;=PEuNm]W&gt;ZL?&amp;fObK.RlDp2geD96HN^-9g\X\#B,uoNDHV`r&amp;U5TX&quot;&amp;d&quot;9o&amp;sB<span class="pl-c2"></span>%jVm(JcQ3g+3Zb,;&#39;Ud-&quot;A[t:/\!3)3O.Ad!+&quot;BRQD__-VM`nb6W&amp;#dK&amp;uS:&gt;_))CCZ/ipcIA!##3GB]/8;-HlT!R=SMMn.jQICul<span class="pl-c2"></span>%RUcRJ,Z,ddrcWb/dHJEd/3Y`8QBTJ]/&amp;&lt;t4dP=B6&quot;F1Y4F_(F]P+4+;]h(48Xf+muL=VZ)*mV4\R&quot;Q;.$^r6%XJJBi6rJ$u=gc&gt;S<span class="pl-c2"></span>%*-_]J&gt;n`+E1_(&amp;&lt;!_*q2b0d7n-r&#39;(S&lt;^&amp;CS\N.D0\Q)0)8N/EcZ!.5R0kDW\[&#39;dpjH$.ks14Ma&lt;i1dbJpeHpl9ldg:H8g]Q$%dVX<span class="pl-c2"></span>%phr&gt;0Rnq2ho&lt;[s^STrSkT&gt;/X+Er/SeI&quot;&amp;P3l-8C=&amp;Y.u7.iNAl&amp;TPfUDnsLK#6XK?d%ggEaWV&lt;D7LJ/-Amg&lt;&quot;#=)T[PsL3[S=hIq<span class="pl-c2"></span>%ZkrHC8eiX)0oZ+kZg?*S)Ufmfhf?Ric(CV)29]43^lqi2o3-!;_!SbFFfdS/^aW`4K!9&#39;STIk2l8_Q(:i!FG78Qn&#39;0n-O\`p$M?]<span class="pl-c2"></span>%&amp;mHX)(\.#V-a#YSoRfb%AeX)Q&amp;f.cJ?\[j&lt;.BAqrjG?598q$AR1$ZRI17LI/)S(3H!SZV&quot;[^`&gt;IrbE&#39;&amp;2ggh$4B@.-[2Pe8-&gt;R5X<span class="pl-c2"></span>%`N4od#g*u&#39;Nfk!I)@OX&gt;_fDFaH:_.Fb##,n&#39;HD3=]bWS&amp;E#+5Ig_Us2d=LR`fk8P&quot;hiO0=?Qnqp@gblZY;td@!4@%U!BkhnL`)A^<span class="pl-c2"></span>%j&amp;EMu0eXHrjkT&gt;B&gt;sPG&gt;l/YB;g0R=A!&gt;e4sa,56ZS4M(r_fc[,/;bN3o4=Hf0;qd.CLRYbW$*1WHue_4dh96CQ@dbB-%`H3,&lt;H6L<span class="pl-c2"></span>%O695sMkt5m!j_`c9+l5:_AHI=knjY0ekj(27eeF;&quot;.Bo[U1_U?V%cTUO#!\61lmD;SPSe\)QBar?)3f&#39;N2;/=P^I[Op*Lr6F&quot;VOX<span class="pl-c2"></span>%YDSt;&gt;n?`=aemOc/6Cfp=0r=S&#39;:dkj$b4/(T&amp;M1Xq9LWfo`S@.blMbPas[#M%3GEM[sjLH5EZ(+jb8o(`KhLL.C#D+DUQ&amp;2:^Tfi<span class="pl-c2"></span>%8$&gt;2HK*=?=C&quot;%rkH$/(.6o8ma5(SnffR&quot;7[2f?UsrAf/T2Xfbi%Gnhd&gt;D-FSJt/JlS!7W&gt;KUncZ&quot;;Y8bjenYY&#39;G[&quot;n&#39;?5]*&#39;S,NY<span class="pl-c2"></span>%MR:oErKaZ0MIk8`!Lg*qoaNe?39in&quot;/,BI&lt;8gl!&quot;(0(qmaE&gt;R9fI*AmIX#YWW[d$Nl)uk*fMIGj@9&gt;Tn&gt;sKjVT7h-G&#39;dYi@9%fXC<span class="pl-c2"></span>%X;3b#QlWi5TEt]hI7QWuf.Z(*HkVDR3iM&amp;&gt;m@.Z:onJlC)%QKfUnd[&amp;?\;X.&amp;dKaK&lt;E&#39;U6/@Kr.4r?DVli\le!E&gt;RCU8&gt;l/#*6&gt;Y<span class="pl-c2"></span>%r2rNj&lt;RbfW7#h;pL-WEN[:FrcW&quot;$ZN2Pe;%RQTc0@UIEbFL[bj&#39;kLg%3/(U.FodVfb\D&quot;&lt;(:6HN9P*ZZZ&quot;aRt@m`VK5UHN3U9PB^<span class="pl-c2"></span>%OXJ0q#Z_*%Q3&#39;W0$3[`ka-sE#?ks`u$&#39;u2oTs[n&gt;e(2&gt;KbZ=d%LL=BLI.8HuGr:7!H(F!D1Q^0E5M3h!Z+4G2[&amp;#F@eEUP31dR6p<span class="pl-c2"></span>%^`&#39;kRXF(`6BMk@?&amp;SY&#39;&amp;TIQPGh,u5aXN4\uS0gQ&gt;22u+C-a&amp;H\?7Z%eD\f9`(H;Z#kt!BP_*ce2YE7_j6&amp;)hMANZ^JkG#rX&gt;F$NY<span class="pl-c2"></span>%r%*o_KoHK,EjlKL#Faak@.+nQafSR_YEBS+j(n&amp;rdcE,&#39;D+cG6JS*7UTVck+O\-W%8&lt;SKM[umQ.o&quot;jI#jpG:l&#39;3F3@R&gt;eA%QGlq8<span class="pl-c2"></span>%=dg@&#39;#cJuIZ&amp;hlCW)&#39;]_d.2=2f)\GS%Pj]@m+3LiTH[?&#39;p;EJt#S@3W+k7_$&quot;P(#&gt;Jh3]%G\[#4kDiT8crBBc&lt;*^Le`7uu/lZ3-*<span class="pl-c2"></span>%!BZ%];sjddG?Iag%!&lt;6^aPG&#39;_c7I?XOu&quot;r;#(X?B=acI49H(2`O\PL85Bd^]2=dK`OFlSVo-1mT&amp;2dknA5mI3p&lt;RR:U&lt;E\lZB0*%<span class="pl-c2"></span>%;hoGZT*kR=A4Z8lnp)KITot&gt;&amp;n\^4(QUoh59:^2$Z/h&amp;.#I2aoJp06DNg4mVje#qG\%(]trd08tIh0r;jnFe\&lt;R1SIc)UWG&quot;+7N]<span class="pl-c2"></span>%PKp/Vkp[PF(c&quot;:G&quot;*C*QRs$Da*VVQ=1u_5.J&lt;R]_)R`c+IZQ/S3&lt;b#c7DEJROdGpX19Xi]CRh*QMQeWo^_C-*&lt;@IE/8C&#39;*TkVZ$0<span class="pl-c2"></span>%0[(N;.?/8RpquWbOH&quot;je+S&gt;JB5D*_TCG&amp;&gt;3c]5fBE&lt;E^AaVkNce.=0L&lt;=ORN$0I6+0Fo\s&amp;N!YA[=UJ9Wi(`UKu\%1_QRgJ)E:Kb<span class="pl-c2"></span>%Kebtk)JG++F9-@%ePC789C!li+,3rteCFpjiC).flu6\qEgfHbd\r&gt;!QRlER%:4&gt;[WqfC]G8TJUI&amp;[&quot;GXMan!*3qU0B/)$UOgf$3<span class="pl-c2"></span>%_E7$uWagV)e.aV#&lt;e8,!c^R*#3@CB&gt;#o8E1+C]I5V)RgV[=YB1UD(?[EaHMVi_XP=AA,lsO#HVJ#IcaB:2k60`eSu4fq=?1FfQZ7<span class="pl-c2"></span>%DG&amp;&gt;Ae,)lumV;uARS!(]72GZY=Dh!l6h&quot;,E8,ZIZ+^m[Le?&lt;I_&gt;YrS1ZW&#39;ET)M7[A9#\l)l0Y^,FXo0,$-2I&lt;g8d8eE;^PH+\JKJ<span class="pl-c2"></span>%&lt;*#k%%N&quot;`dOod815+-!oVK&gt;bc%-Fuk8uOBWXIb&quot;R-UR3`,e_2S=L:ckX,5)&lt;GnI&quot;!P!%=80d$_=ool&gt;9(-PP3&#39;*k95^W/ii@7a%4<span class="pl-c2"></span>%/&#39;157\.bBPn_u=b?WcP&gt;opiBo8t&lt;gu&quot;8KR*b^hWQ.nGhL+9X)d1l3T6!CDl&amp;[#)/12c?*CGRlLNrb.bS(e2&amp;U?Ek4=TErM63m/bb<span class="pl-c2"></span>%O1[6M0&amp;]&amp;%%^H43=g_SS+MdZ2jS=Y$cYdgI?G&gt;OhEr9&lt;G=4&quot;OCZ,ptNdZ+I/d;%tj[Ea,ho&quot;IhratBOpd&gt;iuP2ifcc5#\mjaYQQ,<span class="pl-c2"></span>%-]`VUWS$3phKR1.9_mD?Ob1\dZt1Gb`ZU-6f&amp;mpJ9_Qt%5nrS5G%8jZG4=UNF&lt;+,&gt;K8&quot;-*?.J-e&#39;ka?&#39;=%F!&gt;XLIG%Plo6O7k$/e<span class="pl-c2"></span>%,]FYaiM&amp;[ka?qWkE.s3?9+aM(-I8c&amp;9M1(3YePo&amp;Y#Vs.$1*0SPhmR5DRG.59!MagpF1_S,F^UEQ,=bNUW`dKY$7#B$:8YlPe*M[<span class="pl-c2"></span>%D*HEB8#q6oHk&amp;X[YdRZL)7kf&amp;&gt;?c)8dfRq.1c=eiT.TPC(h*?0=#MoAf.7&gt;&amp;.P9-;iO154,ZB\UZA0od;Q^biAIo#d1$#\60i/XL<span class="pl-c2"></span>%J43;r8YiOTm&gt;$C?gdR]9iC20TMskg.3PD=s%gLK=$Vek+!5j;uXXZAXA5]\N#H`o*5)n6)1p&amp;^C&gt;/LbkRoA7McIOrnWYACO@A[/m<span class="pl-c2"></span>%&amp;U;O%&gt;/Hb/(VX&amp;OKS.1h(qW2iii6/opA,LO:3/`K&gt;Gp*\&#39;BMdTW[U7/+Se8[@;b#g4dm+lolH?&quot;&#39;FN&lt;u(gC4=&quot;10YW]ik$.8SZ&gt;G<span class="pl-c2"></span>%b=0LUgep2+9R@HB9RG;(!2L9JQ5rku&#39;CtYW,[Y]am3e+^n:;s&quot;0kMF,(1:$&#39;eP[q2&amp;FInb]d8G&gt;WJEu&gt;c*s&amp;aEYk3Q7S_+a(8KMR<span class="pl-c2"></span>%jSJoaS&gt;3&quot;aO9Mq2);6!P/IDpu[:\!KQI!Or=Zd?&#39;kS)r`*7\_QY?Vd&gt;mauLGk$CW]/CEcl.&#39;T[f&amp;_/@B6#l/ih%8Lq_4Iu;Fd:D&amp;<span class="pl-c2"></span>%3K&gt;R`jAt)iZ_NdWG.pOmLM4=)k#!st^fmdt1fsq=\$3^X)+fMN3YL3Z:u,N&quot;&#39;m7unJlN:(K[&amp;Lr_Ysg6SM#i/Ce[&quot;LK\,Eh7GqEJ<span class="pl-c2"></span>%]8&lt;tH/Ma&#39;Qdp)nnEri;p7tS(UJaEmj=OC1NM1]NC20H1&lt;+#oSE,h:b&#39;WfmQRrb-XZej,NRciFd1S&#39;Wl12EO:iXu+L8dc)h^QppNe<span class="pl-c2"></span>%&lt;Ki8SdN-V&amp;W^RO?ZGdJpNs+k_fuH*m.M@]&#39;Q0_35!&gt;8KqFoqqJR6]3R3FpW6!UedtKatO6pT+-&amp;P@&#39;VCk#EoB4FaM#MqhGOSZX)=<span class="pl-c2"></span>%&amp;40Qna,D6TAT#Y&quot;f@dKQCZ?7fC*;@1Zn\&gt;5iG*&quot;b5S55;&gt;$FiJID_[%[\=fe&lt;[oM`&quot;Y^3m=ejqa(FgDA]GYtb*Kp?%KHhuB0&#39;`@k<span class="pl-c2"></span>%EF&amp;[66TkP^q.Lr?Ica&#39;Gp2dLM;IK?mZT4e;2$#:;jerb24nj&lt;#r@Y4so0)FV*&lt;&quot;kJrQ6ZfFKg(!7??XC)GEd`Tre;,nht-TDIb[u<span class="pl-c2"></span>%A`@d-Xi&lt;C5:s6RIF.Kl/e^bj?kMhU&quot;PqsCZ1JCGuQM&#39;*\MA6-D/SM2=?Q]AdT!%Vq/\kU)2=Ta3[G+k/S\eOB-;j&lt;k&lt;]TY&lt;SGnsY<span class="pl-c2"></span>%&lt;g/+`gea#X9hghJ,+8M&gt;&quot;=M1@e,YOej_?7&quot;#Ocg,8CnJ1&gt;`hRf*TRYRZE8,5NPm;,YTf2E;!tB1Q&lt;p]qQTMV@9]8Gm&gt;@^a*U.E@7<span class="pl-c2"></span>%ifTFV[3&#39;#gcD%lpT/R*F&#39;6&amp;PWKVG5&lt;(a5?d8BJe*ll-2a4jH@d]L4&#39;:VS=ErD)&quot;cC1BjiQR[=@&lt;*!HX&lt;B37b9j(T&quot;6,h^bR4&amp;-&gt;?<span class="pl-c2"></span>%q;G2f+sSHAEq\_!#$PEGT4b2F*)=\nHodtLH8*Rd%A/&lt;!@SS*ecdq;FXYp*U3K)`t:aVK$01c)H[#CHL&lt;.%!,Q08sIRWi;/;&lt;EQV<span class="pl-c2"></span>%Ket!SZB&amp;W5i:(1Bn%%&#39;bM%u6;OF0U\Kh7RrMh%89SYDQ(.UiICNXZM.[2P1Lb(7en5[#Rf,uKq)oN;X@KVTeL4[DeJ0FQC+*&quot;4!!<span class="pl-c2"></span>%J[N9&quot;2e`UYnTZ6j7-82]6![hH9#8Fm&#39;oNfsAlU-+#rY75V5,&lt;Dm&#39;^rsBIgkJV-5sb&#39;JfbC-ko.E[\RY&quot;df\&#39;F8eeh70q3&quot;8P%Zdq<span class="pl-c2"></span>%/L$ig#jagZ/:KiM!#A6H8&gt;D2?!n8(C`%nAT!p4Gqf`2523iVj/D.I]!n^]rO=S.n`c&amp;seeng\L!A%GiVC$m-;_!ZLfZDF4)W4ZAL<span class="pl-c2"></span>%\7na0B&amp;ld[kGef&gt;%f-3@&gt;6r#c%o`V@QqOeUq$k!+es.T:ko_j?9s&lt;3eAsp]lV%5tj5O%IsRP[uhl6/d(oU&gt;\GiPQ.^PnZbX[rD&amp;!<span class="pl-c2"></span>%U&amp;c&amp;a,mu2K,rn=)^b-pm&quot;#(O-HAeOfDh:bL-KLihp&lt;k,9`q=Z.7&gt;n/b6&lt;S2QKFH=DBG&quot;g2UpTKHQm\L#in&lt;T(:,Qi;Q.eZt%jXB&gt;<span class="pl-c2"></span>%o`a^L&gt;UC5&gt;&quot;^.%AA40^c!-6-R)@/$sa/6u9\rr[&quot;*&#39;%;@n=!&gt;99I[mfOAQUkUmWbN3j7neK*=MPE^LFa9dm&quot;QcG\2T;_6lZ!EEg1<span class="pl-c2"></span>%1eFW^FEBEZ;01&#39;M:pKuq#g?HmbT&quot;L],a^YRg[=r1gD/&gt;_Z0.WWHe1bq/cJTr(.%AJ+-Dd&quot;V&#39;?85nq]&quot;=hcjBY&quot;R^&lt;i&amp;o+`5(DE-4<span class="pl-c2"></span>%eQ[1hn?4lYJqY3b/3rYt&gt;pR##pmc,RC@R+unIA/B4&#39;:=?!.N4E0&#39;[&quot;,2PC[@i:Ac[nK&quot;dRM*MS4;J]3LD:=gjNi&quot;+,b%s:rRM9hL<span class="pl-c2"></span>%+[OX_%2_[q1J]JeXdF]rid&gt;INr3Xi?BU&gt;%Vgrn0=i8d&gt;3[h9sUOuTkmpVbXoHAG&lt;!(*,-;eiG/E-sa5t9ISqr*%SV&gt;^A&amp;Q-dEo#&lt;<span class="pl-c2"></span>%mIP-E%!&#39;g58P&#39;9OATH==aRHV^pSG]:2=j3DCqLEW1pB5jWgASHC+gsB&gt;A2]O6R?8@dZjkuE:jc5UC,*TcAbg!Wb]^[/J&gt;&amp;R[F-&quot;J<span class="pl-c2"></span>%`(R&#39;&gt;M?2+..PibGgI&amp;gMb;/X&amp;V&#39;ZRf&amp;7i&lt;R8Xg-s8:[-K2cXp/,q*6rQ*HLJr1p&lt;R/2th:)c60c9?NB=@OYdj&quot;G:Yc%&gt;;QE]/W6d<span class="pl-c2"></span>%8HQh-&lt;`!a-Cb$DHc92b0U,&amp;Bs3&lt;D&quot;`,I]$eEO3W$E-O%9ge`C56nM:2^Eu(9oDlbKOs_Jp^N_&quot;fa_Fqm=K`i_dDRgElg&lt;&quot;n!jctZ<span class="pl-c2"></span>%&quot;;A)+K&amp;O?aW`@FV?L#g&amp;lf]qN%k1^O_P$lcCnI7E]gaeXdnOfj;\LR2R:_g%G[/(p&lt;X?utnGpJMI3:fs6$&lt;&gt;&lt;ZPQ\[6TD(E6Q97Y<span class="pl-c2"></span>%..3bl8c.L54YiA?$3JM!7ohn&quot;Y.k23ft&gt;fEU5oZT7]kq3=LR:LN+ld:$VE6o&gt;eIO/cD9M:)Nl*WRD$V&quot;87F/M4MsTj,[l&lt;`525G`<span class="pl-c2"></span>%]p,n&amp;It5ufV_@%`&quot;Nt&#39;QnC\_MSaj8UB6FOt+-Oh&amp;Qc&lt;;.C]DlP&lt;%cY8=%WTjW-eL0X(QqVgQ+P4J,Js0iplU5k5&gt;5!h&gt;bqi+$&lt;mi<span class="pl-c2"></span>%rhHt6G9;8+G^k#1mI#U&amp;55G!5im%._[u]_%p;&gt;]NoToO0ru^fa3h@\kms.-GYJ&#39;rU089@c`(EfDhJ*33gn_?3!g.o0RQ&gt;CW/\L-q<span class="pl-c2"></span>%h`^4U2;!\Sh7^IeUh!i^KuQf$;`R^A5dZmr[gn!.&quot;&lt;@25[ZM@?U4\Soo&#39;.mdqUqX45@6n=9a=0u$&lt;BG%hIVKPUB\jbp*Y+3/n8)M<span class="pl-c2"></span>%ktR%eC*H-PA/B3Ljm5Xu2O72B7pE9SDaJjnp&amp;&lt;5GiBtR6K]p*Ma/&quot;BoO8Xe\Tcm&gt;7)!BX?%3DPj95d*%W$DNiKbOK]Hk&amp;9Mah-9%<span class="pl-c2"></span>%Q?PYp.qOm(.#..+=;\9A&lt;lg_H=6Ada[Fco3c=dT&amp;(HE^E*Tt_HJ\N4So$N\dF;b&lt;hm7h%ifQ:S&amp;SCN]qp&quot;%V2Oh%3n*W]i$;%8$&amp;<span class="pl-c2"></span>%_BkH3=mItDUoF3O;a@f/:+.b[$8/QRW*4=X]O\uR#ZO`d&lt;_#FmH=Jr]gP*e,_glG&quot;da&lt;+1S*8#;r;^&#39;`U.bWT%us2a&amp;+;IbU=(M&quot;<span class="pl-c2"></span>%Zkib^NY,;Wc@6El:lBULGYRSERGii]kK3dn`4[8qG#g+,Inq4M_D9THXm13^-mCX87tkmkroH3&#39;imsKJ5.kADCR$$RdJKfodsXUi<span class="pl-c2"></span>%/;544;2S[+MeqZp/e:j&quot;cl%;@)&#39;2YCUAh%d+r\&lt;f@,3s1&lt;Lc#Tl&amp;,c.&#39;&amp;-J%:X&amp;UV&quot;\-EbT%_=uQ-(UlC&quot;6m@Ss&lt;L0X+Zc&amp;pB%U%<span class="pl-c2"></span>%gBc%KI4NF-\[oHKZ/m109A0)Jk1G8HgVY2&amp;p*j_BQ8e699EjI/nJVS]0&quot;L&amp;Ve57O9&lt;U.\A%r/Q73c!/01fs.CAOsAi98&amp;#N92u4g<span class="pl-c2"></span>%It&gt;RU&#39;N&quot;PO*$&#39;cD-l$!lGS^&amp;fnLc2s&quot;[`I5-!MYV,$B`,cP2@ri!W6m72qn30`i[R?bj2d&amp;C@.@6[n8,gmj[&lt;jb/ALc`!)r&lt;ID!+<span class="pl-c2"></span>%lB&quot;bL%:0TXc@q/hl9[+C3WQ9blR`$n?,of&amp;)26X)$q(5N;NBo^:]b^;pj?$keVjP&lt;&#39;I=\]^:oWr@3]t/&gt;c&gt;.F;&quot;)k&quot;)JPnL3a4%@<span class="pl-c2"></span>%##&quot;eUC9,&#39;7**Jj_=G;\CC^&amp;\,U\k1G(Zc!e3b]1&amp;jBq0P[A]U\dWM!Vn$Dc,8o6=Bn#pdVb&quot;fjg]Loir^Fh@C6USg2iQ`+U1+(Kc<span class="pl-c2"></span>%(HNc.m/9UqP@q#@6pJ3&lt;Y/H\16rXbnf9-gu4_0k.G^o&#39;3ac-VPIN1_$Xfq+?#n?hGALeMVb*n:]I8/e0Y`]:egOHiKq4dWRfXlG.<span class="pl-c2"></span>%&gt;eho.bWe5e\%&gt;5Cq;U[6s7`^&#39;rSRRmj0K7[IXV*.YHlD+cYq+Dh;@[MFoQc;s5DGAmGu&lt;Sk&gt;t`Ohqk!_I&lt;Tt1/\f$5^%uCYG&#39;B&quot;Z<span class="pl-c2"></span>%05ob&#39;]`)T&gt;l%cn6]o0FLVY6WfFm3YArMli$W%E45Ee*ffM*C^b&amp;*I$[VVK-[HbWrDDsa&quot;*#g6ZVrRcUBe&#39;I&lt;k&lt;TBG&#39;SR6f[qs*2?<span class="pl-c2"></span>%o$seA4kaom-U5,U\37U\4l:[rmm$7/[g1hD2Eq!6]??\AVtAZ3f.ms+iafCADu.-8)#$f&quot;a&#39;DO-?_6/)hbiJqSc?1V4[&quot;Ar3:D9%<span class="pl-c2"></span>%gg8f7qlaQSQP\QJ55K6m_GG`9ZL8\(:E44AEPXG#1&amp;;jJ*WIAas.&#39;*dq&gt;[G9rdJ&gt;rb0&amp;(fr^dLrPPH:=gAME^&amp;)??!qd2M;g:?nU<span class="pl-c2"></span>%O08;l%ic&#39;;H^AQLC]=o&gt;jCd34EIG+QaK$qOm^r@aQ98h%&amp;)&lt;Ql`NeU5gun.9k4a-=[dIh$gR&lt;*OA3\cglc%XL48b/DjJ*aaSD4&quot;9<span class="pl-c2"></span>%fAuS*%]JF0RJB)#b_QCoS6#RJ:5ar,WO[tUE4slKIi&quot;`$S=1ZL2u`&lt;/4P`6j7&amp;T51jPH.dmbY)&#39;[$.hrJ)&quot;2/?Vc,1:JNLd;e&#39;6u<span class="pl-c2"></span>%)!7GK_k0V&lt;Rf(U3s4-.j=8Rbc+8tNMmI+rf0:a-O2s&#39;U=J$jd^H/X8=oBgqo7iuquq1h+:I.[&quot;&#39;qMnm9cRuEt&gt;327FbF&gt;%Z&amp;Enm3<span class="pl-c2"></span>%o8g9#5AYc?e`1r4S0pPtjS\!-@N+D&amp;k4P4e`tPTTn_*?*0@&#39;#.2a6SX\pA[u=X&lt;2=^O?$#IrX3\ldu*UhXH_X\@W:NrF,_a+8.Y.<span class="pl-c2"></span>%HMs;N!W)Xb2eD`dFpDpT\rX?#B(q@uB=e\U&#39;C,-1G&lt;D#D]Th;h[h%%C)#L@P^3S?q&#39;&#39;=W:+]!&lt;0n:CL,5J9%k]^&#39;2`Gh*i#&#39;am3-<span class="pl-c2"></span>%IK%XGQ]G5F\*]^CIJ!?[j6hR&quot;Hh2JPl\iB9^&gt;*oVr5&amp;&#39;VjY[(1(I2lQH$DHZ&quot;UD*m,22GYq^4&gt;&lt;o:N48Fg#Z&gt;1=)#Wff73):o&quot;S=<span class="pl-c2"></span>%9R$XOgHqbU[[+7)]Q)[)ppAl9Bi!d%j&#39;q-65&#39;ulcs79a`iZGm!3][3((Z0Vhl+tK:_diV)a$uIaoiSpjIsjo:biW11(SU)OnE5_.<span class="pl-c2"></span>%0&#39;VuTs)S6#.65sd%&lt;h^[2cmL,s*QQ-P#oLEH!Z;_f$jEYh[b&gt;&lt;mF_FIO$1K]kO.1??2E&lt;\rtue&lt;)ed?=O:OL9CjP*n_dC`&quot;6m\_f<span class="pl-c2"></span>%jZPYplmGm3S(GEi9_&amp;dF5PC_nmI)&lt;NN&quot;$gkr9[D\q-L&#39;n%Rut82=;lQdutL*:D20l*]D@E*^[r?5j\O$+FHg]d`3ujhk,/`[WDT=<span class="pl-c2"></span>%Vs+?@H;^Blhqmb7qX4:SmI-&#39;qMLLb]:7fu#o638JWd]fbqX4(VIq[tY!T`qLrV%DVQL[b_GdtN`E+\3Mn&#39;3R]Ci1hi0L(elp]=uT<span class="pl-c2"></span>%&gt;[5C#a::F&gt;&gt;hsmS0^TtUpQ%@,!PH!iF0Dq2=hhPZH*)Q4`4.nD]`1omqss`crNhQ6n_a5%2`(j?J\O?I%o0X&gt;qs*mEa$2pKi?*V+<span class="pl-c2"></span>%s.7BIT2&#39;\3XAtj64Xh*d&quot;a6\.KJ1=&lt;^Q\YN[hCuM5l&lt;ZWHO&#39;DV)rC@&gt;+KZ$,KJ*6-&amp;A!&#39;ioD9nV^US`8qsZl%R]FW$57:]:qr#9i<span class="pl-c2"></span>%83H4D0KYNl?[iE:q:GB(2\4g$hHqA\J,A?goq/sH8*1&#39;Nj:Pb!;qT!FT=?7UZMe]+h1&#39;ddh`o?_d*8&#39;GQa_1*qp&quot;iQrLQY`7P&gt;f8<span class="pl-c2"></span>%cEHsAr7fQC0-5&#39;#5FeXuBCPckqXT.0CZtbeX3R47+-q)OQg&lt;BJH7*&amp;^9&amp;IgtlM]&gt;LrF18+Z+kQH*r+&gt;k&quot;7n0YQT+g79PKGm@uS&gt;$<span class="pl-c2"></span>%r+9a&amp;J&quot;?n*\jL\.2db?HhOG5(hRBH[8%U13?;Dq[=nl?RK&quot;LToIkBL8CDl!f[4LP_UkR1qO2M1sO&quot;)&gt;:YpJkt&quot;a,SRk[Z+=6f-2)<span class="pl-c2"></span>%&lt;;u?!13romEu4k(IXccmoAf9#mFBb_\,/App&gt;U!Ge9cL&amp;r]#Lr`P&lt;t$Z#_[ZZYcQ=rMNS%s7_$1mX@?Vlt9CDq&quot;4Qhl&lt;hN@LVN7u<span class="pl-c2"></span>%%t?\7c&quot;#(Lji@A0lb7f8jfeR:ld&#39;hBJ,O2[\/Tqqs1LGMrS*oQf)@V6PpBFP&amp;uUFXE]NQJ&#39;MtqSMIWibr:AQ6s%(=l&#39;^3fbXA:Fs<span class="pl-c2"></span>%rIlm\;203sVPBT5-^X(I-6L8mdOK&lt;]5unkp=CcY`NcKV!+/&#39;\9B&quot;H3rHX`E5rN,NB8/:o[)tWY@rr50jrJsCY.&#39;]J//pI.ko3]M:<span class="pl-c2"></span>%rqQr\J#nEl.Kf7Z94cpS*c(QZ3S&#39;ho&lt;&lt;&amp;iAra-dmr+CeV^U\[gY=[gMlLOf&gt;b!_7W?\W]hOa!;(;fVJg:)+hJa`():05b*WON+cL<span class="pl-c2"></span>%7=K6*[I4/S:Z@:6c^[I0Idit:p0Sm_mlBROJ&#39;hEsT8.&#39;7ct?]j9PaI^5JFaWgeU2XOOn]bMahb\11,GoifI5+OXo/ks2=HkX.DAG<span class="pl-c2"></span>%iK$0Ophg6E&quot;T7PrdgZ&gt;a!R[+IMl^7Wiu+g(n7-))3Jmj;o&#39;=Kj]/LNBQT)D-,*;1H&lt;fV31HI1FEo(M(To=7_orf\-ArC*[98:U@P<span class="pl-c2"></span>%Ptuo)Stg?KG$jZE+8e_qIJN$UO1Ln`6VH)]KmrRSqX/]ff%+3pLTe:J4#TNRQQP)&gt;4FD?u1Nq/l]&amp;2t*ZbO)_rS&lt;jgpiV(9q&gt;0e^<span class="pl-c2"></span>%J!kaF]6klFk#Zd$[r3=3s)c$5hlId]CB*Dn27C,uJ,(DLlG(!Bg&gt;DGhc=X,ls5J?SIt%&#39;:rfK:oT&gt;0*P:W$?&lt;SiiVj,llSihs&lt;P;<span class="pl-c2"></span>%HF$*\?m[Q&#39;jcATjO6*j#56&#39;I7jlO=60C7l*Is4IE&#39;#&amp;]ts&#39;DcmQi6A78c#p62@^0[h=&#39;fU1k#6u5+h]Hm!f!(h&lt;sXB&#39;4ajHK/RUN<span class="pl-c2"></span>%^tmPtG22!t?gf)OqsiWb7P=Z(bO^Kjq`Zf&#39;Y^%mNH2d41k#!i+P?4:iON[M341VLU&gt;i82G[eo.?hT[F?4Bjbp*^Bonq&lt;kJn*P6/n<span class="pl-c2"></span>%rIdB)`L,F^O8JlU5&lt;s6T_TQo(X+SEe(FJ_O\bNIobu\GNJ$PQ]f$k3?qlB18Hl)J9gmgV/Vgc7$rV`Dh^/G9;%q\H(_*;5]^,j#&lt;<span class="pl-c2"></span>%_BLW;;9f2H&#39;+4Z3eDftM2%`u&gt;0p@O5c]1Rg4nr25m,&lt;/hCWuf_ouQlLF0+U1]@D,k.sC^TnHJjM&#39;71Ve!&lt;/3^!GD??SDX0Q48,od<span class="pl-c2"></span>%o#R#4_h33V3H4VVo9cGJF.M9f[hitcqp#-4r:-:tI,XOahJ:(rD&gt;_&#39;i532CmjU93%Q/I%1.uk^$pY1egk](f!]]7oJesOTq%Z)&lt;i<span class="pl-c2"></span>%H$_[/h*)me3kr7Rcno4D%mKu?p[O`ngO@Bg3hN&gt;&lt;&gt;1&lt;3fJ*u+[MbYAgpHS&quot;g?gn$lEVGCCQ]L=50!?lLJ(2JWNoJ&#39;ek-+K&gt;DsfYd<span class="pl-c2"></span>%^%q@r5Ejn&gt;[s)cYjF\!Bo9]@+QZ&#39;&amp;(&lt;I)*fHD&lt;T_V**MtL2u68mVb-:b*.,+&amp;US`+0`LJt^AIolp&gt;UFF/\g[kV@MsI2f(^bh(OWO<span class="pl-c2"></span>%A*(p69f(5r?&lt;1G2lHS?pn+,^]V?sZdh&gt;(?KoY]e`S#[uh&gt;&gt;CCh%_L;8S]cG(H[c!@-Q,#$mXBY1\Eh[Np*%a(pUaKp-Msr;@m&gt;+X<span class="pl-c2"></span>%5(Ik?p\UG&lt;+8[+$6M&lt;)Tmtm_QmsOd#o^mMQp&lt;ERWRslkUkagG]Wo(BP@fgRc3_^_lm1c&lt;$j8RppkCh*lZi(F3X+LfLrPtOS)5JK]<span class="pl-c2"></span>%5O\nU%&lt;V5hY]H?&#39;ag1f`OL4%RV_\/*&quot;&amp;%0jh9),IWpr5^e+4[TjNG(!,kLrr@c0.oZ&#39;n+ZAGatcgu!R%H+!\(4YG\Ye5bP4hRr.*<span class="pl-c2"></span>%jg3^2a+l;S!UYNaXud_En_I&#39;o-PguIFa;S_RDc0+mRR&quot;ghj&amp;tpG41&gt;b5GJ\SZWL(c&#39;&gt;&lt;:SkhQ0A^V;&quot;.qf$p-[eBX(&#39;.M;;O!Z%C<span class="pl-c2"></span>%JDqWmY]&#39;IX)tm,NY]IEp*qp0erV,-+gUl&#39;U5(&#39;BH`U+-1l&amp;BDf-eesM9_&lt;)#D9(lcRWI!Hmbu.0rnDM&quot;\38O/iXi.d[_$gt]m72m<span class="pl-c2"></span>%.sJg&quot;Hpg+.g-,(PGCRAWGd=Z9\9,ABI;ZK7S%Yq.ff_FL[+3F\WGT&amp;SJ![;9k2u3Ql`7YpDf03pghc]20-I^``1@FDF(-A#&gt;nU&amp;,<span class="pl-c2"></span>%DK&gt;dRro(iqk5&lt;c[oPA?QqW?&amp;I`=n^iD=gS36c[Z&#39;eF`\$&quot;q8KbXY/Hm4PjD:T%V*UMsK-Lqks;T:%!ZeJVTV74e!O8??&quot;6bH*@W[<span class="pl-c2"></span>%2t,_qlG[Q&#39;MQ+i!ri&#39;U.CMe6)h*06YmPQT_lK4Y8E;03GIEH/*_bHB+]3jt$etCM^#M&quot;UZq9A6Ug\pR222+&#39;^j_?/IICCRI&gt;WY$t<span class="pl-c2"></span>%kjl;@K,s&#39;gH+/Nh\&amp;u9Z,5rrohN,KGI7r&lt;r[u[sVgD`k(De9dV\@[ZOSN5M&gt;hO#\%]&amp;f%E[rurAm.`&gt;5/*?h+\,!eJYPR3B&gt;^h$@<span class="pl-c2"></span>%r\U=DL5bT)a&lt;^&gt;B*kC6O8&quot;XUArp]4DnbW1Ol))nkO&lt;eb:)7&lt;hBg%!Wuh+r^d&lt;!th,?$(C%_:6n8P?4Kf@33&#39;t[_@7iiqEA7Zp%9(<span class="pl-c2"></span>%3&amp;UW21KK&lt;&amp;(dd.hX1R,Ab&gt;hmg#fEEdqr10UeM]W3nWAU/3%&gt;,\]sZZ,:Ts&lt;IipQ*ka4&#39;*@g0EDq4GE%5c!tB4+o\!&lt;?U(Hho=ML#<span class="pl-c2"></span>%K=6,9mW[PpJ,f5?Q&lt;QMfTQ-.9:b/6gj3g&#39;;Zm5&gt;jKsg-SUi5$4F4@QqG%-3XjCrt0I3if;b/O&gt;H&#39;,Qq&#39;gi^J[H1T;J&gt;FOAD-B,DC<span class="pl-c2"></span>%8cmeKoD=:j:2R)*PJuchH&amp;&#39;D#durS=pAQWHI,0*t?FF2bC4:S[s8Bi]f&#39;gt14G[ooHiLPKGh%,3ogr&lt;L_:Yq=&lt;B(6@4\_3Pj,;[@<span class="pl-c2"></span>%Zp;.g[h*H:%n0s?Q1Q-(6KFdcnS]&gt;aGCo[MhCbs\r;Le*P2!,lmj&lt;H$lc[B%nhF&gt;88?R&gt;Ac&#39;R=9r:s:FY$##l[P(2ZJ#Q?@Qa7C?<span class="pl-c2"></span>%*&amp;db\9#tA/./GQb\6jXRe[nRI)Sb$cV![]:hBIZGIenm$Ffso^-Q$]8p@/%B?%9&quot;q^42UA\F2c;rPSW#M]+_2Op$d9a8Hb\r6+K.<span class="pl-c2"></span>%cT=^g&amp;AZQ%_402Qgt5ohYV(VNoi&quot;A?c2-^i&lt;f(%;Eq5u4M`U*d=m0/U5Ge$;h4MG/[UaT2o3)m&#39;:T6V@,7:WN`5DKb.tnKuEX.g)<span class="pl-c2"></span>%eU\@r(i/!&gt;3,/*3X-;[1Fa&lt;Q.:KjAcs&#39;UCr6/rLToCK#`2uF6\A\9BfQ6u4BVk&lt;q],s@c^Y#=q^:[o6C:@tM6\9lPMcVtGMehQ&amp;V<span class="pl-c2"></span>%-b+;I0]&gt;bP.#[eO]i?Fap@J3%&gt;1pYsh@.uspjp=aT?tdZan3;a/(RbupZ_)6DB@);+bs_!e(\L0Fl0X2NjS1XX^PD$Y^u-krHqqC<span class="pl-c2"></span>%hhdW[&amp;sjb*dEaIaDf.5B]&gt;)&amp;9Dskn4SD:!aqLeq=SP:7T`dJ3E^::kfHqH*.kDJ=GWmP!OT;@aXIKu(_-EDfJQF(S&amp;oo8D#iHMd*<span class="pl-c2"></span>%hk/.Ek?F#Cj3C313e&#39;7Rs)EPgnFea)[X&lt;OFdBV_&gt;OXGnDn%QM#^Ur5bIJ-msBgjG!g-2TUf+V*[FT9^mRs0&lt;fbu6RdOIQcerWugX<span class="pl-c2"></span>%3ZDZQiFE.8UB5]/9G9T;4jqBSDP:86Bq+egmG5D$+Zc1CAE^&quot;6*TUUU5IN.-3@]H(HD,8pVQKCFjiJ[$9NGeRrjpR2bAT#LG5\e=<span class="pl-c2"></span>%rGp&lt;fSiG#&gt;28,OlY;,\$pQsM(B`5uIh&quot;sYNI&gt;@cs3Hj!ElgN\8^UcG?]E64-ZsDUj@I[i[h`J+O&gt;Nb]:7:RW&#39;mD.=&lt;hE@\_&gt;s6&amp;Z<span class="pl-c2"></span>%q+kqZ6m^]TjUq(QnbkOGA#035:DWLK5C2&amp;+q&quot;.2.Ab3s!c9034n6rEoLM]u?;cipR@sQ8C*LLB0H&lt;U=H@F%IDoighXoQi\U--jt-<span class="pl-c2"></span>%G&quot;k5N$L)![l&gt;6&gt;2;Vg&lt;NIJWmWncG]f*UZ:elfYVNlR`o],#h?$QX;n!&amp;`ilh*A6DcSWs)nrme2*pV2(,3=Od+K&lt;N&amp;UO5[8!L#(d5<span class="pl-c2"></span>%qjlGpG+FX)/,HLIh08ach8B%!K]_GV45s:*UsC1!&amp;=9[aJ&quot;Y[EQVS^@S5in^3mpj&gt;rSJ.`frEdKDr9pL3oMAT]=m^J4:19D&gt;7/%d<span class="pl-c2"></span>%fA$;XDW6iZ@Fp:Bmr/&amp;;G)s,^cc(?WajThWmcp&lt;,qiSOA3^_E-%H7(&#39;hHYFuZi0ga;mq79^1:IdX`*$b53(C9`b[7LG&amp;M94-^XE@<span class="pl-c2"></span>%VqDIiY`&amp;D%];]?$mXkucT&amp;ZZhF85,n4riG?CS.oIlO`cGRQT`&quot;Rl&#39;#B\.Ft7US&gt;alOdg,1kh.J,aR3mo8]TN/ZgAs$emd&amp;/ok&amp;i*<span class="pl-c2"></span>%BmiaUE_j6+&gt;4O8.=)Oe]:ukgG(+8oT(E`L759]3P:[pkjrTT&gt;+^Z_4b\^Nf$[9XiH1BRe13*rZO+=\ndKn-X?/o&amp;r(%P*I%.c#\N<span class="pl-c2"></span>%htfmo30u[6&lt;u\J-HhP^j^]guamQJ,t2/l\r.KN^?C&#39;,4j&lt;Db,7oe0L/F[3Sm04HECQd6&#39;s%1kmF?ZP&quot;Vq+0%1qol5jQm5]/k5#&lt;X<span class="pl-c2"></span>%$LYL^D=GC1``)uLk^-H=3:A4s8EiQXFm&lt;[+0]&#39;uc#+Oc:&gt;Bj!]=#XPik1&#39;Ib?3HVk@C.f`lZcL1[d;ndGue)j2hf[WRjp3qhm^4I<span class="pl-c2"></span>%qBAcCH@qb_YY9$&lt;IC-$]&lt;iGBSdWU&gt;KJ4d?FZ[NLcG^#holo&gt;Qk`NrHOa6&gt;K@_B]CbC2j@8WB@9J=F[S1&lt;PfQ]qt+$NID*!K+3KL6<span class="pl-c2"></span>%Q+!kD=N`@TVkUFqSD*Y**(#hZl8CX&amp;qB.Ea6!&gt;&gt;6&gt;cF*:m&gt;0&lt;&quot;2YDT.\;Ou%[V3YQZ;=QaWa&quot;nW%OpKC&lt;STII`O!-PNUetbWZCW.<span class="pl-c2"></span>%_Qun#r_#,D6go!Y:&amp;8[9iKDKOl?&#39;M^&gt;P5t3gcrF9?0)mGichPd_H9(@q(r,$GZGG&#39;*N.kt;5bL\#h&amp;QU:l8&gt;,pc_6CK(L^oblmBJ<span class="pl-c2"></span>%A(0[%rr1e:l1pPF&lt;4kklo#&lt;S^B,lgre18gd/&lt;q@$.#rJ%.OO&gt;mai/IoMN&#39;NPc8bPiLYVnh5fqUo1&amp;&gt;Q*?6/dZZ[&#39;I`nSV=6mf;1[<span class="pl-c2"></span>%:8D&gt;`Q%&amp;A1c\JZ/5K4Rc2$7-/d&gt;7_nbu@4]&#39;:noPh/@VGI]7,K7i,IkAlf&amp;_:OU&quot;-Xe3o&gt;@&gt;J:bG-N)^k%k4f`2Im)2KuY3,BDjZ<span class="pl-c2"></span>%2HME%(LRJjXJH5HinAlt7,7X2Wdo3H$X,28.WeeT+a=(lOKa3&quot;8KdqrFbNke:uo&amp;QmO69&lt;qkcFU&#39;lNZ,%O-q$@c-P$0mbA]cMdM%<span class="pl-c2"></span>%kq&amp;9HV@]=fjHB17,;4-,CT+VU$.&lt;A+1^A`Z]@p,@HO&amp;nP$YPhT[Jm&amp;OTTP,Edq#Xp=N814THAB*eu=&lt;k`rLp]d(eMLN+Uqn/`Yan<span class="pl-c2"></span>%aNNH2QN0&#39;Pg??c6&amp;_NHNd?cc#WLYYLoQ@Z;H&lt;!!?a4HA/287ZE(metVl3T+)c(`JC/X_1`p!m*0[*;!QqS\^a^Wq+X&gt;%B/[BXQ&lt;u<span class="pl-c2"></span>%g5)X-n;;`r0VR`.\QZ\j^CtJP[6nVE`#f$0pS&#39;Q,GSfOd/^()t%khQn&gt;EquOs+Ad;lp&#39;`&amp;Lp.3&gt;/l[QXoX-NZ\*7Q4]T9A0g39=@<span class="pl-c2"></span>%ci3&#39;!Vq3Gl+4o7trN00!=pd_S`*%\p367HX*;_7]F0$s%`Do^+G&quot;+)P2&#39;f.YXC8c^ee^!BQ3`:E7f&#39;&gt;?HCLB5RB&#39;5Dk&amp;&lt;EeWZKc;<span class="pl-c2"></span>%^p4DG5X&gt;BaMf+58G`bEja(ST4!ek%UZsc9,oEl0R=JEZi^j*&amp;RdZfP&quot;dCW;X%e7.)H-Esf22i,DAsst&lt;Te&lt;!H8s:n2FX+B]1_2YW<span class="pl-c2"></span>%&#39;IT2M4rp:#=utIB7A-\5XCA20PO@i9!7n*5I=;/$&amp;.`0.73U+^=@31%Ym7LfMGNaB%aahJf&amp;.#bF1),g=e&lt;&gt;kL&lt;U7e&quot;N1s?&#39;@[6n<span class="pl-c2"></span>%%j:CHp)r;p,\BR2%ra&#39;85SA7UqQ_KQ-L2)BP*%]M&lt;SI-PMMG\7A]tlNB:k4[G8VmV%pk$9m;+n91tO#A.9a]L(D`(i&quot;&lt;+J:!U%/X<span class="pl-c2"></span>%/RYSqcepP?#X\2oB7uo7_$PpQYkC&quot;FBS=&#39;&lt;[3HGsr;7+L%_5@_bR\;ko]D.&quot;Duu#cDuf:u)SOf;2b&#39;@0_D/[%*S)q;G.:R&quot;ia(OD<span class="pl-c2"></span>%Po5XV!N3uBo@us+a&#39;/i%r&quot;L2raBRIlPVhcT&#39;!CYQ2&#39;jlOg;T+6n%uG`6!:FlT6i&quot;T)hYeqTR*Gu?J_m4HdVh5Q?Rq:[d&lt;trMKWqP<span class="pl-c2"></span>%d&amp;+\8@EA?\l)2a!d1udOT437J]Dh0\j6Q&gt;#VM3.Iq&gt;aC\:r+q!QXiLWM_+^8l,#L&quot;RPhcZ1_FHOm$0+^ad,WFOq(*3!T,D[oTm&quot;8<span class="pl-c2"></span>%&quot;,&gt;F@pZ7[1=1s]l(^mQAViYJJ\mu*k:b(=e;X@5D%U^s+&quot;Bt0&gt;*PfB&#39;-=Wf45X:6!3nG1i)](kS&#39;j&amp;0\!a?[!NR[TZF-_HV,pXIX<span class="pl-c2"></span>%G/f?&#39;ljU&quot;-osnh&lt;PRSG&#39;%LJ6&quot;+&lt;RrmNoS5F^&#39;T/t8bC9cB^C==gc:I[&amp;dsde5sJ1%%ofr[T`A(+`XMs@0#fr&lt;&amp;9S,gmj35:Og6#+<span class="pl-c2"></span>%Te%Hj96]&#39;,HLZ:*Wu6SX8_U[]O%&#39;d?i&#39;HI,2hAKP=#7(+&gt;?TH=DFPg2S$/pTTSfQDOh&quot;FS`!Bt$_/s0j6g-=T;0\q4=WSN[VqR1t<span class="pl-c2"></span>%:7lf1,pGiLBL4se[#E]i&quot;QVmOjl8r=+JA;DO9.2?e6q`dV755U*.K%p2gQIVTA-b)ismdd[jn#q@K=YKVIF&quot;&quot;i@jD86OYq\KS]^5<span class="pl-c2"></span>%&amp;&amp;BLp%+l*m$t_7[+UsVDA%9.(6&quot;]Lh0Z,%:O=j#S$O405)E&gt;DR&quot;lpR4J:3d=k`$CF=jHb],mNF^&#39;q6&amp;%F2La=$lGW\&quot;q4VB!K,+P<span class="pl-c2"></span>%=L=)=H8SA&#39;aK=[bTFl$q6885@e3Ofm#*d)_kO]thqnp4*0eiZ1r7mN]9S,O4AI[r:O&gt;5+=g`HT#cQi`,p9HA]@_b6L,Q8@t`.7))<span class="pl-c2"></span>%$o-ZGX-f*la`)`#!BE/:Xhg&quot;[d.I**1_e0XAb4XFeE:4[:D+ZFbqfQ=3sG2q=b-b++br#]JT-^!3$=qP*G7$Ik&amp;p80K9=2C.:J7P<span class="pl-c2"></span>%\hqfgUK,KL/Ff*[SUfX+oA]D!0[;M_Wn1nC?rK^R*,KA7&amp;&lt;)745_F\05iXjpDoS3*;&#39;uisbg+q%2-=e;CM!@+(EI_^?k#)8Yc6T`<span class="pl-c2"></span>%)]UD:1C&amp;9^+`B5PE*#c;-Wj&quot;gHO^kuGUg44X\Bq78^=8R.Rq+7&#39;(D-LE&lt;(B;;ek?p=/qCG^!::+)j[[J?&amp;D$iK.)C&lt;h^2aLBuarJ<span class="pl-c2"></span>%GRj[)U_&amp;gKb`Jc$TTeA2_=ed\HN&quot;.cHKo4s6_;)$/K4FWEI&amp;RGol4f;,1L&quot;@h7uIb!m)pn*V6Y=V_I4_\$js?RPO;P/(RHK/j0&lt;s<span class="pl-c2"></span>%&gt;SQ7X+!/3(RuYibOND(eH&quot;)t&#39;`!g&gt;RQ8SrsIM58B[isT.K&#39;,k&amp;0PZ6dmN?g5amb(@Jel$bT#s&lt;O^&gt;F03Jg,(3%&#39;&gt;,\*b**;NHQ&#39;%<span class="pl-c2"></span>%-O:Ek(aWMTYoo^b(L2&lt;opB)?t+SJh91iGoqq;brL$qT3RHnrN;1IR=^#6BI&#39;D3VAH+L-Ij-P&gt;&gt;63fQsHgEI0^SSa:JW8lU]/hn0[<span class="pl-c2"></span>%TSi&#39;qM!PAoN7btV8LBT`)Q8:DG6==j1,A#14]XL]SogUU,2\Xc&quot;YksT&amp;L5Dj_,6A;\Rn&lt;FCRdP3f$7jR.9s@GN3s[r-d&gt;FIHuPY[<span class="pl-c2"></span>%P.^nZH+XFC4JQi+oSN72J:mS95\!!Qa7V.K1\uVJ&amp;*D=f3LJ,P*cpg^Zo(QA*R#mRZNe!kRq9fVY]k+s5!q+1*.s!&#39;)e7+T!&quot;J(3<span class="pl-c2"></span>%^p4DG#,]P/3iBSE\BjBS#?`Pf$&gt;J9Cm?s^5i&#39;*os!&quot;SF\4V@l71$G&lt;_R?Xdn!e^B/7^T8I&amp;qKO\57+HNN&lt;;TU/DKYWE44Fh&#39;Z#8o<span class="pl-c2"></span>%+JUC7N&gt;VTV0lA`5VTtN/b)-iL^_R@?-D7@Y&gt;[V;FdWj5oPq7o5MOm4D.g#O&lt;0O%&lt;hMTBRLaURL_dJ.JgI@&gt;9%WEgcSjk_2i,q^$B<span class="pl-c2"></span>%$lWiF7?dg6kQ%TRqU]dM=,f!W5S&#39;@m9ns&quot;4.1u]m&amp;+Jq1De5P.#Wb2Bn1&gt;ccJsA%BbVn+XgV@FDC&quot;`[G/)#3dK4K=:[jdHJUkAd.<span class="pl-c2"></span>%*NdrsCR:qT96rc3&quot;17T4p,Hnh--7[Z&amp;1D-;O&gt;D:.LPrk&quot;69N(SV]-Xs(aRrM$V&gt;2V*@0Ke=WZBDSb&gt;tO0bdSqM$K]f&#39;$hE-C?O9&#39;<span class="pl-c2"></span>%UdN5**$Dpur$&gt;`NEQIqkYZK\q9\&gt;$gjRt1F5rP4fFD,us=Eh`&gt;iCo=&gt;beEX*Y]anM4&quot;s%&lt;76*kJp1WocI6(YF7hh!P=pFsc#:-7s<span class="pl-c2"></span>%ehu7(Z#pLH&lt;Gh&#39;g7V:BTLWf%$&#39;u&amp;B+-o^!K6&amp;#Zi++`_8*!QtkD[552N!!R$)f7hMo7&gt;#\,ZUD_3QMfl@0fOub&quot;?qFq^X((X]uc-<span class="pl-c2"></span>%l-24T&lt;dr2&gt;=`eDBI:*+C&lt;;3JmVfBsHi&quot;Pft1(a5f%&amp;Cdnj&lt;LO3&quot;p,mE]-fFR!Y#7J&quot;LP/4Kh]r_5&gt;&lt;192@K^H^StM1OBBg_@rB1L<span class="pl-c2"></span>%i3O#e@3G&amp;&quot;!6&amp;=hn:NtlohRBk&lt;l7&gt;`UBb74]9%Q\qUQQq1(aq^R0\1:Uc&amp;m;B5*@6BJL0E(&gt;+usR#-@kirnPh7,Tjtc&lt;f`A1^)A1<span class="pl-c2"></span>%KSb61Xq1jN[!&quot;`ka[G&amp;s#3iI;&amp;JWu9&quot;J59JN1IjUi9fKkC]lq$r&gt;8!*O&amp;pKQs*\qJQ5Dg&lt;RkWP6U(?70F&lt;T_:YSE5Vc_9fqJC+%8<span class="pl-c2"></span>%Qf5RacIP&#39;2&amp;&lt;jiKZ]1)3[&lt;AWZ;SQ;(hZ-A(JcSS51O:i?c5:]PpPdd&quot;mBD&gt;E\&amp;5W=(6jHLnTk73qB!sbcF?&quot;O4pIN!f&amp;JCY@&lt;Jt!<span class="pl-c2"></span>%[(W&amp;^PKmeB6?[Aaf&gt;3\8Xr&gt;7r8fu)S0*Xc-j6AB@(&lt;1Ari/9_)4t^&gt;lXAt;5&quot;P*?.[X&quot;.BdeZX&amp;#l?5KgBXiV(M5tX9^Ukjd=[f(<span class="pl-c2"></span>%BN&quot;^9fYj*&#39;\EiNe!@PjI)f1]iXc9FrN,^-`J7rf=*nJ`a\7A.)Y366X.t/JE/Gu_=nO!Oi9Z]75HS@_H#&amp;lo/A*af&#39;@W&amp;]WonW]0<span class="pl-c2"></span>%8IlIGdK&gt;&amp;0X4+e-0\M)&gt;GN=2+l6JH5C3:p&lt;o]7-EkY&amp;An:.&lt;nl7oLe__(CRg5=Sn:Z\%6lJVN5&gt;J&lt;T%JJ&lt;1`dIKJh-E*+&quot;iD\=$*<span class="pl-c2"></span>%k3qVt)[nF=#(T`FLEX-X6Y^R5JcH%TJbDX#mqaNA%&lt;^-#QGJf[h/l\T:#6#k+Z)1IooSiX+TO137&quot;t^sM8;G5$6J.EUYo$\IqO%8<span class="pl-c2"></span>%@J^kUO$d5UMESG1(RA&gt;!&gt;J*oC9D&lt;QT/M,*HY$/rB&gt;USBLJ;19^?m[EU.:A4LI2R2&#39;6WTj&#39;$Q(;9C`J_qT4Lj?+Y#$gP4,b`=jRYQ<span class="pl-c2"></span>%_G\5^jhMccV%2&gt;lpN@ttKGgN$;O0V`a0ll]*rFMp*/G;2l];gH+lNr&#39;@&gt;VF?8.%uuTQ:#;1eA#VBTg4FJbS33,*@PdUd-`8.nO.]<span class="pl-c2"></span>%Ap7,r/K#b`O;+&quot;TABYtNI2ddT&amp;X&amp;STF7DYDCRnIoXXRE`Kk=hchWdgAGf,d#eK&amp;YQ8sQqHiWX+&#39;2(:&lt;;GX*%r&lt;a*_d;u66^_PAWl<span class="pl-c2"></span>%&lt;m+&lt;J*`(KhR#&gt;kq&gt;;N&lt;6-f@g0%\TdT(LJm0(q&gt;8$8Qos]&#39;rK2o66_&lt;&#39;O[U.b;#l]*2dtb[jk($pkfkrUTWo)XV7CEeiCVYKHDaB_<span class="pl-c2"></span>%PSP1QPa2NqkdQ(1&quot;%Skc$__rO1D6gkjKpYSRTWFsp]TLd$gD?)!$d5e&lt;0W%JZGT$u\L\KF%&#39;::M,#_&gt;kp7Mg/ASVbGOMc5kk!JVV<span class="pl-c2"></span>%!,*_bEY%!e1&quot;$VIn&#39;dNMJ0&lt;3W7Pp*o=[iV&gt;W?Bi%9IrinKMCo*bFeqVYkd%BodOdohkSk=6k4peO9qV&amp;nS:XX45#d&quot;O)I;S9MY.,<span class="pl-c2"></span>%%:GsJ*MSM]6:R&lt;_G,2]_$$p/se1&quot;$g;\eQ04i-uZjMR&quot;s&quot;:&gt;%4&quot;0tI!#%G8d3&lt;2++NWhgjGH&gt;&lt;CBMV!YMJ&gt;__OX=)@&amp;$_0uAKHj;<span class="pl-c2"></span>%!(Yn.&lt;[B+o)g*#`6$Wl&quot;J:2Y7e&#39;&lt;Vl)1f8l6c,3.GP4r,KLlBuKsL9rFsLKCj@(LB36]&lt;+o_p1GD[-hd6V:C&quot;&lt;*UHr$:s]!8QEZV<span class="pl-c2"></span>%&amp;$#9TUa&gt;K$NkEGa&amp;ZsE&gt;&amp;dWE&amp;_`G.&gt;F&amp;!.CD)s?S&quot;[32I7i2YU]@t+UF3b3SiT5.$T732Qg8%&quot;DrEr^BZND&lt;Tia&amp;[:(&amp;Jgr]J=fQ<span class="pl-c2"></span>%8:[/;!f2!eS_rsKDAG;Am:2XsKes1m)7b1KQX(lqG5\5t)GJ=F`uo$LHF-iY.^EBmnjl39GJ+&amp;I)?+@T&amp;t0.gFkU%^LG[^:8[b!A<span class="pl-c2"></span>%mR5r^DT;dDI/&amp;,@ZjVQ*![-YhBd/WH0cfc_NE3d7^/.&lt;\@&quot;8&amp;a5Ejla$dn-LL=r\K=_HGAP]UIJ,/]tUb(fsD6X4YEA5Hoo8m[CB<span class="pl-c2"></span>%;Ihiii]XG&quot;O3oKZ,D^cCQq4J+8H8W\;CPYXC_R)o&gt;=Pda\3^L3AD=C@MkWqDq(aGALB-kAaj*Z+K%!#,OHiS6Id.D2A-NsL+5quY<span class="pl-c2"></span>%+H5rPqa3lf#*ShZ/UHsal\&lt;rp&amp;t3`N7kg&gt;W+Z3+XT=#P(\3!RhK;&#39;$IOc*Q&lt;::$*f#Y@V=RF5gg&#39;^P?Z5;emYVRedJM?\b\@!2=W<span class="pl-c2"></span>%9U(R&gt;)M]U#GTVm_O92t;3f-&amp;gU,QifM5O*CFHYLa%ZHXUdJL@5f075=;&#39;4qDU^CL+[_;0`q1M?]Q_39C&#39;.)c`Keo&gt;DKnK-eT`P&quot;%<span class="pl-c2"></span>%b:F&#39;&quot;db&amp;=;ecj&lt;UcE&#39;LK=YsUG8`9R*0:TCcMS1kFKkJdq+A!C+m)Dub/l-sRC:[bH+&#39;mSRl%m3k0OD][&amp;Ao[9YgM!2UCY\gpi5&quot;c<span class="pl-c2"></span>%=[QOZ285YjIAoPJI*0$aeSpb)&gt;@aGT#W7_E?)t@X-S+JAE)29;Xe/f8Lc8)6@;=tAkO:SB:sgM!&#39;e=gqXWjZ3geZhPfTcBfQj2!`<span class="pl-c2"></span>%P@G[$C^$AO#rSJB8LnhSa%FIe753&#39;h&quot;)ZpDn\&gt;/r\!K&amp;1Ok@7V:Y.D,9%0gY7fF&quot;4-Nk(15aRZ(d&quot;1u=6_NZ(8:@6!+6.le&#39;&lt;`eP<span class="pl-c2"></span>%V5qVeH,D&quot;-(DaR4euj8)_kTOJ8nC&lt;olE&gt;_!gC@C_6NKS3\&gt;ttB#-:afU)_s=ANb&lt;j8.l/&amp;rm2:/0NT?UJTFCs,.1X&gt;O!Z&quot;*/p\S.<span class="pl-c2"></span>%I%-?*,@dVkec79r0T`mKY;Qt\&gt;LjRkAg@#VErp.03:b@X4`UOb#$d27ffSWCO&#39;&gt;A.ZqJ!Di/D8E*8&gt;2CM-;!rS5F&amp;l6,)pH$&lt;&#39;O;<span class="pl-c2"></span>%kbGf#*P(hg8T&lt;bBcmUO2pqdBV\j3jpH/3Ac[?0d4l1Y2:&#39;i^0o!,K#=FT\*h#T+O?`h\gl3R5mj[7M33&#39;i:cMema=3B^s(`3b*&lt;p<span class="pl-c2"></span>%9,\TeM0*qs;J6&amp;AjY6rfWusgN!aqo218?WC?J%Ue#::=M!`4E`!uQP&quot;R(EZ5*L)g8XEXk^-aK(d*c_FtZ(uQQU`ej2!Q9l`M!KS7<span class="pl-c2"></span>%$\]f%4HUk@PTb&gt;k/6*^Q4&gt;%L!3cS`fYE,%cG6$X%:&gt;D\Slh_l&gt;8*Mdr*0\NPfXrnH5TL8GZ&quot;?SQV&gt;!S&quot;;&amp;HZ(dYk5K(;2H%)L.Kd<span class="pl-c2"></span>%q?EE7FG$!3^/X)2ZQB606);c48HmR!!M-U#8PT:A`R8*+mVA-88^&quot;UJG*&amp;I&gt;/jhs4;RL&quot;i0Z&#39;8n\J,V%8`Nu8K0&#39;D&#39;Um&gt;&#39;.&amp;C;dI<span class="pl-c2"></span>%&quot;EX]fUhS;aYU!P$=\7gM^ogHGq@XU.?$%E5_$G;P#A=as#B1m$[#EOLc*0c%-^Cg#*[0X,i`sOS$aSiMG3CM]1??O(WdpVHl*M.8<span class="pl-c2"></span>%iq\+!eG&#39;&lt;[&quot;Q`0_a1LMt]PuIYd,U:Q%Zb6r!hePCdrcOa&#39;o$$k?o0)5W.WA(KL&amp;W&quot;Va.lXNar,RD(mo,:lPd&#39;+UU]T4)6a?AXsjD<span class="pl-c2"></span>%PkcM$k,sd=H3+^S5tk_[XWZ&gt;lA:)*m4+5U)Wt#Gm4#8u01go&quot;3,pbTTI&amp;Yl)]#`?C``h&lt;[[m=m-P+L$`2dtdbV34tkhMnn&amp;1Q96_<span class="pl-c2"></span>%d\T!Qr&amp;ZGErH89$D8PgXLG%&quot;.&#39;U1u,_Ar*0NfhV2dJ?9;&#39;C;g&lt;-lZ)-RS6QrNj#]8I5*\Ir)N!/kg#CSRPU=n76OJRh`PDA$j%Q&quot;<span class="pl-c2"></span>%gUSk1;apueKgtTcGLDM7ge`KbI&gt;?TXH/MF](R[u&amp;;CucY&#39;@DSVliYYMG1r%&quot;%J2N=i\=%&lt;?j@uO1!/uI.-mcVXZ3174@,OG+&quot;O3I<span class="pl-c2"></span>%R9KlV-231X&#39;JJN/-N,sUkjt\tJiZA?:HEM6UiQNGIMFH0N9of/e\KIZ0,gsp6aD^`&#39;m-^&#39;E[))&amp;&amp;Y7i+[o@&quot;h,jWVR0!],[O%2H&#39;<span class="pl-c2"></span>%h?66-p&#39;Pn-l&amp;%MJ#p#M5G&#39;&amp;n3okJS\O=\&quot;4*s+pR8SH)u&lt;U)+HA]Tt4nW9T^h?-/Q;LAe#C!CJn,e*&quot;8&amp;(`h)[&lt;+%2o(R:n!/4PH<span class="pl-c2"></span>%f^pr2VHJPOY)NiJ2&quot;(ps3[&amp;h!A_N@s9j0!%k?--([ED^&gt;f)fp-FqgSWaW@i0[-MA*4-S&#39;]JP$uY%cDr@+VQ2TaJu#uk]@8:0q(&gt;7<span class="pl-c2"></span>%o@=l?)CGpbEXSp!It5CXOoXJKG&gt;RH5&quot;Or,^4\Dp4&quot;;#&#39;=^o*r5Ojf/q&lt;2(iuj?h9`fn\5;1-iDP&#39;&quot;hc!3&amp;%cP)5&lt;Bc_`Vrlit38C<span class="pl-c2"></span>%!=3Znp*!gm)H&amp;IFfV[&#39;inLO\&quot;A`a*QK^?MmZ7idV_6:(/&quot;q?r&#39;/EeW&amp;1)Qrb-YgG/2\YeBc9;DlK9En^4OPhP1-&amp;+te?H]B&gt;boQ0<span class="pl-c2"></span>%oiK@TJ&gt;Tqr^eP(gD?;6?/]Je6kX)V$nbbj&lt;ihC-[H=r/k%mWH#@fdG5]@)4o`K&quot;(m#pldmLH&amp;no@OWmC3X:fuFKRnK&quot;]-#\gpVf?<span class="pl-c2"></span>%$$iU.N,P&gt;qqZ$H(\fNqN)u&lt;lKs22PfBF=s.AgGXF@iD.3!#P#iPL`OLG&amp;uUF\@.%_entG8LEG]@F(aOB`E?q$;%uT!&#39;Q:nQM=ann<span class="pl-c2"></span>%@LE?Op4_c^F^-Yq;.K526FD58SL$!&lt;;pgj^Yq\^G4HfGHH=:4D;@Ckd9&#39;csQ9*dMnPr`7RM?_=mJeX/&quot;W5hY&gt;TQoN%KhBo#]L.st<span class="pl-c2"></span>%2Gd7/eoCl\&amp;9O%fb%r30lCJk-S%QWnh&lt;5d;r;e/G.i&gt;e&amp;hDK&gt;mm.Nk`:_:$3R[dNG)em--,`*C:8C\n3n0=Kg/ot\Ne1lu?9r7-C<span class="pl-c2"></span>%I8@^W3]JR&#39;jZ;;4M%&quot;6+[/_$4:EX57&gt;S/sD^uQrP9Io0D.8YCBGF&#39;Su):]?L^Ef!Q0$WoD5i@efU4fI9^8qg)biE4b&#39;XH2^L&gt;eKC<span class="pl-c2"></span>%3]Jgn-f/KTC&amp;$s]OXr26&#39;&amp;uk5lESn)l7Fr0omJ0)]=GN]//9;h?\N+n3[rM&gt;2BE2UTFmn2i3&quot;98YBQi=C(rEB#GB*gfg3[#G&gt;@,8<span class="pl-c2"></span>%,V+tP&lt;c]&lt;j-_s#UJ7W&#39;N1p*c/k&gt;agsoi_dLaV=P%A@o[m-&#39;LJ&lt;T&quot;DpcPjJKo\%1DO&quot;ZR7+M:W0e$COs;Tsl&#39;54o31@@Vmk2aiNV3<span class="pl-c2"></span>%jlM&quot;$7P_Hd0qgAo]KoBHF_WH`0nlm4?T6^o!eV*:9ICXJdlJi&quot;(q)m&lt;m8-N)ERn3k:#Tg$V;$UI29&#39;@\W;NHC/[[a+?NQr![$KJ%<span class="pl-c2"></span>%PO;Y!-cV^md!_r3@hVK`^NG.&gt;$Df&#39;Qjpl]4RdS?TDX&quot;Ai6MV@_[B064r0bo[AV&gt;-jX:H`D5(]L*$C(p_?\.=bb-)TG!p&lt;+N_LPCF<span class="pl-c2"></span>%RGs;0eL.2QgC;iCn68/nU87Tq&amp;NYlRo7K\)eTY=tWkMKi!ofTem7WP@:FkhcKVA7n)&lt;[&lt;]qpp%Q6]^t*/N8P^RG\u=l+W_[ar-?o<span class="pl-c2"></span>%EcG[5*i^ldV&quot;t-$eQ9bMU=2ln:CZ+rX9gr5T&quot;=C7,qDTq6K&quot;&gt;KU%]G[s3SSe&amp;&quot;pQ($CN&quot;n+NkOu3A=FT5kj;iEEV5CD&quot;.D&quot;&#39;XmOL<span class="pl-c2"></span>%VGo-WMY!R+FZ5O(c5&#39;&#39;nL4WbX/IBQoLlJP40&amp;&#39;Xs]s5.P`k/?Nh_#A9?HMZFnHS(1rfHB[]@YX(OeE#!@2*D\4/2pd5n37MKM&#39;Lu<span class="pl-c2"></span>%,G].lc3c&gt;p/80rQ_3&amp;5E&lt;3=%3L1gYPgau]F&gt;+F,1)CeP?g]`F8?!ia8WrjaV3bC438.h(IU2F9=gdT@U,&lt;&gt;15)jr4?+&#39;P=-A0,c(<span class="pl-c2"></span>%U1E&amp;SM`cccH]B[KFeL$*9aa!.SWlf&#39;;mQ8jB[%eYF/dcbrb-4BB&gt;&quot;MV\XE=&lt;d7qUQ^bp`Zk7&amp;jNjT`&gt;$^Mg3&gt;PoK(EW8S50)kgAR<span class="pl-c2"></span>%DbR)dMBp&quot;hI5/_X_.D_j:)ICJP&gt;JunP,46PK5=i;q&amp;gr!(&amp;-\fmSGI)93.VRrK^Wq=E&lt;&lt;IimekK&lt;?4m=]b6^Ong&amp;]c7qnsZ9j?ir<span class="pl-c2"></span>%$qV&#39;iY@g=DEX1F2dcXK9bbMu&gt;6+gmHgEImUdaf(;CXIi=U4&gt;_&#39;p]=^Y0T?:!VJ.$0U)FeT8.e/JIH0P$C`[3&gt;!O$CL@Ba9KenL5*<span class="pl-c2"></span>%M.YN&gt;*.s-K=B&amp;AfVKp)3cbdq9q[Jj)+IKCX*#XUM&gt;9&#39;XcHcpN$kuKfiMU*2&gt;QoTH1]VL9`!T.dg&amp;UH9!ae5mkB&#39;b&amp;T&gt;)9V&#39;LW,\m<span class="pl-c2"></span>%&amp;K&quot;XQGP\k`jh6Pn;%4O$YV8?JbL`\S:9mLLG&quot;@XomG!J,gc)1LKe`9AoV3)e[1qqYj5t0?6qc9J$]W)d7kMa.T\Er!]:A)MLMpCa<span class="pl-c2"></span>%qGF6+$eSN,\C4Ja%%m$&#39;%WpifU^:G&quot;Ap&lt;AM\:h&#39;u&gt;S*&gt;E;t7$A`_f&#39;Gf@V\qA4W&quot;m_&amp;VR?9QV&#39;n0RXm19UX+Cg$JRHJ-U(\crWnd<span class="pl-c2"></span>%7A&quot;usdfgXGTWqDG!po8_K&lt;bq0&amp;lYRlaMOf/RW]7N3WO/s;rJT0@FA!h*_G:o%)dZaeGWnTrec+HeOXfl&gt;&quot;i@hEW[dAICqNDFdf,_<span class="pl-c2"></span>%GWZNAqh?*O3M_&#39;G,+&quot;rtl]AmoQLlG1?M\Lp&gt;-ZA74&quot;6&amp;aI1q&quot;!_:!9/\&quot;=FAUg=21h3GQ_#=g7PLW8mElL;dY9;D,W@hZkMF@&#39;u$<span class="pl-c2"></span>%,^tF&lt;]ND[?g^PA@/]/4CYFHTSRRZJG:SMF)49?*,rO*I5M=&#39;1GM8=Q_.$FcK&gt;WW.Wme*sbQJ6qV^st)=?K^H(Jr//9Q]m=A?tq;/<span class="pl-c2"></span>%]\mB,[_4@g[XJOI=[FJ`&amp;D!-%/dV8s8T6E`Cc$3=?KkY:TQ&lt;=k=R01DMdGC0kq!mg12W,m&#39;IX7rE=tQRRkmmhqSp&lt;7oP3]6VVn8Y<span class="pl-c2"></span>%%^j@P8!@;AZ&amp;KjGh^5`3Ds=4\THK\&amp;A5GIf5Y9E\]IO7t9Ujk`0hr?PKLptS8g9nu6cqlS^@%4h+r\ES8IO,Q&lt;j&quot;=6JV]Ms%eUKW<span class="pl-c2"></span>%*?(&gt;sP1IIE&#39;I])DnBm@g==V&lt;^:(%tOe-8Tk$BkV60M*3;L%N&#39;J-rmUS&amp;LM4E/fTgY16Z5CUZmJNT+4_]2S1@b\d;RM\r&#39;#cOq;,^<span class="pl-c2"></span>%6p=&amp;CX&amp;6S@&amp;`^nWdQtj/1I?+oORc-g1?kU%.AF#Q:)dNrf&quot;1Xs+^Z9k\]EbAUi3_Mq)h_H6.f5*WYlsnA;Y&#39;J0\hO/E3$CIFE(3Q<span class="pl-c2"></span>%LqG(.o*gg,`D&#39;$V,#cGF=8&gt;&lt;D50O,,%O?p2H*YO:&#39;f&lt;Au8qU&gt;&#39;:7%Ym?6m^08WtOaM9NI7O#.GsG@K$W1_D7$VM$Wbo#Apb#AGA^<span class="pl-c2"></span>%8jBn]@%,/^ea+#D_bi3CjpW=Ki:R(:&#39;hEI&amp;\&amp;e!hagt1e]&quot;7JM/SV?D(h*&quot;=Gpfn&gt;Fh&amp;C8lO5,H&#39;?skeELhI?]=G,H@rs$PYf&gt;--<span class="pl-c2"></span>%Q4_\Ph?2FDcs*&quot;t(?uI`d,S(-QXT#&quot;/Eke%%]S\)@D&gt;H9&gt;V49=^@&lt;AMGI]G@+W6@q&amp;K&quot;+q,r$+(2\Or&quot;=ho1be6C!:_9D&quot;!5o1&amp;d<span class="pl-c2"></span>%#g\*5nce2X/@(/Sq[C&gt;UX0W&quot;1H&lt;5U=&quot;sdoWDPTWu:3m`0ecVJI9:Oor.%h38L]en])db*tOm!OAE0-h&gt;?()VEG+Pb6bMrK_k[/jr<span class="pl-c2"></span>%j6HLk[D.#f8+/LS&#39;[\pj;n4Ju]o9BQgs#j0=&gt;Y;Wi\!GPcnlR_W/P`]3u[Ku$&amp;p:nX[HTsNV2c5$)&#39;.cirl`T=M4\p&#39;_qbMm=M$C<span class="pl-c2"></span>%H#,1A&quot;$k;!j%FLY#]?Yb=thj[2=13S=r:Tqe-Zk=^N&gt;sLoF\/jp6&lt;:&lt;0WIUs.CnQSG,/p?(WX(:QAC\L&amp;&lt;&gt;C2mr)TX:(3&gt;F*c!K8<span class="pl-c2"></span>%#%\[G($&amp;eSZ&quot;cs;gZi)6//V3Eqg\gd2q@Xp$Lr.XdPMtG-ua9=c2%Ijg2emC86F9^F66:mN06mE&amp;qIVHR71?,GU&lt;f%W)&quot;sg6*K5K<span class="pl-c2"></span>%at/ht3m&#39;N/Noth!&lt;OLs$0fEp9R@B9VAo9OkgZLYHos[3oS5,YX./u1bMN];fS(L1GN.BKu$:fQnoR`Y9.;u:aR=DD\lVA9`hBIK6<span class="pl-c2"></span>%Tt$!e0V.L)B4&#39;Va^a3m?&#39;=`(/YVurtL(mdB&gt;&gt;@UKJV3T#onfJ1*J9sL%J4=04FJ:Th&amp;IF,&#39;qT]Xkb23UM]&quot;1;,a:BOHAE,5otn^r<span class="pl-c2"></span>%L_&#39;nQk-:]n@FZs,&amp;&lt;?&#39;s5$G=-M@h=:[$./Hn?&gt;2&lt;M!&lt;HR22rHHr7ctC(njFAG/#iP#g]j88Z&amp;MI=LUYV0S&#39;f\%$321iKn]+(no$I<span class="pl-c2"></span>%cT-T10hMWVA^tYC%0&#39;=%kE;\k8uNW-#I&#39;)#j4A[1ne4F2L&#39;SHmX)C+2Y8p=T-4D;V#m9PA`U!](6RN:#NheA&amp;7a&gt;ZH?!smd&quot;2m2j<span class="pl-c2"></span>%72h^tMA,84XF_ltW+T&gt;0h&quot;X$U!L&quot;[2buQ#W$?]8g5^NQH6\bT=RVs_j99DQ&#39;k#LX_.1E2RF\#=s$548=_R#V4Fgm+mONnF7+Tr-(<span class="pl-c2"></span>%4F)4&lt;G._.kg)EDSlu3:]&#39;rf[lON)5*!LqP&lt;hB?Xi0E\&quot;&amp;oG&amp;K0_82k3m7+j*os5QHXR:bl\qT#5fMIiSR@D$g/5GfFk;sUQ&gt;F0uc<span class="pl-c2"></span>%)^&amp;GCU/CHC?/?clJ?k&#39;cjjcjfes(8sASb(Lo`@`&lt;DZ\mn`n0Fs7^&#39;qqNR7o89T3=?c.*m)XPRl=Glp_mDpa5pp#trNQsAM&gt;2iZR?<span class="pl-c2"></span>%]:jYF_3D*b5j7p9WEWS!f-hP!=I2CdL:ij/OQdZP;g*&lt;=\&lt;WEW@J[6nXs&amp;kUL:&amp;:pPVu&gt;nS-t89M9kKB&gt;pDV3CIiTGjrGRMUZbFk<span class="pl-c2"></span>%\fK3VMUW-D&amp;&amp;MCC:q-c3-&gt;u.14u2a1VK&lt;8mG[fG9(6maK$]TJF)1&amp;[,D*!kK-=62)dl!$&gt;+0Nd1&gt;smqn)&#39;.-_MRqhP9%P2KdPZhl<span class="pl-c2"></span>%OZLUEM3LK!m2h)[N*s51fX?O*H,c4fI8(Qa\Mqo&amp;VO9LW0r=1AZf1SnAB`ju5dHmH6d&lt;NogYsIY*q^sbd4^Vq^r1BI?CRO`ee(3N<span class="pl-c2"></span>%^&quot;pKE]6j2im0BA$$)+IDQFWY9R!!fh&#39;=R`&lt;-EuonUeR$Y2Dk]iV7m:7&amp;r&amp;($LVRcXI`dij3!RmjM_h&amp;i0l+)e7\pF&lt;WuX&lt;]0iG?u<span class="pl-c2"></span>%g*L_j&#39;q?^LhNSW)gD@dtFQ)]&#39;^\e&quot;J]Dq9emf3*D]@VPFHhI&amp;UrU%&#39;9IXM+`^WY)-?erDAos]^#QbPaJr-Z1?h7`^XnG.,)nDV:*<span class="pl-c2"></span>%kD/6D0Dg7eh`Y7/4b%jjgjf1bj*q3bRt1G&amp;+$]bjo(K]]p&quot;uC5T,r0U\,4eGs6tD]HN3Slr&lt;)f_0$j9Ys&#39;?arA!EU7HMI$n&amp;+=\A<span class="pl-c2"></span>%oa=aVI(XoUqX4==eP8*&lt;5krO?oDZK8^Y\4Is75m0:OAFp&amp;&#39;nVXbbNDK$idtJ5$tJAYP.PPe[L&amp;,e(t$)m`HBM~&gt;<span class="pl-c2"></span>%AI9_PrivateDataEnd<span class="pl-c2"></span></td>
      </tr>
</table>

  </div>

</div>

<button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
<div id="jump-to-line" style="display:none">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>


    </div>
  </div>

  </div>

      <div class="container site-footer-container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2017 <span title="0.16147s from github-fe124-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



  

  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
    You can't perform that action at this time.
  </div>


    
    <script crossorigin="anonymous" integrity="sha256-UGFpyy/nYlS5IejJRN1AblyrLXGeZX6s6K2phIYjFHI=" src="https://assets-cdn.github.com/assets/frameworks-506169cb2fe76254b921e8c944dd406e5cab2d719e657eace8ada98486231472.js"></script>
    <script async="async" crossorigin="anonymous" integrity="sha256-yg11k+AvZvDgd+avAOJ3fbxOiSjWG4gHgTHpNE0GXzI=" src="https://assets-cdn.github.com/assets/github-ca0d7593e02f66f0e077e6af00e2777dbc4e8928d61b88078131e9344d065f32.js"></script>
    
    
    
    
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>


  </body>
</html>

